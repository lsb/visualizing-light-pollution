{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport { config, formatValue, equals as _equals, isArray } from '../../lib/common';\n\nvar MathArray = function (_Array) {\n  _inherits(MathArray, _Array);\n\n  function MathArray() {\n    _classCallCheck(this, MathArray);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MathArray).apply(this, arguments));\n  }\n\n  _createClass(MathArray, [{\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor().copy(this);\n    }\n  }, {\n    key: \"from\",\n    value: function from(arrayOrObject) {\n      return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = array[i + offset];\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"to\",\n    value: function to(arrayOrObject) {\n      if (arrayOrObject === this) {\n        return this;\n      }\n\n      return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n    }\n  }, {\n    key: \"toTarget\",\n    value: function toTarget(target) {\n      return target ? this.to(target) : this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        array[offset + i] = this[i];\n      }\n\n      return array;\n    }\n  }, {\n    key: \"toFloat32Array\",\n    value: function toFloat32Array() {\n      return new Float32Array(this);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.formatString(config);\n    }\n  }, {\n    key: \"formatString\",\n    value: function formatString(opts) {\n      var string = '';\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n      }\n\n      return \"\".concat(opts.printTypes ? this.constructor.name : '', \"[\").concat(string, \"]\");\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(array) {\n      if (!array || this.length !== array.length) {\n        return false;\n      }\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        if (!_equals(this[i], array[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"exactEquals\",\n    value: function exactEquals(array) {\n      if (!array || this.length !== array.length) {\n        return false;\n      }\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        if (this[i] !== array[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = -this[i];\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(a, b, t) {\n      if (t === undefined) {\n        t = b;\n        b = a;\n        a = this;\n      }\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var ai = a[i];\n        this[i] = ai + t * (b[i] - ai);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"min\",\n    value: function min(vector) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = Math.min(vector[i], this[i]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"max\",\n    value: function max(vector) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = Math.max(vector[i], this[i]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(minVector, maxVector) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] += vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] -= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(_scale) {\n      if (Array.isArray(_scale)) {\n        return this.multiply(_scale);\n      }\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= _scale;\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(a) {\n      return this.subtract(a);\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(a) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = a;\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(a) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += a;\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"subScalar\",\n    value: function subScalar(a) {\n      return this.addScalar(-a);\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(scalar) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= scalar;\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divideScalar\",\n    value: function divideScalar(a) {\n      return this.scale(1 / a);\n    }\n  }, {\n    key: \"clampScalar\",\n    value: function clampScalar(min, max) {\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        this[i] = Math.min(Math.max(this[i], min), max);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiplyByScalar\",\n    value: function multiplyByScalar(scalar) {\n      return this.scale(scalar);\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (config.debug && !this.validate(this)) {\n        throw new Error(\"math.gl: \".concat(this.constructor.name, \" some fields set to invalid numbers'\"));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var valid = this.length === this.ELEMENTS;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        valid = valid && Number.isFinite(this[i]);\n      }\n\n      return valid;\n    }\n  }, {\n    key: \"elements\",\n    get: function get() {\n      return this;\n    }\n  }]);\n\n  return MathArray;\n}(_wrapNativeSuper(Array));\n\nexport { MathArray as default };","map":{"version":3,"sources":["../../../../src/classes/base/math-array.js"],"names":["equals","MathArray","Array","arrayOrObject","array","offset","i","isArray","target","opts","string","formatValue","a","b","t","ai","vector","Math","minVector","maxVector","vectors","scale","scalar","min","max","config","valid","Number"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config, formatValue, equals, isArray} from '../../lib/common';\n\nexport default class MathArray extends Array {\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  from(arrayOrObject) {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  to(arrayOrObject) {\n    if (arrayOrObject === this) {\n      return this;\n    }\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target) {\n    return target ? this.to(target) : this;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this; // eslint-disable-line\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n    return this.check();\n  }\n\n  // three.js compatibility\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(scalar) {\n    // Multiplies all elements\n    // `Matrix4.scale` only scales its 3x3 \"minor\"\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n\n  // Cesium compatibility\n\n  multiplyByScalar(scalar) {\n    return this.scale(scalar);\n  }\n\n  // THREE.js compatibility\n  get elements() {\n    return this;\n  }\n\n  // Debug checks\n\n  check() {\n    if (config.debug && !this.validate(this)) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  validate() {\n    let valid = this.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n    return valid;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}