{"ast":null,"code":"import lights from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\nvar gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms: getUniforms\n};\nvar phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms: getUniforms\n};\nvar INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  var _material$ambient = material.ambient,\n      ambient = _material$ambient === void 0 ? 0.35 : _material$ambient,\n      _material$diffuse = material.diffuse,\n      diffuse = _material$diffuse === void 0 ? 0.6 : _material$diffuse,\n      _material$shininess = material.shininess,\n      shininess = _material$shininess === void 0 ? 32 : _material$shininess,\n      _material$specularCol = material.specularColor,\n      specularColor = _material$specularCol === void 0 ? [30, 30, 30] : _material$specularCol;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(function (x) {\n      return x / 255;\n    })\n  };\n}\n\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  var material = opts.material;\n\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport { gouraudLighting, phongLighting };","map":{"version":3,"sources":["../../../../src/modules/phong-lighting/phong-lighting.js"],"names":["gouraudLighting","name","dependencies","vs","defines","LIGHTING_VERTEX","getUniforms","phongLighting","fs","LIGHTING_FRAGMENT","INITIAL_MODULE_OPTIONS","ambient","diffuse","shininess","specularColor","material","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","x","opts","lighting_uEnabled","getMaterialUniforms"],"mappings":"AAAA,OAAA,MAAA,MAAA,kBAAA;AACA,OAAA,cAAA,MAAA,uBAAA;AAEA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,IAAI,EADkB,kBAAA;AAEtBC,EAAAA,YAAY,EAAE,CAFQ,MAER,CAFQ;AAGtBC,EAAAA,EAAE,EAHoB,cAAA;AAItBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE;AADV,GAJa;AAOtBC,EAAAA,WAAW,EAAXA;AAPsB,CAAxB;AAUA,IAAMC,aAAa,GAAG;AACpBN,EAAAA,IAAI,EADgB,gBAAA;AAEpBC,EAAAA,YAAY,EAAE,CAFM,MAEN,CAFM;AAGpBM,EAAAA,EAAE,EAHkB,cAAA;AAIpBJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,iBAAiB,EAAE;AADZ,GAJW;AAOpBH,EAAAA,WAAW,EAAXA;AAPoB,CAAtB;AAUA,IAAMI,sBAAsB,GAA5B,EAAA;;AAEA,SAAA,mBAAA,CAAA,QAAA,EAAuC;AAAA,MAAA,iBAAA,GACiDK,QADjD,CAAA,OAAA;AAAA,MAC9BJ,OAD8B,GAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,iBAAA;AAAA,MAAA,iBAAA,GACiDI,QADjD,CAAA,OAAA;AAAA,MACdH,OADc,GAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,GAAA,GAAA,iBAAA;AAAA,MAAA,mBAAA,GACiDG,QADjD,CAAA,SAAA;AAAA,MACCF,SADD,GAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,mBAAA;AAAA,MAAA,qBAAA,GACiDE,QADjD,CAAA,aAAA;AAAA,MACiBD,aADjB,GAAA,qBAAA,KAAA,KAAA,CAAA,GACiC,CAAA,EAAA,EAAA,EAAA,EADjC,EACiC,CADjC,GAAA,qBAAA;AAGrC,SAAO;AACLE,IAAAA,iBAAiB,EADZ,OAAA;AAELC,IAAAA,iBAAiB,EAFZ,OAAA;AAGLC,IAAAA,mBAAmB,EAHd,SAAA;AAILC,IAAAA,uBAAuB,EAAE,aAAa,CAAb,GAAA,CAAkB,UAAA,CAAA,EAAC;AAAA,aAAIC,CAAC,GAAL,GAAA;AAAnB,KAAA;AAJpB,GAAP;AAMD;;AAED,SAAA,WAAA,GAAoD;AAAA,MAA/BC,IAA+B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAxBX,sBAAwB;;AAClD,MAAI,EAAE,cAAN,IAAI,CAAJ,EAA2B;AACzB,WAAA,EAAA;AACD;;AAHiD,MAK3CK,QAL2C,GAK/BM,IAL+B,CAAA,QAAA;;AAOlD,MAAI,CAAJ,QAAA,EAAe;AACb,WAAO;AAACC,MAAAA,iBAAiB,EAAE;AAApB,KAAP;AACD;;AAED,SAAOC,mBAAmB,CAA1B,QAA0B,CAA1B;AACD;;AAED,SAAA,eAAA,EAAA,aAAA","sourcesContent":["import lights from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\n\nconst gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\n\nconst phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {ambient = 0.35, diffuse = 0.6, shininess = 32, specularColor = [30, 30, 30]} = material;\n\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {material} = opts;\n\n  if (!material) {\n    return {lighting_uEnabled: false};\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport {gouraudLighting, phongLighting};\n"]},"metadata":{},"sourceType":"module"}