{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar isObject = function isObject(value) {\n  return value && _typeof(value) === 'object';\n};\n\nexport function asyncDeepMap(_x, _x2) {\n  return _asyncDeepMap.apply(this, arguments);\n}\n\nfunction _asyncDeepMap() {\n  _asyncDeepMap = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(tree, func) {\n    var options,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            _context.next = 3;\n            return mapSubtree(tree, func, options);\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _asyncDeepMap.apply(this, arguments);\n}\n\nexport function mapSubtree(_x3, _x4, _x5) {\n  return _mapSubtree.apply(this, arguments);\n}\n\nfunction _mapSubtree() {\n  _mapSubtree = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(object, func, options) {\n    var url;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!Array.isArray(object)) {\n              _context2.next = 4;\n              break;\n            }\n\n            _context2.next = 3;\n            return mapArray(object, func, options);\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 4:\n            if (!isObject(object)) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 7;\n            return mapObject(object, func, options);\n\n          case 7:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 8:\n            url = object;\n            _context2.next = 11;\n            return func(url, options);\n\n          case 11:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _mapSubtree.apply(this, arguments);\n}\n\nfunction mapObject(_x6, _x7, _x8) {\n  return _mapObject.apply(this, arguments);\n}\n\nfunction _mapObject() {\n  _mapObject = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(object, func, options) {\n    var promises, values, _loop, key;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            promises = [];\n            values = {};\n\n            _loop = function _loop(key) {\n              var url = object[key];\n              var promise = mapSubtree(url, func, options).then(function (value) {\n                values[key] = value;\n              });\n              promises.push(promise);\n            };\n\n            for (key in object) {\n              _loop(key);\n            }\n\n            _context3.next = 6;\n            return Promise.all(promises);\n\n          case 6:\n            return _context3.abrupt(\"return\", values);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _mapObject.apply(this, arguments);\n}\n\nfunction mapArray(_x9, _x10) {\n  return _mapArray.apply(this, arguments);\n}\n\nfunction _mapArray() {\n  _mapArray = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(urlArray, func) {\n    var options,\n        promises,\n        _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n            promises = urlArray.map(function (url) {\n              return mapSubtree(url, func, options);\n            });\n            _context4.next = 4;\n            return Promise.all(promises);\n\n          case 4:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _mapArray.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/lib/texture-loading-api/async-deep-map.js"],"names":["isObject","value","options","mapSubtree","Array","mapArray","mapObject","url","func","promises","values","key","object","promise","Promise"],"mappings":"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","sourcesContent":["/*\nAsynchronously maps a deep structure of values (e.g. objects and arrays of urls).\n\nE.g. a mipmapped cubemap\n{\n  [CUBE_FACE_FRONT]: [\n    \"image-front-0.jpg\",\n    \"image-front-1.jpg\",\n    \"image-front-2.jpg\",\n  ],\n  [CUBE_MAP_BACK]: [\n    ...\n  ]\n}\n*/\n\nconst isObject = value => value && typeof value === 'object';\n\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n  return await mapSubtree(tree, func, options);\n}\n\nexport async function mapSubtree(object, func, options) {\n  if (Array.isArray(object)) {\n    return await mapArray(object, func, options);\n  }\n\n  if (isObject(object)) {\n    return await mapObject(object, func, options);\n  }\n\n  // TODO - ignore non-urls, non-arraybuffers?\n  const url = object;\n  return await func(url, options);\n}\n\n// HELPERS\n\nasync function mapObject(object, func, options) {\n  const promises = [];\n  const values = {};\n\n  for (const key in object) {\n    const url = object[key];\n    const promise = mapSubtree(url, func, options).then(value => {\n      values[key] = value;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return values;\n}\n\nasync function mapArray(urlArray, func, options = {}) {\n  const promises = urlArray.map(url => mapSubtree(url, func, options));\n  return await Promise.all(promises);\n}\n"]},"metadata":{},"sourceType":"module"}