{"ast":null,"code":"export var KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\nexport var UBER_POINT_CLOUD_EXTENSION = 'UBER_draco_point_cloud_compression';\nexport var KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nexport var KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nexport var KHR_TECHNIQUES_WEBGL = 'KHR_techniques_webgl';\nvar COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\nvar BYTES = {\n  5120: 1,\n  5121: 1,\n  5122: 2,\n  5123: 2,\n  5125: 4,\n  5126: 4\n};\nexport function getBytesFromComponentType(componentType) {\n  return BYTES[componentType];\n}\nexport function getSizeFromAccessorType(type) {\n  return COMPONENTS[type];\n}\nexport function getGLEnumFromSamplerParameter(parameter) {\n  var GL_TEXTURE_MAG_FILTER = 0x2800;\n  var GL_TEXTURE_MIN_FILTER = 0x2801;\n  var GL_TEXTURE_WRAP_S = 0x2802;\n  var GL_TEXTURE_WRAP_T = 0x2803;\n  var PARAMETER_MAP = {\n    magFilter: GL_TEXTURE_MAG_FILTER,\n    minFilter: GL_TEXTURE_MIN_FILTER,\n    wrapS: GL_TEXTURE_WRAP_S,\n    wrapT: GL_TEXTURE_WRAP_T\n  };\n  return PARAMETER_MAP[parameter];\n}","map":{"version":3,"sources":["../../../src/lib/gltf-constants.js"],"names":["KHR_DRACO_MESH_COMPRESSION","UBER_POINT_CLOUD_EXTENSION","KHR_LIGHTS_PUNCTUAL","KHR_MATERIALS_UNLIT","KHR_TECHNIQUES_WEBGL","COMPONENTS","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","BYTES","GL_TEXTURE_MAG_FILTER","GL_TEXTURE_MIN_FILTER","GL_TEXTURE_WRAP_S","GL_TEXTURE_WRAP_T","PARAMETER_MAP","magFilter","minFilter","wrapS","wrapT"],"mappings":"AAGA,OAAO,IAAMA,0BAA0B,GAAhC,4BAAA;AACP,OAAO,IAAMC,0BAA0B,GAAhC,oCAAA;AACP,OAAO,IAAMC,mBAAmB,GAAzB,qBAAA;AACP,OAAO,IAAMC,mBAAmB,GAAzB,qBAAA;AACP,OAAO,IAAMC,oBAAoB,GAA1B,sBAAA;AAEP,IAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EADW,CAAA;AAEjBC,EAAAA,IAAI,EAFa,CAAA;AAGjBC,EAAAA,IAAI,EAHa,CAAA;AAIjBC,EAAAA,IAAI,EAJa,CAAA;AAKjBC,EAAAA,IAAI,EALa,CAAA;AAMjBC,EAAAA,IAAI,EANa,CAAA;AAOjBC,EAAAA,IAAI,EAAE;AAPW,CAAnB;AAUA,IAAMC,KAAK,GAAG;AACZ,QADY,CAAA;AAEZ,QAFY,CAAA;AAGZ,QAHY,CAAA;AAIZ,QAJY,CAAA;AAKZ,QALY,CAAA;AAMZ,QAAM;AANM,CAAd;AAWA,OAAO,SAAA,yBAAA,CAAA,aAAA,EAAkD;AACvD,SAAOA,KAAK,CAAZ,aAAY,CAAZ;AACD;AAED,OAAO,SAAA,uBAAA,CAAA,IAAA,EAAuC;AAC5C,SAAOR,UAAU,CAAjB,IAAiB,CAAjB;AACD;AAED,OAAO,SAAA,6BAAA,CAAA,SAAA,EAAkD;AACvD,MAAMS,qBAAqB,GAA3B,MAAA;AACA,MAAMC,qBAAqB,GAA3B,MAAA;AACA,MAAMC,iBAAiB,GAAvB,MAAA;AACA,MAAMC,iBAAiB,GAAvB,MAAA;AAEA,MAAMC,aAAa,GAAG;AACpBC,IAAAA,SAAS,EADW,qBAAA;AAEpBC,IAAAA,SAAS,EAFW,qBAAA;AAGpBC,IAAAA,KAAK,EAHe,iBAAA;AAIpBC,IAAAA,KAAK,EAAEL;AAJa,GAAtB;AAOA,SAAOC,aAAa,CAApB,SAAoB,CAApB;AACD","sourcesContent":["// GLTF extension\n\n// Ideally we should just use KHR_draco_mesh_compression, but it does not support point clouds\nexport const KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\nexport const UBER_POINT_CLOUD_EXTENSION = 'UBER_draco_point_cloud_compression';\nexport const KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nexport const KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nexport const KHR_TECHNIQUES_WEBGL = 'KHR_techniques_webgl';\n\nconst COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst BYTES = {\n  5120: 1, // BYTE\n  5121: 1, // UNSIGNED_BYTE\n  5122: 2, // SHORT\n  5123: 2, // UNSIGNED_SHORT\n  5125: 4, // UNSIGNED_INT\n  5126: 4 // FLOAT\n};\n\n// ENUM LOOKUP\n\nexport function getBytesFromComponentType(componentType) {\n  return BYTES[componentType];\n}\n\nexport function getSizeFromAccessorType(type) {\n  return COMPONENTS[type];\n}\n\nexport function getGLEnumFromSamplerParameter(parameter) {\n  const GL_TEXTURE_MAG_FILTER = 0x2800;\n  const GL_TEXTURE_MIN_FILTER = 0x2801;\n  const GL_TEXTURE_WRAP_S = 0x2802;\n  const GL_TEXTURE_WRAP_T = 0x2803;\n\n  const PARAMETER_MAP = {\n    magFilter: GL_TEXTURE_MAG_FILTER,\n    minFilter: GL_TEXTURE_MIN_FILTER,\n    wrapS: GL_TEXTURE_WRAP_S,\n    wrapT: GL_TEXTURE_WRAP_T\n  };\n\n  return PARAMETER_MAP[parameter];\n}\n"]},"metadata":{},"sourceType":"module"}