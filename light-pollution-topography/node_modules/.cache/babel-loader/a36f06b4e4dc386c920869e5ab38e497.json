{"ast":null,"code":"'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n  // Public\n  this.properties = {};\n  this.extent = extent;\n  this.type = 0; // Private\n\n  this._pbf = pbf;\n  this._geometry = -1;\n  this._keys = keys;\n  this._values = values;\n  pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n  if (tag == 1) feature.id = pbf.readVarint();else if (tag == 2) readTag(pbf, feature);else if (tag == 3) feature.type = pbf.readVarint();else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n  var end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    var key = feature._keys[pbf.readVarint()],\n        value = feature._values[pbf.readVarint()];\n\n    feature.properties[key] = value;\n  }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function () {\n  var pbf = this._pbf;\n  pbf.pos = this._geometry;\n  var end = pbf.readVarint() + pbf.pos,\n      cmd = 1,\n      length = 0,\n      x = 0,\n      y = 0,\n      lines = [],\n      line;\n\n  while (pbf.pos < end) {\n    if (length <= 0) {\n      var cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n\n    length--;\n\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n\n      if (cmd === 1) {\n        // moveTo\n        if (line) lines.push(line);\n        line = [];\n      }\n\n      line.push(new Point(x, y));\n    } else if (cmd === 7) {\n      // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n      if (line) {\n        line.push(line[0].clone()); // closePolygon\n      }\n    } else {\n      throw new Error('unknown command ' + cmd);\n    }\n  }\n\n  if (line) lines.push(line);\n  return lines;\n};\n\nVectorTileFeature.prototype.bbox = function () {\n  var pbf = this._pbf;\n  pbf.pos = this._geometry;\n  var end = pbf.readVarint() + pbf.pos,\n      cmd = 1,\n      length = 0,\n      x = 0,\n      y = 0,\n      x1 = Infinity,\n      x2 = -Infinity,\n      y1 = Infinity,\n      y2 = -Infinity;\n\n  while (pbf.pos < end) {\n    if (length <= 0) {\n      var cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n\n    length--;\n\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n      if (x < x1) x1 = x;\n      if (x > x2) x2 = x;\n      if (y < y1) y1 = y;\n      if (y > y2) y2 = y;\n    } else if (cmd !== 7) {\n      throw new Error('unknown command ' + cmd);\n    }\n  }\n\n  return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function (x, y, z) {\n  var size = this.extent * Math.pow(2, z),\n      x0 = this.extent * x,\n      y0 = this.extent * y,\n      coords = this.loadGeometry(),\n      type = VectorTileFeature.types[this.type],\n      i,\n      j;\n\n  function project(line) {\n    for (var j = 0; j < line.length; j++) {\n      var p = line[j],\n          y2 = 180 - (p.y + y0) * 360 / size;\n      line[j] = [(p.x + x0) * 360 / size - 180, 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90];\n    }\n  }\n\n  switch (this.type) {\n    case 1:\n      var points = [];\n\n      for (i = 0; i < coords.length; i++) {\n        points[i] = coords[i][0];\n      }\n\n      coords = points;\n      project(coords);\n      break;\n\n    case 2:\n      for (i = 0; i < coords.length; i++) {\n        project(coords[i]);\n      }\n\n      break;\n\n    case 3:\n      coords = classifyRings(coords);\n\n      for (i = 0; i < coords.length; i++) {\n        for (j = 0; j < coords[i].length; j++) {\n          project(coords[i][j]);\n        }\n      }\n\n      break;\n  }\n\n  if (coords.length === 1) {\n    coords = coords[0];\n  } else {\n    type = 'Multi' + type;\n  }\n\n  var result = {\n    type: \"Feature\",\n    geometry: {\n      type: type,\n      coordinates: coords\n    },\n    properties: this.properties\n  };\n\n  if ('id' in this) {\n    result.id = this.id;\n  }\n\n  return result;\n}; // classifies an array of rings into polygons with outer rings and holes\n\n\nfunction classifyRings(rings) {\n  var len = rings.length;\n  if (len <= 1) return [rings];\n  var polygons = [],\n      polygon,\n      ccw;\n\n  for (var i = 0; i < len; i++) {\n    var area = signedArea(rings[i]);\n    if (area === 0) continue;\n    if (ccw === undefined) ccw = area < 0;\n\n    if (ccw === area < 0) {\n      if (polygon) polygons.push(polygon);\n      polygon = [rings[i]];\n    } else {\n      polygon.push(rings[i]);\n    }\n  }\n\n  if (polygon) polygons.push(polygon);\n  return polygons;\n}\n\nfunction signedArea(ring) {\n  var sum = 0;\n\n  for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2.x - p1.x) * (p1.y + p2.y);\n  }\n\n  return sum;\n}","map":{"version":3,"sources":["/home/lsb/wikidatageo/light-pollution-topography/node_modules/@mapbox/vector-tile/lib/vectortilefeature.js"],"names":["Point","require","module","exports","VectorTileFeature","pbf","end","extent","keys","values","properties","type","_pbf","_geometry","_keys","_values","readFields","readFeature","tag","feature","id","readVarint","readTag","pos","key","value","types","prototype","loadGeometry","cmd","length","x","y","lines","line","cmdLen","readSVarint","push","clone","Error","bbox","x1","Infinity","x2","y1","y2","toGeoJSON","z","size","Math","pow","x0","y0","coords","i","j","project","p","PI","atan","exp","points","classifyRings","result","geometry","coordinates","rings","len","polygons","polygon","ccw","area","signedArea","undefined","ring","sum","p1","p2"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n"]},"metadata":{},"sourceType":"script"}