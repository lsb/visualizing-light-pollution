{"ast":null,"code":"var _jsxFileName = \"/home/lsb/wikidatageo/dark-sky-vacations/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport DeckGL from '@deck.gl/react';\nimport { TerrainLayer, TileLayer } from '@deck.gl/geo-layers';\nimport { BitmapLayer, ScatterplotLayer, TextLayer } from '@deck.gl/layers';\nimport { Table } from 'apache-arrow';\n\nconst logAndReturn = x => {\n  console.log(x);\n  return x;\n};\n\nconst santaOffTheMap = [0, 89]; // todo: toggle visibility of layer instead of changing every GPU float buffer\n\nconst uniqueCharactersFromStart = (length, array) => Array.from({\n  length\n}, (e, i) => new Set(array[i].split(\"\"))).reduce((a, b) => new Set([...a, ...b]));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      watery: false,\n      loglabelspertile: 3,\n      initialViewState: {\n        longitude: -122.4,\n        latitude: 37.7,\n        zoom: 5,\n        pitch: 0 * 30,\n        bearing: 0,\n        maxZoom: 16\n      }\n    };\n  }\n\n  render() {\n    const {\n      watery,\n      loglabelspertile\n    } = this.state;\n    const labelspertile = Math.floor(Math.pow(10, loglabelspertile / 2));\n    const light = new TileLayer({\n      data: './tiles/texture-{z}-{x}-{y}.png',\n      id: 'light',\n      tileSize: 256,\n      maxZoom: 8,\n      wrapLongitude: true,\n      renderSubLayers: props => new BitmapLayer(props, {\n        data: null,\n        image: props.data,\n        bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north]\n      })\n    });\n    const lumaTopo = new TerrainLayer({\n      elevationDecoder: {\n        rScaler: 1024,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0\n      },\n      meshMaxError: 1,\n      elevationData: './tiles/light-{z}-{x}-{y}.png',\n      maxZoom: 2,\n      wrapLongitude: true,\n      texture: './tiles/texture-{z}-{x}-{y}.png',\n      material: {\n        ambient: 0.2,\n        diffuse: 1,\n        shininess: 128,\n        specularColor: [255, 192, 64]\n      }\n    });\n    const basePoints = [false, true].map(watertile => new TileLayer({\n      data: `./data-tiles/geo-tile-{z}-{x}-{y}-light-0.arrow`,\n      id: `point-tile-${watertile}`,\n      visible: watertile === watery,\n      maxZoom: 3,\n      minZoom: 3,\n      wrapLongitude: true,\n      getTileData: ({\n        url\n      }) => fetch(url).then(data => data.ok ? Table.from(data).then(d => ({\n        lng: d.getColumn('gt_lon').toArray(),\n        lat: d.getColumn('gt_lat').toArray(),\n        w: d.getColumn('watery').toArray(),\n        length: d.getColumn('watery').toArray().length\n      })) : (console.log({\n        notok: data\n      }), [])),\n      renderSubLayers: ({\n        tile: {\n          bbox: {\n            north,\n            south,\n            east,\n            west\n          }\n        },\n        data\n      }) => [new ScatterplotLayer({\n        id: `points-${north}-${south}-${east}-${west}-${watertile}`,\n        data,\n        lineWidthUnits: 'pixels',\n        radiusMinPixels: 10,\n        radiusMaxPixels: 40,\n        getRadius: 40,\n        wrapLongitude: true,\n        visible: watertile == watery,\n        // todo: why double and not triple equals, only when dragging the map!\n        getPosition: (object, {\n          index,\n          data: {\n            lng,\n            lat,\n            w\n          }\n        }) => watertile !== w[index] ? santaOffTheMap : [lng[index], lat[index]],\n        getFillColor: [0, 128, 255],\n        getLineColor: [0, 0, 0]\n      })]\n    }));\n    const textAbovePoints = [false, true].map(watertile => new TileLayer({\n      data: `./data-tiles/geo-tile-{z}-{x}-{y}-light-0.arrow`,\n      id: `text-tile-${watertile}-${loglabelspertile}`,\n      visible: watertile === watery,\n      maxZoom: 6,\n      minZoom: 3,\n      wrapLongitude: true,\n      getTileData: ({\n        url\n      }) => fetch(url).then(data => data.ok ? Table.from(data).then(d => ({\n        lng: d.getColumn('gt_lon').toArray(),\n        lat: d.getColumn('gt_lat').toArray(),\n        w: d.getColumn('watery').toArray(),\n        site_page: d.getColumn('site_page').toArray(),\n        length: labelspertile // d.getColumn('watery').toArray().length,\n\n      })) : (console.log({\n        notok: data\n      }), [])),\n      renderSubLayers: ({\n        tile: {\n          bbox: {\n            north,\n            south,\n            east,\n            west\n          }\n        },\n        data\n      }) => [new TextLayer({\n        id: `text-${north}-${south}-${east}-${west}-${watertile}`,\n        data,\n        //characterSet: uniqueCharactersFromStart(labelspertile, data),\n        fontSize: 1,\n        buffer: 0,\n        backgroundColor: [204, 153, 51],\n        getSize: 20,\n        visible: watertile == watery,\n        getText: (object, {\n          index,\n          data: {\n            site_page,\n            w\n          }\n        }) => watertile !== w[index] ? ' ' : site_page[index].replace(/ [(][^)]+[)]$/, ''),\n        lineHeight: 2.0,\n        sizeUnits: 'pixels',\n        wrapLongitude: true,\n        getPosition: (object, {\n          index,\n          data: {\n            lng,\n            lat,\n            w\n          }\n        }) => watertile !== w[index] ? santaOffTheMap : [lng[index], lat[index]]\n      })]\n    })); // console.log({state: this.state});\n\n    const textPick = !this.state.pointpick ? null : new TextLayer({\n      id: `title-${this.state.pointpick.item_id}`,\n      data: [this.state.pointpick.site_page],\n      pickable: false,\n      characterSet: this.state.pointpick.site_page.split(''),\n      backgroundColor: [255, 255, 255],\n      getText: d => `   ${d}   `,\n      getSize: 20,\n      lineHeight: 2.0,\n      sizeUnits: 'pixels',\n      wrapLongitude: true,\n      getPosition: [this.state.pointpick.gt_lon, this.state.pointpick.gt_lat]\n    });\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DeckGL, {\n      initialViewState: this.state.initialViewState,\n      controller: true,\n      layers: [light, basePoints, null && lumaTopo, textAbovePoints, textPick],\n      id: \"maincanvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tweaks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"colophon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"\\xA9 Lee Butterman 2020. Made in Oakland, California.\"), \"Tweaks:\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tweaks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Tweaks:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"watery\",\n      type: \"checkbox\",\n      checked: watery,\n      onChange: e => this.setState({\n        watery: e.target.checked\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"watery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, watery ? \"Water only, I am on a boat\" : \"No water, I am on dry land\", \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 116\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"loglabelspertile\",\n      type: \"range\",\n      min: \"-1\",\n      max: \"6\",\n      step: \"1\",\n      value: loglabelspertile,\n      onChange: e => this.setState({\n        loglabelspertile: e.target.value * 1\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }), \"Display \", labelspertile, \".0 labels per tile \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 55\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lsb/wikidatageo/dark-sky-vacations/src/App.js"],"names":["React","DeckGL","TerrainLayer","TileLayer","BitmapLayer","ScatterplotLayer","TextLayer","Table","logAndReturn","x","console","log","santaOffTheMap","uniqueCharactersFromStart","length","array","Array","from","e","i","Set","split","reduce","a","b","App","Component","constructor","props","state","watery","loglabelspertile","initialViewState","longitude","latitude","zoom","pitch","bearing","maxZoom","render","labelspertile","Math","floor","pow","light","data","id","tileSize","wrapLongitude","renderSubLayers","image","bounds","tile","bbox","west","south","east","north","lumaTopo","elevationDecoder","rScaler","gScaler","bScaler","offset","meshMaxError","elevationData","texture","material","ambient","diffuse","shininess","specularColor","basePoints","map","watertile","visible","minZoom","getTileData","url","fetch","then","ok","d","lng","getColumn","toArray","lat","w","notok","lineWidthUnits","radiusMinPixels","radiusMaxPixels","getRadius","getPosition","object","index","getFillColor","getLineColor","textAbovePoints","site_page","fontSize","buffer","backgroundColor","getSize","getText","replace","lineHeight","sizeUnits","textPick","pointpick","item_id","pickable","characterSet","gt_lon","gt_lat","setState","target","checked","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport DeckGL from '@deck.gl/react';\nimport { TerrainLayer, TileLayer } from '@deck.gl/geo-layers';\nimport { BitmapLayer, ScatterplotLayer, TextLayer } from '@deck.gl/layers';\nimport { Table } from 'apache-arrow';\nconst logAndReturn = x => { console.log(x); return x; };\nconst santaOffTheMap = [0,89]; // todo: toggle visibility of layer instead of changing every GPU float buffer\nconst uniqueCharactersFromStart = (length, array) => Array.from({length}, (e,i) => new Set(array[i].split(\"\"))).reduce((a,b) => new Set([...a,...b]));\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      watery: false,\n      loglabelspertile: 3,\n      initialViewState: {longitude: -122.4, latitude: 37.7, zoom: 5, pitch: 0 * 30, bearing: 0, maxZoom: 16},\n    }\n  }\n  render() {\n    const {watery, loglabelspertile} = this.state;\n    const labelspertile = Math.floor(Math.pow(10, loglabelspertile/2));\n    const light = new TileLayer({\n      data: './tiles/texture-{z}-{x}-{y}.png',\n      id: 'light',\n      tileSize: 256,\n      maxZoom: 8,\n      wrapLongitude: true,\n      renderSubLayers: props => (\n        new BitmapLayer((props), {\n          data: null,\n          image: props.data,\n          bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north],\n        })\n      )\n    })\n    const lumaTopo = new TerrainLayer({\n      elevationDecoder: {\n        rScaler: 1024,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0,\n      },\n      meshMaxError: 1,\n      elevationData: './tiles/light-{z}-{x}-{y}.png',\n      maxZoom: 2,\n      wrapLongitude: true,\n      texture: './tiles/texture-{z}-{x}-{y}.png',\n      material: {\n        ambient: 0.2,\n        diffuse: 1,\n        shininess: 128,\n        specularColor: [255, 192, 64]\n      }\n    });\n    const basePoints = [false, true].map(watertile => new TileLayer({\n      data: `./data-tiles/geo-tile-{z}-{x}-{y}-light-0.arrow`,\n      id: `point-tile-${watertile}`,\n      visible: watertile === watery,\n      maxZoom: 3,\n      minZoom: 3,\n      wrapLongitude: true,\n      getTileData: ({url}) => fetch(url).then(data =>\n        data.ok ? Table.from(data).then(d => ({\n          lng: d.getColumn('gt_lon').toArray(),\n          lat: d.getColumn('gt_lat').toArray(),\n          w: d.getColumn('watery').toArray(),\n          length: d.getColumn('watery').toArray().length,\n        })) : (console.log({notok: data}),[])),\n      renderSubLayers: ({tile: {bbox: {north, south, east, west}}, data}) => [\n        new ScatterplotLayer({\n          id: `points-${north}-${south}-${east}-${west}-${watertile}`,\n          data,\n          lineWidthUnits: 'pixels',\n          radiusMinPixels: 10,\n          radiusMaxPixels: 40,\n          getRadius: 40,\n          wrapLongitude: true,\n          visible: watertile == watery, // todo: why double and not triple equals, only when dragging the map!\n          getPosition: (object, {index, data: {lng, lat, w}}) => (watertile !== w[index]) ? santaOffTheMap : [lng[index], lat[index]],\n          getFillColor: [0,128,255],\n          getLineColor: [0,0,0],\n        }),\n      ],\n    }));\n    const textAbovePoints = [false, true].map(watertile => new TileLayer({\n      data: `./data-tiles/geo-tile-{z}-{x}-{y}-light-0.arrow`,\n      id: `text-tile-${watertile}-${loglabelspertile}`,\n      visible: watertile === watery,\n      maxZoom: 6,\n      minZoom: 3,\n      wrapLongitude: true,\n      getTileData: ({url}) => fetch(url).then(data =>\n        data.ok ? Table.from(data).then(d => ({\n          lng: d.getColumn('gt_lon').toArray(),\n          lat: d.getColumn('gt_lat').toArray(),\n          w: d.getColumn('watery').toArray(),\n          site_page: d.getColumn('site_page').toArray(),\n          length: labelspertile, // d.getColumn('watery').toArray().length,\n        })) : (console.log({notok: data}),[])),\n      renderSubLayers: ({tile: {bbox: {north, south, east, west}}, data}) => [\n        new TextLayer({\n          id: `text-${north}-${south}-${east}-${west}-${watertile}`,\n          data,\n          //characterSet: uniqueCharactersFromStart(labelspertile, data),\n          fontSize: 1,\n          buffer: 0,\n          backgroundColor: [204,153,51],\n          getSize: 20,\n          visible: watertile == watery,\n          getText: (object, {index, data: {site_page, w}}) => watertile !== w[index] ? ' ' : (site_page[index].replace(/ [(][^)]+[)]$/,'')) ,\n          lineHeight: 2.0,\n          sizeUnits: 'pixels',\n          wrapLongitude: true,\n          getPosition: (object, {index, data: {lng, lat, w}}) => watertile !== w[index] ? santaOffTheMap : [lng[index], lat[index]],\n        }),\n      ],\n    }));\n    // console.log({state: this.state});\n    const textPick = !this.state.pointpick ? null : new TextLayer({\n      id: `title-${this.state.pointpick.item_id}`,\n      data: [this.state.pointpick.site_page],\n      pickable: false,\n      characterSet: this.state.pointpick.site_page.split(''),\n      backgroundColor: [255,255,255],\n      getText: (d) => `   ${d}   `,\n      getSize: 20,\n      lineHeight: 2.0,\n      sizeUnits: 'pixels',\n      wrapLongitude: true,\n      getPosition: [this.state.pointpick.gt_lon, this.state.pointpick.gt_lat],\n    });\n    console.log(this.state);\n    return (\n      <div>\n        <div>\n          <DeckGL initialViewState={this.state.initialViewState} controller={true} layers={[light, basePoints, null && lumaTopo, textAbovePoints, textPick]} id={\"maincanvas\"} />\n        </div>\n        <div className=\"tweaks\">\n          <div id=\"colophon\">© Lee Butterman 2020. Made in Oakland, California.</div>\n          Tweaks:\n          <div id=\"tweaks\">\n            Tweaks:<br/>\n            <input id=\"watery\" type=\"checkbox\" checked={watery} onChange={e => this.setState({watery: e.target.checked})} />\n            <label htmlFor=\"watery\">{watery ? \"Water only, I am on a boat\" : \"No water, I am on dry land\"} </label><br/>\n            <input id=\"loglabelspertile\" type=\"range\" min=\"-1\" max=\"6\" step=\"1\" value={loglabelspertile} onChange={e => this.setState({loglabelspertile: e.target.value * 1})} />\n            Display {labelspertile}.0 labels per tile <br/>\n\n          </div>          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}