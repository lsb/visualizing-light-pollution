{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createElement } from 'react';\nimport { View } from '@deck.gl/core';\nimport { inheritsFrom } from './inherits-from';\nimport evaluateChildren from './evaluate-children';\nexport default function positionChildrenUnderViews(_ref) {\n  var children = _ref.children,\n      viewports = _ref.viewports,\n      deck = _ref.deck,\n      ContextProvider = _ref.ContextProvider;\n\n  var _ref2 = deck || {},\n      viewManager = _ref2.viewManager;\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  var views = {};\n  var defaultViewId = viewManager.views[0].id;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n      var viewId = defaultViewId;\n      var viewChildren = child;\n\n      if (inheritsFrom(child.type, View)) {\n        viewId = child.props.id || defaultViewId;\n        viewChildren = child.props.children;\n      }\n\n      var viewport = viewManager.getViewport(viewId);\n      var viewState = viewManager.getViewState(viewId);\n\n      if (viewport) {\n        var x = viewport.x,\n            y = viewport.y,\n            width = viewport.width,\n            height = viewport.height;\n        viewChildren = evaluateChildren(viewChildren, {\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          viewport: viewport,\n          viewState: viewState\n        });\n\n        if (!views[viewId]) {\n          views[viewId] = {\n            viewport: viewport,\n            children: []\n          };\n        }\n\n        views[viewId].children.push(viewChildren);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return Object.keys(views).map(function (viewId) {\n    var _views$viewId = views[viewId],\n        viewport = _views$viewId.viewport,\n        viewChildren = _views$viewId.children;\n    var x = viewport.x,\n        y = viewport.y,\n        width = viewport.width,\n        height = viewport.height;\n    var style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width: width,\n      height: height\n    };\n    var key = \"view-\".concat(viewId);\n    var viewElement = createElement.apply(void 0, ['div', {\n      key: key,\n      id: key,\n      style: style\n    }].concat(_toConsumableArray(viewChildren)));\n\n    if (ContextProvider) {\n      var contextValue = {\n        viewport: viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: function onViewStateChange(params) {\n          params.viewId = viewId;\n\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {\n        key: key,\n        value: contextValue\n      }, viewElement);\n    }\n\n    return viewElement;\n  });\n}","map":{"version":3,"sources":["../../../src/utils/position-children-under-views.js"],"names":["children","viewports","deck","ContextProvider","viewManager","views","defaultViewId","child","viewId","viewChildren","inheritsFrom","viewport","viewState","x","y","width","height","evaluateChildren","style","position","left","top","key","viewElement","id","contextValue","container","eventManager","onViewStateChange","params","createElement","value"],"mappings":"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","sourcesContent":["import {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren from './evaluate-children';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({children, viewports, deck, ContextProvider}) {\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views = {};\n  const defaultViewId = viewManager.views[0].id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}