{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport { DataType, Null, Bool, Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64, Float, Float16, Float32, Float64, Utf8, Binary, FixedSizeBinary, Date_, DateDay, DateMillisecond, Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond, Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond, Decimal, List, Struct, Union, DenseUnion, SparseUnion, Dictionary, Interval, IntervalDayTime, IntervalYearMonth, FixedSizeList, Map_ } from './type';\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport { Vector, BaseVector, BinaryVector, BoolVector, Chunked, DateVector, DateDayVector, DateMillisecondVector, DecimalVector, DictionaryVector, FixedSizeBinaryVector, FixedSizeListVector, FloatVector, Float16Vector, Float32Vector, Float64Vector, IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector, IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector, ListVector, MapVector, NullVector, StructVector, TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector, TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector, UnionVector, DenseUnionVector, SparseUnionVector, Utf8Vector } from './vector/index';\nexport { Builder, BinaryBuilder, BoolBuilder, DateBuilder, DateDayBuilder, DateMillisecondBuilder, DecimalBuilder, DictionaryBuilder, FixedSizeBinaryBuilder, FixedSizeListBuilder, FloatBuilder, Float16Builder, Float32Builder, Float64Builder, IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder, IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder, ListBuilder, MapBuilder, NullBuilder, StructBuilder, TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder, TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder, UnionBuilder, DenseUnionBuilder, SparseUnionBuilder, Utf8Builder } from './builder/index';\nexport { ByteStream, AsyncByteStream, AsyncByteQueue } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { DataFrame, FilteredDataFrame, CountByResult } from './compute/dataframe';\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\nexport { predicate };\n/** @ignore */\n\nexport const util = { ...util_bn_,\n  ...util_int_,\n  ...util_bit_,\n  ...util_math_,\n  ...util_buffer_,\n  ...util_vector_\n};","map":{"version":3,"sources":["Arrow.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n"]},"metadata":{},"sourceType":"module"}