{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };","map":{"version":3,"sources":["../../../src/classes/vector3.js"],"names":["ORIGIN","Vector3","Vector","x","y","z","arguments","isArray","config","checkNumber","array","object","value","vector","vec3","radians","origin","matrix4","vec3_transformMat4AsVector","matrix3","matrix2","vec3_transformMat2","quaternion"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\nimport * as vec3 from 'gl-matrix/vec3';\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\n\nexport default class Vector3 extends Vector {\n  constructor(x = 0, y = 0, z = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 3;\n  }\n\n  // x,y inherited from Vector\n\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}