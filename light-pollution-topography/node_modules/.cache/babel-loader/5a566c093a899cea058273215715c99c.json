{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { log } from '@deck.gl/core';\n\nvar Tile2DHeader = function () {\n  function Tile2DHeader(_ref) {\n    var x = _ref.x,\n        y = _ref.y,\n        z = _ref.z,\n        onTileLoad = _ref.onTileLoad,\n        onTileError = _ref.onTileError;\n\n    _classCallCheck(this, Tile2DHeader);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.parent = null;\n    this.children = [];\n    this.content = null;\n    this._isLoaded = false;\n    this.onTileLoad = onTileLoad;\n    this.onTileError = onTileError;\n  }\n\n  _createClass(Tile2DHeader, [{\n    key: \"loadData\",\n    value: function loadData(getTileData) {\n      var _this = this;\n\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          bbox = this.bbox;\n\n      if (!getTileData) {\n        return;\n      }\n\n      this._loader = Promise.resolve(getTileData({\n        x: x,\n        y: y,\n        z: z,\n        bbox: bbox\n      })).then(function (buffers) {\n        _this.content = buffers;\n        _this._isLoaded = true;\n\n        _this.onTileLoad(_this);\n\n        return buffers;\n      })[\"catch\"](function (err) {\n        _this._isLoaded = true;\n\n        _this.onTileError(err);\n      });\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._isLoaded ? this.content : this._loader;\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return this._isLoaded;\n    }\n  }, {\n    key: \"byteLength\",\n    get: function get() {\n      var result = this.content ? this.content.byteLength : 0;\n\n      if (!Number.isFinite(result)) {\n        log.error('byteLength not defined in tile data')();\n      }\n\n      return result;\n    }\n  }]);\n\n  return Tile2DHeader;\n}();\n\nexport { Tile2DHeader as default };","map":{"version":3,"sources":["../../../src/tile-layer/tile-2d-header.js"],"names":["Tile2DHeader","x","y","z","onTileLoad","onTileError","result","Number","log","getTileData","bbox"],"mappings":";;AAAA,SAAA,GAAA,QAAA,eAAA;;IAEqBA,Y;AACnB,WAAA,YAAA,CAAA,IAAA,EAAgD;AAAA,QAAnCC,CAAmC,GAAA,IAAA,CAAnCA,CAAmC;AAAA,QAAhCC,CAAgC,GAAA,IAAA,CAAhCA,CAAgC;AAAA,QAA7BC,CAA6B,GAAA,IAAA,CAA7BA,CAA6B;AAAA,QAA1BC,UAA0B,GAAA,IAAA,CAA1BA,UAA0B;AAAA,QAAdC,WAAc,GAAA,IAAA,CAAdA,WAAc;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;;AAC9C,SAAA,CAAA,GAAA,CAAA;AACA,SAAA,CAAA,GAAA,CAAA;AACA,SAAA,CAAA,GAAA,CAAA;AACA,SAAA,SAAA,GAAA,KAAA;AACA,SAAA,MAAA,GAAA,IAAA;AACA,SAAA,QAAA,GAAA,EAAA;AAEA,SAAA,OAAA,GAAA,IAAA;AACA,SAAA,SAAA,GAAA,KAAA;AAEA,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACD;;;;6BAkBQI,W,EAAa;AAAA,UAAA,KAAA,GAAA,IAAA;;AAAA,UACbR,CADa,GAAA,KAAA,CAAA;AAAA,UACVC,CADU,GAAA,KAAA,CAAA;AAAA,UACPC,CADO,GAAA,KAAA,CAAA;AAAA,UACJO,IADI,GAAA,KAAA,IAAA;;AAEpB,UAAI,CAAJ,WAAA,EAAkB;AAChB;AACD;;AAED,WAAA,OAAA,GAAe,OAAO,CAAP,OAAA,CAAgBD,WAAW,CAAC;AAACR,QAAAA,CAAC,EAAF,CAAA;AAAIC,QAAAA,CAAC,EAAL,CAAA;AAAOC,QAAAA,CAAC,EAAR,CAAA;AAAUO,QAAAA,IAAI,EAAJA;AAAV,OAAD,CAA3B,EAAA,IAAA,CACP,UAAA,OAAA,EAAW;AACf,QAAA,KAAI,CAAJ,OAAA,GAAA,OAAA;AACA,QAAA,KAAI,CAAJ,SAAA,GAAA,IAAA;;AACA,QAAA,KAAI,CAAJ,UAAA,CAAA,KAAA;;AACA,eAAA,OAAA;AALW,OAAA,EAAA,OAAA,EAON,UAAA,GAAA,EAAO;AACZ,QAAA,KAAI,CAAJ,SAAA,GAAA,IAAA;;AACA,QAAA,KAAI,CAAJ,WAAA,CAAA,GAAA;AATJ,OAAe,CAAf;AAWD;;;wBAjCU;AACT,aAAO,KAAA,SAAA,GAAiB,KAAjB,OAAA,GAAgC,KAAvC,OAAA;AACD;;;wBAEc;AACb,aAAO,KAAP,SAAA;AACD;;;wBAEgB;AACf,UAAMJ,MAAM,GAAG,KAAA,OAAA,GAAe,KAAA,OAAA,CAAf,UAAA,GAAf,CAAA;;AACA,UAAI,CAACC,MAAM,CAANA,QAAAA,CAAL,MAAKA,CAAL,EAA8B;AAC5BC,QAAAA,GAAG,CAAHA,KAAAA,CAAAA,qCAAAA;AACD;;AACD,aAAA,MAAA;AACD;;;;;;SA9BkBR,Y","sourcesContent":["import {log} from '@deck.gl/core';\n\nexport default class Tile2DHeader {\n  constructor({x, y, z, onTileLoad, onTileError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n    this._isLoaded = false;\n\n    this.onTileLoad = onTileLoad;\n    this.onTileError = onTileError;\n  }\n\n  get data() {\n    return this._isLoaded ? this.content : this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  get byteLength() {\n    const result = this.content ? this.content.byteLength : 0;\n    if (!Number.isFinite(result)) {\n      log.error('byteLength not defined in tile data')();\n    }\n    return result;\n  }\n\n  loadData(getTileData) {\n    const {x, y, z, bbox} = this;\n    if (!getTileData) {\n      return;\n    }\n\n    this._loader = Promise.resolve(getTileData({x, y, z, bbox}))\n      .then(buffers => {\n        this.content = buffers;\n        this._isLoaded = true;\n        this.onTileLoad(this);\n        return buffers;\n      })\n      .catch(err => {\n        this._isLoaded = true;\n        this.onTileError(err);\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}