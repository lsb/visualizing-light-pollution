{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { equals } from '../lib/common';\n\nvar Polygon = function () {\n  function Polygon(points) {\n    _classCallCheck(this, Polygon);\n\n    this.points = points;\n    this.isClosed = equals(this.points[this.points.length - 1], this.points[0]);\n    Object.freeze(this);\n  }\n\n  _createClass(Polygon, [{\n    key: \"getSignedArea\",\n    value: function getSignedArea() {\n      var area = 0;\n      this.forEachSegment(function (p1, p2) {\n        area += (p1[0] + p2[0]) * (p1[1] - p2[1]);\n      });\n      return area / 2;\n    }\n  }, {\n    key: \"getArea\",\n    value: function getArea() {\n      return Math.abs(this.getSignedArea());\n    }\n  }, {\n    key: \"getWindingDirection\",\n    value: function getWindingDirection() {\n      return Math.sign(this.getSignedArea());\n    }\n  }, {\n    key: \"forEachSegment\",\n    value: function forEachSegment(visitor) {\n      var length = this.points.length;\n\n      for (var i = 0; i < length - 1; i++) {\n        visitor(this.points[i], this.points[i + 1], i, i + 1);\n      }\n\n      if (!this.isClosed) {\n        visitor(this.points[length - 1], this.points[0], length - 1, 0);\n      }\n    }\n  }]);\n\n  return Polygon;\n}();\n\nexport { Polygon as default };","map":{"version":3,"sources":["../../../src/addons/polygon.js"],"names":["Polygon","equals","Object","area","p1","p2","Math","visitor","length","i"],"mappings":";;AAAA,SAAA,MAAA,QAAA,eAAA;;IAEqBA,O;AACnB,WAAA,OAAA,CAAA,MAAA,EAAoB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AAClB,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,QAAA,GAAgBC,MAAM,CAAC,KAAA,MAAA,CAAY,KAAA,MAAA,CAAA,MAAA,GAAb,CAAC,CAAD,EAAsC,KAAA,MAAA,CAA5D,CAA4D,CAAtC,CAAtB;AACAC,IAAAA,MAAM,CAANA,MAAAA,CAAAA,IAAAA;AACD;;;;oCAGe;AACd,UAAIC,IAAI,GAAR,CAAA;AACA,WAAA,cAAA,CAAoB,UAAA,EAAA,EAAA,EAAA,EAAY;AAE9BA,QAAAA,IAAI,IAAI,CAACC,EAAE,CAAFA,CAAE,CAAFA,GAAQC,EAAE,CAAX,CAAW,CAAX,KAAmBD,EAAE,CAAFA,CAAE,CAAFA,GAAQC,EAAE,CAArCF,CAAqC,CAA7B,CAARA;AAFF,OAAA;AAIA,aAAOA,IAAI,GAAX,CAAA;AACD;;;8BAES;AACR,aAAOG,IAAI,CAAJA,GAAAA,CAAS,KAAhB,aAAgB,EAATA,CAAP;AACD;;;0CAEqB;AACpB,aAAOA,IAAI,CAAJA,IAAAA,CAAU,KAAjB,aAAiB,EAAVA,CAAP;AACD;;;mCAEcC,O,EAAS;AACtB,UAAMC,MAAM,GAAG,KAAA,MAAA,CAAf,MAAA;;AACA,WAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGD,MAAM,GAA1B,CAAA,EAAgCC,CAAhC,EAAA,EAAqC;AACnCF,QAAAA,OAAO,CAAC,KAAA,MAAA,CAAD,CAAC,CAAD,EAAiB,KAAA,MAAA,CAAYE,CAAC,GAA9B,CAAiB,CAAjB,EAAA,CAAA,EAAwCA,CAAC,GAAhDF,CAAO,CAAPA;AACD;;AACD,UAAI,CAAC,KAAL,QAAA,EAAoB;AAElBA,QAAAA,OAAO,CAAC,KAAA,MAAA,CAAYC,MAAM,GAAnB,CAAC,CAAD,EAA0B,KAAA,MAAA,CAA1B,CAA0B,CAA1B,EAA0CA,MAAM,GAAhD,CAAA,EAAPD,CAAO,CAAPA;AACD;AACF;;;;;;SAlCkBP,O","sourcesContent":["import {equals} from '../lib/common';\n\nexport default class Polygon {\n  constructor(points) {\n    this.points = points;\n    this.isClosed = equals(this.points[this.points.length - 1], this.points[0]);\n    Object.freeze(this);\n  }\n\n  // https://en.wikipedia.org/wiki/Shoelace_formula\n  getSignedArea() {\n    let area = 0;\n    this.forEachSegment((p1, p2) => {\n      // the \"cancelling\" cross-products: (p1.x + p2.x) * (p1.y - p2.y)\n      area += (p1[0] + p2[0]) * (p1[1] - p2[1]);\n    });\n    return area / 2;\n  }\n\n  getArea() {\n    return Math.abs(this.getSignedArea());\n  }\n\n  getWindingDirection() {\n    return Math.sign(this.getSignedArea());\n  }\n\n  forEachSegment(visitor) {\n    const length = this.points.length;\n    for (let i = 0; i < length - 1; i++) {\n      visitor(this.points[i], this.points[i + 1], i, i + 1);\n    }\n    if (!this.isClosed) {\n      // Call function with points and indices\n      visitor(this.points[length - 1], this.points[0], length - 1, 0);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}