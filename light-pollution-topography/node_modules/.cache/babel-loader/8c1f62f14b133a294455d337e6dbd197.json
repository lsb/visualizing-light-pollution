{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Controller from './controller';\nimport { OrbitState } from './orbit-controller';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport { TRANSITION_EVENTS } from './transition-manager';\nvar LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: function transitionEasing(t) {\n    return t;\n  },\n  transitionInterpolator: new LinearInterpolator(['target', 'zoom']),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\nvar OrthographicController = function (_Controller) {\n  _inherits(OrthographicController, _Controller);\n\n  function OrthographicController(props) {\n    var _this;\n\n    _classCallCheck(this, OrthographicController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrthographicController).call(this, OrbitState, props));\n    _this.invertPan = true;\n    return _this;\n  }\n\n  _createClass(OrthographicController, [{\n    key: \"_onPanRotate\",\n    value: function _onPanRotate(event) {\n      return false;\n    }\n  }, {\n    key: \"_getTransitionProps\",\n    value: function _getTransitionProps() {\n      return LINEAR_TRANSITION_PROPS;\n    }\n  }]);\n\n  return OrthographicController;\n}(Controller);\n\nexport { OrthographicController as default };","map":{"version":3,"sources":["../../../src/controllers/orthographic-controller.js"],"names":["LINEAR_TRANSITION_PROPS","transitionDuration","transitionEasing","transitionInterpolator","transitionInterruption","TRANSITION_EVENTS","BREAK","OrthographicController","Controller","event"],"mappings":";;;;;AAAA,OAAA,UAAA,MAAA,cAAA;AACA,SAAA,UAAA,QAAA,oBAAA;AACA,OAAA,kBAAA,MAAA,oCAAA;AACA,SAAA,iBAAA,QAAA,sBAAA;AAEA,IAAMA,uBAAuB,GAAG;AAC9BC,EAAAA,kBAAkB,EADY,GAAA;AAE9BC,EAAAA,gBAAgB,EAAE,SAAA,gBAAA,CAAA,CAAA,EAAC;AAAA,WAAA,CAAA;AAFW,GAAA;AAG9BC,EAAAA,sBAAsB,EAAE,IAAA,kBAAA,CAAuB,CAAA,QAAA,EAHjB,MAGiB,CAAvB,CAHM;AAI9BC,EAAAA,sBAAsB,EAAEC,iBAAiB,CAACC;AAJZ,CAAhC;;IAOqBC,sB;;;AACnB,WAAA,sBAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,sBAAA,CAAA;;AACjB,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,sBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AAFiB,WAAA,KAAA;AAGlB;;;;iCAEYE,K,EAAO;AAElB,aAAA,KAAA;AACD;;;0CAEqB;AAEpB,aAAA,uBAAA;AACD;;;;EAdiDD,U;;SAA/BD,sB","sourcesContent":["import Controller from './controller';\nimport {OrbitState} from './orbit-controller';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport {TRANSITION_EVENTS} from './transition-manager';\n\nconst LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(['target', 'zoom']),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\nexport default class OrthographicController extends Controller {\n  constructor(props) {\n    super(OrbitState, props);\n    this.invertPan = true;\n  }\n\n  _onPanRotate(event) {\n    // No rotation in orthographic view\n    return false;\n  }\n\n  _getTransitionProps() {\n    // Enables Transitions on double-tap and key-down events.\n    return LINEAR_TRANSITION_PROPS;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}