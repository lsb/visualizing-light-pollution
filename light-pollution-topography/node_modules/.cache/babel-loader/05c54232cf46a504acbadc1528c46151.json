{"ast":null,"code":"import _getPrototypeOf from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _classCallCheck from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\n\nexport var IntBuilder = /*#__PURE__*/function (_FixedWidthBuilder) {\n  _inherits(IntBuilder, _FixedWidthBuilder);\n\n  var _super = _createSuper(IntBuilder);\n\n  function IntBuilder() {\n    _classCallCheck(this, IntBuilder);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IntBuilder, [{\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      this._values.set(index, value);\n    }\n  }]);\n\n  return IntBuilder;\n}(FixedWidthBuilder);\n/** @ignore */\n\nexport var Int8Builder = /*#__PURE__*/function (_IntBuilder) {\n  _inherits(Int8Builder, _IntBuilder);\n\n  var _super2 = _createSuper(Int8Builder);\n\n  function Int8Builder() {\n    _classCallCheck(this, Int8Builder);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return Int8Builder;\n}(IntBuilder);\n/** @ignore */\n\nexport var Int16Builder = /*#__PURE__*/function (_IntBuilder2) {\n  _inherits(Int16Builder, _IntBuilder2);\n\n  var _super3 = _createSuper(Int16Builder);\n\n  function Int16Builder() {\n    _classCallCheck(this, Int16Builder);\n\n    return _super3.apply(this, arguments);\n  }\n\n  return Int16Builder;\n}(IntBuilder);\n/** @ignore */\n\nexport var Int32Builder = /*#__PURE__*/function (_IntBuilder3) {\n  _inherits(Int32Builder, _IntBuilder3);\n\n  var _super4 = _createSuper(Int32Builder);\n\n  function Int32Builder() {\n    _classCallCheck(this, Int32Builder);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return Int32Builder;\n}(IntBuilder);\n/** @ignore */\n\nexport var Int64Builder = /*#__PURE__*/function (_IntBuilder4) {\n  _inherits(Int64Builder, _IntBuilder4);\n\n  var _super5 = _createSuper(Int64Builder);\n\n  function Int64Builder(options) {\n    var _this;\n\n    _classCallCheck(this, Int64Builder);\n\n    if (options['nullValues']) {\n      options['nullValues'] = options['nullValues'].map(toBigInt);\n    }\n\n    _this = _super5.call(this, options);\n    _this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    return _this;\n  }\n\n  _createClass(Int64Builder, [{\n    key: \"isValid\",\n    value: function isValid(value) {\n      return _get(_getPrototypeOf(Int64Builder.prototype), \"isValid\", this).call(this, toBigInt(value));\n    }\n  }, {\n    key: \"values64\",\n    get: function get() {\n      return this._values.buffer64;\n    }\n  }]);\n\n  return Int64Builder;\n}(IntBuilder);\n/** @ignore */\n\nexport var Uint8Builder = /*#__PURE__*/function (_IntBuilder5) {\n  _inherits(Uint8Builder, _IntBuilder5);\n\n  var _super6 = _createSuper(Uint8Builder);\n\n  function Uint8Builder() {\n    _classCallCheck(this, Uint8Builder);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return Uint8Builder;\n}(IntBuilder);\n/** @ignore */\n\nexport var Uint16Builder = /*#__PURE__*/function (_IntBuilder6) {\n  _inherits(Uint16Builder, _IntBuilder6);\n\n  var _super7 = _createSuper(Uint16Builder);\n\n  function Uint16Builder() {\n    _classCallCheck(this, Uint16Builder);\n\n    return _super7.apply(this, arguments);\n  }\n\n  return Uint16Builder;\n}(IntBuilder);\n/** @ignore */\n\nexport var Uint32Builder = /*#__PURE__*/function (_IntBuilder7) {\n  _inherits(Uint32Builder, _IntBuilder7);\n\n  var _super8 = _createSuper(Uint32Builder);\n\n  function Uint32Builder() {\n    _classCallCheck(this, Uint32Builder);\n\n    return _super8.apply(this, arguments);\n  }\n\n  return Uint32Builder;\n}(IntBuilder);\n/** @ignore */\n\nexport var Uint64Builder = /*#__PURE__*/function (_IntBuilder8) {\n  _inherits(Uint64Builder, _IntBuilder8);\n\n  var _super9 = _createSuper(Uint64Builder);\n\n  function Uint64Builder(options) {\n    var _this2;\n\n    _classCallCheck(this, Uint64Builder);\n\n    if (options['nullValues']) {\n      options['nullValues'] = options['nullValues'].map(toBigInt);\n    }\n\n    _this2 = _super9.call(this, options);\n    _this2._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    return _this2;\n  }\n\n  _createClass(Uint64Builder, [{\n    key: \"isValid\",\n    value: function isValid(value) {\n      return _get(_getPrototypeOf(Uint64Builder.prototype), \"isValid\", this).call(this, toBigInt(value));\n    }\n  }, {\n    key: \"values64\",\n    get: function get() {\n      return this._values.buffer64;\n    }\n  }]);\n\n  return Uint64Builder;\n}(IntBuilder);\n\nvar toBigInt = function (memo) {\n  return function (value) {\n    if (ArrayBuffer.isView(value)) {\n      memo.buffer = value.buffer;\n      memo.byteOffset = value.byteOffset;\n      memo.byteLength = value.byteLength;\n      value = bignumToBigInt(memo);\n      memo.buffer = null;\n    }\n\n    return value;\n  };\n}({\n  'BigIntArray': BigInt64Array\n});","map":{"version":3,"sources":["builder/int.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n"]},"metadata":{},"sourceType":"module"}