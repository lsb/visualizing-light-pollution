{"ast":null,"code":"import _regeneratorRuntime from\"/home/lsb/wikidatageo/light-pollution-topography/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/lsb/wikidatageo/light-pollution-topography/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/lsb/wikidatageo/light-pollution-topography/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/lsb/wikidatageo/light-pollution-topography/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lsb/wikidatageo/light-pollution-topography/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/lsb/wikidatageo/light-pollution-topography/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/lsb/wikidatageo/light-pollution-topography/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./App.css';import DeckGL from'@deck.gl/react';import{TerrainLayer,TileLayer}from'@deck.gl/geo-layers';import{BitmapLayer}from'@deck.gl/layers';var bitmapLayerDefaults={wrapLongitude:true,renderSubLayers:function renderSubLayers(props){return new BitmapLayer(props,{data:null,image:props.data,bounds:[props.tile.bbox.west,props.tile.bbox.south,props.tile.bbox.east,props.tile.bbox.north]});}};var terrainLayerDefaults={elevationDecoder:{rScaler:0,gScaler:0,bScaler:337,offset:0},meshMaxError:1,wrapLongitude:true,workerUrl:\"./terrain-loader.worker.js\",material:{ambient:0.2,diffuse:1,shininess:128,specularColor:[255,192,64]}};var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={viz:\"bumpy-light\",viewState:{longitude:-122.4,latitude:37.7,zoom:6,pitch:50,bearing:0,maxZoom:10},isDrone:true,fullLoopDuration:200,pitchChange:0.5,bearingChange:3,tickSize:5};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;setTimeout(function(){return _this2.startAnimating();},1000);}},{key:\"startAnimating\",value:function(){var _startAnimating=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this3=this;var _this$state,_this$state$viewState,pitch,bearing,fullLoopDuration,pitchChange,bearingChange,tickSize,i,raf,delay,eased,eased2x;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$state=this.state,_this$state$viewState=_this$state.viewState,pitch=_this$state$viewState.pitch,bearing=_this$state$viewState.bearing,fullLoopDuration=_this$state.fullLoopDuration,pitchChange=_this$state.pitchChange,bearingChange=_this$state.bearingChange,tickSize=_this$state.tickSize;if(!(typeof pitch!==\"number\"||typeof bearing!==\"number\")){_context.next=6;break;}console.log({\"deckgl appearance\":\"loading\",pitch:pitch,bearing:bearing,pitchChange:pitchChange,time:Date.now()});setTimeout(function(){return _this3.startAnimating();},0);_context.next=18;break;case 6:// for me, on my graphics card, the map view was glitching out (blank white flashes) with transitions longer than ~10ms\ni=0;case 7:_context.next=9;return new Promise(function(resolve){return requestAnimationFrame(resolve);});case 9:raf=_context.sent;_context.next=12;return new Promise(function(resolve){return setTimeout(resolve,tickSize);});case 12:delay=_context.sent;eased=Math.sin(Math.PI*2*i/fullLoopDuration);eased2x=Math.sin(Math.PI*2*2*i/fullLoopDuration);this.setState({viewState:_objectSpread({},this.state.viewState,{bearing:bearing+eased*bearingChange,pitch:pitch+eased2x*pitchChange,transitionDuration:tickSize,onTransitionInterrupt:function onTransitionInterrupt(){return _this3.setState({isDrone:false});}})});case 16:if(i++<fullLoopDuration&&this.state.isDrone){_context.next=7;break;}case 17:if(this.state.isDrone){this.startAnimating();}case 18:case\"end\":return _context.stop();}}},_callee,this);}));function startAnimating(){return _startAnimating.apply(this,arguments);}return startAnimating;}()},{key:\"render\",value:function render(){var _this4=this;var viz=this.state.viz;var smog=new TileLayer(_objectSpread({},bitmapLayerDefaults,{data:'./tiles/greys-{z}-{x}-{y}.png',maxZoom:8,id:'smog'}));var watercolor=new TileLayer(_objectSpread({},bitmapLayerDefaults,{data:'./stamen-tiles/watercolor/{z}/{x}/{y}.jpg',id:'watercolor'}));var tonerlabel=new TileLayer(_objectSpread({},bitmapLayerDefaults,{data:'./stamen-tiles/toner-labels/{z}/{x}/{y}.png',id:'tonerlabel'}));var terrain=new TileLayer(_objectSpread({},bitmapLayerDefaults,{data:'./stamen-tiles/terrain/{z}/{x}/{y}.png',id:'greenhills'}));var bumpyLight=new TerrainLayer(_objectSpread({},terrainLayerDefaults,{id:'bumpyLight',elevationData:'./tiles/globe-{z}-{x}-{y}.png',texture:'./tiles/globe-{z}-{x}-{y}.png',workerUrl:\"./terrain-loader.worker.js\"}));var bumpyTerrain=new TerrainLayer(_objectSpread({},terrainLayerDefaults,{id:'bumpyTerrain',elevationData:'./tiles/globe-{z}-{x}-{y}.png',texture:'./stamen-tiles/terrain/{z}/{x}/{y}.png'}));var bumpyWatercolor=new TerrainLayer(_objectSpread({},terrainLayerDefaults,{id:'bumpyWatercolor',elevationData:'./tiles/globe-{z}-{x}-{y}.png',texture:'./stamen-tiles/watercolor/{z}/{x}/{y}.jpg'}));var layerMapping={\"bumpy-light\":[bumpyLight],\"bumpy-terrain\":[bumpyTerrain],\"bumpy-watercolor\":[bumpyWatercolor],\"hazy-terrain\":[terrain,smog],\"hazy-watercolor\":[watercolor,tonerlabel,smog],\"hazy-gouache\":[watercolor,smog]};var layers=layerMapping[viz];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DeckGL,{viewState:this.state.viewState,controller:true,layers:layers,id:\"maincanvas\",onViewStateChange:function onViewStateChange(_ref){var viewState=_ref.viewState;return _this4.setState({viewState:viewState});}})),/*#__PURE__*/React.createElement(\"div\",{className:\"tweaks\"},/*#__PURE__*/React.createElement(\"div\",{id:\"colophon\"},\"\\xA9 Lee Butterman 2020. Made in Oakland, California.\",/*#__PURE__*/React.createElement(\"br\",null),\"Map tiles by Stamen Design under \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://creativecommons.org/licenses/by/3.0/\"},\"CC BY 3.0\"),\".\",/*#__PURE__*/React.createElement(\"br\",null),\"Map data by OpenStreetMap under \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://creativecommons.org/licenses/by-sa/3.0/\"},\"CC BY SA 3.0\"),/*#__PURE__*/React.createElement(\"br\",null),\"Light pollution from \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://dx.doi.org/10.1126/sciadv.1600377\"},\"Falchi et al\"),\"'s \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://doi.org/10.5880/GFZ.1.4.2016.001\"},\"World Atlas 2015\"),\".\"),/*#__PURE__*/React.createElement(\"div\",{id:\"tweaks\"},\"View light pollution as:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"bumpy-light\",checked:viz===\"bumpy-light\",onChange:function onChange(e){return _this4.setState({viz:e.target.value});}}),\"topography, on a white/blue world\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"bumpy-terrain\",checked:viz===\"bumpy-terrain\",onChange:function onChange(e){return _this4.setState({viz:e.target.value});}}),\"topography, on a terrain map world\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"bumpy-watercolor\",checked:viz===\"bumpy-watercolor\",onChange:function onChange(e){return _this4.setState({viz:e.target.value});}}),\"topography, on a watercolor world\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"hazy-terrain\",checked:viz===\"hazy-terrain\",onChange:function onChange(e){return _this4.setState({viz:e.target.value});}}),\"haze, on a terrain map world\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"hazy-watercolor\",checked:viz===\"hazy-watercolor\",onChange:function onChange(e){return _this4.setState({viz:e.target.value});}}),\"haze, on a watercolor world with labels\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"hazy-gouache\",checked:viz===\"hazy-gouache\",onChange:function onChange(e){return _this4.setState({viz:e.target.value});}}),\"haze, on a watercolor world\"))),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:this.state.isDrone,onChange:function onChange(e){_this4.setState({isDrone:e.target.checked});if(!_this4.state.isDrone)_this4.startAnimating();}}),\"drone hover\"))));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/lsb/wikidatageo/light-pollution-topography/src/App.js"],"names":["React","DeckGL","TerrainLayer","TileLayer","BitmapLayer","bitmapLayerDefaults","wrapLongitude","renderSubLayers","props","data","image","bounds","tile","bbox","west","south","east","north","terrainLayerDefaults","elevationDecoder","rScaler","gScaler","bScaler","offset","meshMaxError","workerUrl","material","ambient","diffuse","shininess","specularColor","App","state","viz","viewState","longitude","latitude","zoom","pitch","bearing","maxZoom","isDrone","fullLoopDuration","pitchChange","bearingChange","tickSize","setTimeout","startAnimating","console","log","time","Date","now","i","Promise","resolve","requestAnimationFrame","raf","delay","eased","Math","sin","PI","eased2x","setState","transitionDuration","onTransitionInterrupt","smog","id","watercolor","tonerlabel","terrain","bumpyLight","elevationData","texture","bumpyTerrain","bumpyWatercolor","layerMapping","layers","e","target","value","checked","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport DeckGL from '@deck.gl/react';\nimport { TerrainLayer, TileLayer, } from '@deck.gl/geo-layers';\nimport { BitmapLayer,  } from '@deck.gl/layers';\n\nconst bitmapLayerDefaults = ({\n  wrapLongitude: true,\n  renderSubLayers: props => (\n    new BitmapLayer((props), {\n      data: null,\n      image: props.data,\n      bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north],\n    })\n  ),\n})\nconst terrainLayerDefaults = ({\n  elevationDecoder: {\n    rScaler: 0,\n    gScaler: 0,\n    bScaler: 337,\n    offset: 0,\n  },\n  meshMaxError: 1,\n  wrapLongitude: true,\n  workerUrl: \"./terrain-loader.worker.js\",\n  material: {\n    ambient: 0.2,\n    diffuse: 1,\n    shininess: 128,\n    specularColor: [255, 192, 64]\n  },\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viz: \"bumpy-light\",\n      viewState: {longitude: -122.4, latitude: 37.7, zoom: 6, pitch: 50, bearing: 0, maxZoom: 10},\n      isDrone: true,\n      fullLoopDuration: 200,\n      pitchChange: 0.5,\n      bearingChange: 3,\n      tickSize: 5,\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => this.startAnimating(), 1000);\n  }\n  async startAnimating() {\n    const {viewState: {pitch, bearing}, fullLoopDuration, pitchChange, bearingChange, tickSize} = this.state;\n    if((typeof pitch) !== \"number\" || (typeof bearing) !== \"number\") {\n      console.log({\"deckgl appearance\": \"loading\", pitch, bearing, pitchChange, time: Date.now()});\n      setTimeout(() => this.startAnimating(), 0);\n    } else {\n      // for me, on my graphics card, the map view was glitching out (blank white flashes) with transitions longer than ~10ms\n      let i = 0; \n      do {\n        const raf = await new Promise(resolve => requestAnimationFrame(resolve));\n        const delay = await new Promise(resolve => setTimeout(resolve, tickSize));\n        const eased = Math.sin(Math.PI * 2 * i / fullLoopDuration);\n        const eased2x = Math.sin(Math.PI * 2 * 2 * i / fullLoopDuration);\n        this.setState({viewState: {\n          ...this.state.viewState,\n          bearing: bearing + eased * bearingChange,\n          pitch: pitch + eased2x * pitchChange,\n          transitionDuration: tickSize,\n          onTransitionInterrupt: () => this.setState({isDrone: false}),\n        }})\n      } while (i++ < fullLoopDuration && this.state.isDrone);\n      if(this.state.isDrone) { this.startAnimating() }\n    }\n  }\n  render() {\n    const {viz} = this.state;\n    const smog = new TileLayer({\n      ...bitmapLayerDefaults,\n      data: './tiles/greys-{z}-{x}-{y}.png',\n      maxZoom: 8,\n      id: 'smog',\n    })\n    const watercolor = new TileLayer({\n      ...bitmapLayerDefaults,\n      data: './stamen-tiles/watercolor/{z}/{x}/{y}.jpg',\n      id: 'watercolor',\n    });\n    const tonerlabel = new TileLayer({\n      ...bitmapLayerDefaults,\n      data: './stamen-tiles/toner-labels/{z}/{x}/{y}.png',\n      id: 'tonerlabel',\n    });\n    const terrain = new TileLayer({\n      ...bitmapLayerDefaults,\n      data: './stamen-tiles/terrain/{z}/{x}/{y}.png',\n      id: 'greenhills',\n    })\n    const bumpyLight = new TerrainLayer({\n      ...terrainLayerDefaults,\n      id: 'bumpyLight',\n      elevationData: './tiles/globe-{z}-{x}-{y}.png',\n      texture: './tiles/globe-{z}-{x}-{y}.png',\n      workerUrl: \"./terrain-loader.worker.js\",\n    });\n    const bumpyTerrain = new TerrainLayer({\n      ...terrainLayerDefaults,\n      id: 'bumpyTerrain',\n      elevationData: './tiles/globe-{z}-{x}-{y}.png',\n      texture: './stamen-tiles/terrain/{z}/{x}/{y}.png',\n    });\n    const bumpyWatercolor = new TerrainLayer({\n      ...terrainLayerDefaults,\n      id: 'bumpyWatercolor',\n      elevationData: './tiles/globe-{z}-{x}-{y}.png',\n      texture: './stamen-tiles/watercolor/{z}/{x}/{y}.jpg',\n    })\n    const layerMapping = ({\n      \"bumpy-light\": [bumpyLight],\n      \"bumpy-terrain\": [bumpyTerrain],\n      \"bumpy-watercolor\": [bumpyWatercolor],\n      \"hazy-terrain\": [terrain, smog],\n      \"hazy-watercolor\": [watercolor, tonerlabel, smog],\n      \"hazy-gouache\": [watercolor, smog],\n    })\n    const layers = layerMapping[viz];\n    return (\n      <div>\n        <div>\n          <DeckGL viewState={this.state.viewState} controller={true} layers={layers} id={\"maincanvas\"} onViewStateChange={({viewState}) => this.setState({viewState})} />\n        </div>\n        <div className=\"tweaks\">\n          <div id=\"colophon\">\n            © Lee Butterman 2020. Made in Oakland, California.<br/>\n            Map tiles by Stamen Design under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.<br/>\n            Map data by OpenStreetMap under <a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC BY SA 3.0</a><br/>\n            Light pollution from <a href=\"https://dx.doi.org/10.1126/sciadv.1600377\">Falchi et al</a>'s <a href=\"https://doi.org/10.5880/GFZ.1.4.2016.001\">World Atlas 2015</a>.\n          </div>\n          <div id=\"tweaks\">\n            View light pollution as:<br/>\n            <form>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"bumpy-light\" checked={viz === \"bumpy-light\"} onChange={e => this.setState({viz: e.target.value})} />\n                  topography, on a white/blue world\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"bumpy-terrain\" checked={viz === \"bumpy-terrain\"} onChange={e => this.setState({viz: e.target.value})} />\n                  topography, on a terrain map world\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"bumpy-watercolor\" checked={viz === \"bumpy-watercolor\"} onChange={e => this.setState({viz: e.target.value})} />\n                  topography, on a watercolor world\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"hazy-terrain\" checked={viz === \"hazy-terrain\"} onChange={e => this.setState({viz: e.target.value})} />\n                  haze, on a terrain map world\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"hazy-watercolor\" checked={viz === \"hazy-watercolor\"} onChange={e => this.setState({viz: e.target.value})} />\n                  haze, on a watercolor world with labels\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"hazy-gouache\" checked={viz === \"hazy-gouache\"} onChange={e => this.setState({viz: e.target.value})} />\n                  haze, on a watercolor world\n                </label>\n              </div>\n            </form>\n            <label>\n              <input type=\"checkbox\" checked={this.state.isDrone} onChange={e => { this.setState({isDrone: e.target.checked}); if(!this.state.isDrone) this.startAnimating() } } />\n              drone hover\n            </label>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}