{"ast":null,"code":"import _objectSpread from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\nimport { Type } from '../enum';\nimport { Utf8Builder } from './utf8';\nimport { Builder } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n/** @nocollapse */\n\nBuilder.new = newBuilder;\n\nfunction newBuilder(options) {\n  var type = options.type;\n  var builder = new (getBuilderConstructor.getVisitFn(type)())(options);\n\n  if (type.children && type.children.length > 0) {\n    var children = options['children'] || [];\n    var defaultOptions = {\n      'nullValues': options['nullValues']\n    };\n    var getChildOptions = Array.isArray(children) ? function (_, i) {\n      return children[i] || defaultOptions;\n    } : function (_ref) {\n      var name = _ref.name;\n      return children[name] || defaultOptions;\n    };\n    type.children.forEach(function (field, index) {\n      var type = field.type;\n      var opts = getChildOptions(field, index);\n      builder.children.push(newBuilder(_objectSpread({}, opts, {\n        type: type\n      })));\n    });\n  }\n\n  return builder;\n}\n\nObject.keys(Type).map(function (T) {\n  return Type[T];\n}).filter(function (T) {\n  return typeof T === 'number' && T !== Type.NONE;\n}).forEach(function (typeId) {\n  var BuilderCtor = getBuilderConstructor.visit(typeId);\n  BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n});\nUtf8Builder.prototype._setValue = setVisitor.visitBinary;","map":{"version":3,"sources":["builder/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n"]},"metadata":{},"sourceType":"module"}