{"ast":null,"code":"import _regeneratorRuntime from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createSuper from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\n/** @ignore */\n\nexport var ITERATOR_DONE = Object.freeze({\n  done: true,\n  value: void 0\n});\n/** @ignore */\n\nexport var ArrowJSON = /*#__PURE__*/function () {\n  // @ts-ignore\n  function ArrowJSON(_json) {\n    _classCallCheck(this, ArrowJSON);\n\n    this._json = _json;\n  }\n\n  _createClass(ArrowJSON, [{\n    key: \"schema\",\n    get: function get() {\n      return this._json['schema'];\n    }\n  }, {\n    key: \"batches\",\n    get: function get() {\n      return this._json['batches'] || [];\n    }\n  }, {\n    key: \"dictionaries\",\n    get: function get() {\n      return this._json['dictionaries'] || [];\n    }\n  }]);\n\n  return ArrowJSON;\n}();\n/** @ignore */\n\nexport var ReadableInterop = /*#__PURE__*/function () {\n  function ReadableInterop() {\n    _classCallCheck(this, ReadableInterop);\n  }\n\n  _createClass(ReadableInterop, [{\n    key: \"tee\",\n    value: function tee() {\n      return this._getDOMStream().tee();\n    }\n  }, {\n    key: \"pipe\",\n    value: function pipe(writable, options) {\n      return this._getNodeStream().pipe(writable, options);\n    }\n  }, {\n    key: \"pipeTo\",\n    value: function pipeTo(writable, options) {\n      return this._getDOMStream().pipeTo(writable, options);\n    }\n  }, {\n    key: \"pipeThrough\",\n    value: function pipeThrough(duplex, options) {\n      return this._getDOMStream().pipeThrough(duplex, options);\n    }\n  }, {\n    key: \"_getDOMStream\",\n    value: function _getDOMStream() {\n      return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n  }, {\n    key: \"_getNodeStream\",\n    value: function _getNodeStream() {\n      return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n  }]);\n\n  return ReadableInterop;\n}();\n/** @ignore */\n\nexport var AsyncQueue = /*#__PURE__*/function (_ReadableInterop) {\n  _inherits(AsyncQueue, _ReadableInterop);\n\n  var _super = _createSuper(AsyncQueue);\n\n  function AsyncQueue() {\n    var _this;\n\n    _classCallCheck(this, AsyncQueue);\n\n    _this = _super.call(this);\n    _this._values = [];\n    _this.resolvers = [];\n    _this._closedPromise = new Promise(function (r) {\n      return _this._closedPromiseResolve = r;\n    });\n    return _this;\n  }\n\n  _createClass(AsyncQueue, [{\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(reason) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.return(reason);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function cancel(_x) {\n        return _cancel.apply(this, arguments);\n      }\n\n      return cancel;\n    }()\n  }, {\n    key: \"write\",\n    value: function write(value) {\n      if (this._ensureOpen()) {\n        this.resolvers.length <= 0 ? this._values.push(value) : this.resolvers.shift().resolve({\n          done: false,\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"abort\",\n    value: function abort(value) {\n      if (this._closedPromiseResolve) {\n        this.resolvers.length <= 0 ? this._error = {\n          error: value\n        } : this.resolvers.shift().reject({\n          done: true,\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._closedPromiseResolve) {\n        var resolvers = this.resolvers;\n\n        while (resolvers.length > 0) {\n          resolvers.shift().resolve(ITERATOR_DONE);\n        }\n\n        this._closedPromiseResolve();\n\n        this._closedPromiseResolve = undefined;\n      }\n    }\n  }, {\n    key: Symbol.asyncIterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"toDOMStream\",\n    value: function toDOMStream(options) {\n      return streamAdapters.toDOMStream(this._closedPromiseResolve || this._error ? this : this._values, options);\n    }\n  }, {\n    key: \"toNodeStream\",\n    value: function toNodeStream(options) {\n      return streamAdapters.toNodeStream(this._closedPromiseResolve || this._error ? this : this._values, options);\n    }\n  }, {\n    key: \"throw\",\n    value: function () {\n      var _throw2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.abort(_);\n\n              case 2:\n                return _context2.abrupt(\"return\", ITERATOR_DONE);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _throw(_x2) {\n        return _throw2.apply(this, arguments);\n      }\n\n      return _throw;\n    }()\n  }, {\n    key: \"return\",\n    value: function () {\n      var _return2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.close();\n\n              case 2:\n                return _context3.abrupt(\"return\", ITERATOR_DONE);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _return(_x3) {\n        return _return2.apply(this, arguments);\n      }\n\n      return _return;\n    }()\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(size) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.next(size, 'read');\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent.value);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function read(_x4) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }, {\n    key: \"peek\",\n    value: function () {\n      var _peek = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(size) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.next(size, 'peek');\n\n              case 2:\n                return _context5.abrupt(\"return\", _context5.sent.value);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function peek(_x5) {\n        return _peek.apply(this, arguments);\n      }\n\n      return peek;\n    }()\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this2 = this;\n\n      if (this._values.length > 0) {\n        return Promise.resolve({\n          done: false,\n          value: this._values.shift()\n        });\n      } else if (this._error) {\n        return Promise.reject({\n          done: true,\n          value: this._error.error\n        });\n      } else if (!this._closedPromiseResolve) {\n        return Promise.resolve(ITERATOR_DONE);\n      } else {\n        return new Promise(function (resolve, reject) {\n          _this2.resolvers.push({\n            resolve: resolve,\n            reject: reject\n          });\n        });\n      }\n    }\n  }, {\n    key: \"_ensureOpen\",\n    value: function _ensureOpen() {\n      if (this._closedPromiseResolve) {\n        return true;\n      }\n\n      throw new Error(\"\".concat(this, \" is closed\"));\n    }\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this._closedPromise;\n    }\n  }]);\n\n  return AsyncQueue;\n}(ReadableInterop);","map":{"version":3,"sources":["io/interfaces.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}