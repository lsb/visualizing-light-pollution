{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nvar STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\n\nvar I3STileManager = function () {\n  function I3STileManager() {\n    _classCallCheck(this, I3STileManager);\n\n    this._statusMap = {};\n  }\n\n  _createClass(I3STileManager, [{\n    key: \"add\",\n    value: function add(request, key, callback, options) {\n      var _this = this;\n\n      if (!this._statusMap[key]) {\n        this._statusMap[key] = {\n          request: request,\n          callback: callback,\n          key: key,\n          options: options,\n          status: STATUS.REQUESTED\n        };\n        request().then(function (data) {\n          _this._statusMap[key].status = STATUS.COMPLETED;\n\n          _this._statusMap[key].callback(data, options);\n        })[\"catch\"](function (error) {\n          _this._statusMap[key].status = STATUS.ERROR;\n          callback(error);\n        });\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(key, options) {\n      if (this._statusMap[key]) {\n        this._statusMap[key].options = options;\n      }\n    }\n  }, {\n    key: \"find\",\n    value: function find(key) {\n      return this._statusMap[key];\n    }\n  }]);\n\n  return I3STileManager;\n}();\n\nexport { I3STileManager as default };","map":{"version":3,"sources":["../../../../src/tileset/traversers/i3s-tile-manager.js"],"names":["STATUS","REQUESTED","COMPLETED","ERROR","I3STileManager","request","key","callback","options","status"],"mappings":";;AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,SAAS,EADI,WAAA;AAEbC,EAAAA,SAAS,EAFI,WAAA;AAGbC,EAAAA,KAAK,EAAE;AAHM,CAAf;;IAOqBC,c;AACnB,WAAA,cAAA,GAAc;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,CAAA;;AACZ,SAAA,UAAA,GAAA,EAAA;AACD;;;;wBAEGC,O,EAASC,G,EAAKC,Q,EAAUC,O,EAAS;AAAA,UAAA,KAAA,GAAA,IAAA;;AACnC,UAAI,CAAC,KAAA,UAAA,CAAL,GAAK,CAAL,EAA2B;AACzB,aAAA,UAAA,CAAA,GAAA,IAAuB;AAACH,UAAAA,OAAO,EAAR,OAAA;AAAUE,UAAAA,QAAQ,EAAlB,QAAA;AAAoBD,UAAAA,GAAG,EAAvB,GAAA;AAAyBE,UAAAA,OAAO,EAAhC,OAAA;AAAkCC,UAAAA,MAAM,EAAET,MAAM,CAACC;AAAjD,SAAvB;AACAI,QAAAA,OAAO,GAAPA,IAAAA,CACQ,UAAA,IAAA,EAAQ;AACZ,UAAA,KAAI,CAAJ,UAAA,CAAA,GAAA,EAAA,MAAA,GAA8BL,MAAM,CAApC,SAAA;;AACA,UAAA,KAAI,CAAJ,UAAA,CAAA,GAAA,EAAA,QAAA,CAAA,IAAA,EAAA,OAAA;AAHJK,SAAAA,EAAAA,OAAAA,EAKS,UAAA,KAAA,EAAS;AACd,UAAA,KAAI,CAAJ,UAAA,CAAA,GAAA,EAAA,MAAA,GAA8BL,MAAM,CAApC,KAAA;AACAO,UAAAA,QAAQ,CAARA,KAAQ,CAARA;AAPJF,SAAAA;AASD;AACF;;;2BAEMC,G,EAAKE,O,EAAS;AACnB,UAAI,KAAA,UAAA,CAAJ,GAAI,CAAJ,EAA0B;AACxB,aAAA,UAAA,CAAA,GAAA,EAAA,OAAA,GAAA,OAAA;AACD;AACF;;;yBAEIF,G,EAAK;AACR,aAAO,KAAA,UAAA,CAAP,GAAO,CAAP;AACD;;;;;;SA5BkBF,c","sourcesContent":["const STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\n\n// A helper class to manage tile metadata fetching\nexport default class I3STileManager {\n  constructor() {\n    this._statusMap = {};\n  }\n\n  add(request, key, callback, options) {\n    if (!this._statusMap[key]) {\n      this._statusMap[key] = {request, callback, key, options, status: STATUS.REQUESTED};\n      request()\n        .then(data => {\n          this._statusMap[key].status = STATUS.COMPLETED;\n          this._statusMap[key].callback(data, options);\n        })\n        .catch(error => {\n          this._statusMap[key].status = STATUS.ERROR;\n          callback(error);\n        });\n    }\n  }\n\n  update(key, options) {\n    if (this._statusMap[key]) {\n      this._statusMap[key].options = options;\n    }\n  }\n\n  find(key) {\n    return this._statusMap[key];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}