{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { isWebGL2, log } from '@luma.gl/gltools';\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport { assertWebGL2Context } from '../webgl-utils';\nimport { isObjectEmpty } from '../utils';\n\nvar TransformFeedback = function (_Resource) {\n  _inherits(TransformFeedback, _Resource);\n\n  _createClass(TransformFeedback, null, [{\n    key: \"isSupported\",\n    value: function isSupported(gl) {\n      return isWebGL2(gl);\n    }\n  }]);\n\n  function TransformFeedback(gl) {\n    var _this;\n\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TransformFeedback);\n\n    assertWebGL2Context(gl);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransformFeedback).call(this, gl, props));\n\n    _this.initialize(props);\n\n    _this.stubRemovedMethods('TransformFeedback', 'v6.0', ['pause', 'resume']);\n\n    Object.seal(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TransformFeedback, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var _this2 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.buffers = {};\n      this.unused = {};\n      this.configuration = null;\n      this.bindOnUse = true;\n\n      if (!isObjectEmpty(this.buffers)) {\n        this.bind(function () {\n          return _this2._unbindBuffers();\n        });\n      }\n\n      this.setProps(props);\n      return this;\n    }\n  }, {\n    key: \"setProps\",\n    value: function setProps(props) {\n      if ('program' in props) {\n        this.configuration = props.program && props.program.configuration;\n      }\n\n      if ('configuration' in props) {\n        this.configuration = props.configuration;\n      }\n\n      if ('bindOnUse' in props) {\n        props = props.bindOnUse;\n      }\n\n      if ('buffers' in props) {\n        this.setBuffers(props.buffers);\n      }\n    }\n  }, {\n    key: \"setBuffers\",\n    value: function setBuffers() {\n      var _this3 = this;\n\n      var buffers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.bind(function () {\n        for (var bufferName in buffers) {\n          _this3.setBuffer(bufferName, buffers[bufferName]);\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"setBuffer\",\n    value: function setBuffer(locationOrName, bufferOrParams) {\n      var _this4 = this;\n\n      var location = this._getVaryingIndex(locationOrName);\n\n      var _this$_getBufferParam = this._getBufferParams(bufferOrParams),\n          buffer = _this$_getBufferParam.buffer,\n          byteSize = _this$_getBufferParam.byteSize,\n          byteOffset = _this$_getBufferParam.byteOffset;\n\n      if (location < 0) {\n        this.unused[locationOrName] = buffer;\n        log.warn(function () {\n          return \"\".concat(_this4.id, \" unused varying buffer \").concat(locationOrName);\n        })();\n        return this;\n      }\n\n      this.buffers[location] = bufferOrParams;\n\n      if (!this.bindOnUse) {\n        this._bindBuffer(location, buffer, byteOffset, byteSize);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      var primitiveMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.gl.bindTransformFeedback(36386, this.handle);\n\n      this._bindBuffers();\n\n      this.gl.beginTransformFeedback(primitiveMode);\n      return this;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.gl.endTransformFeedback();\n\n      this._unbindBuffers();\n\n      this.gl.bindTransformFeedback(36386, null);\n      return this;\n    }\n  }, {\n    key: \"_getBufferParams\",\n    value: function _getBufferParams(bufferOrParams) {\n      var byteOffset;\n      var byteSize;\n      var buffer;\n\n      if (bufferOrParams instanceof Buffer === false) {\n        buffer = bufferOrParams.buffer;\n        byteSize = bufferOrParams.byteSize;\n        byteOffset = bufferOrParams.byteOffset;\n      } else {\n        buffer = bufferOrParams;\n      }\n\n      if (byteOffset !== undefined || byteSize !== undefined) {\n        byteOffset = byteOffset || 0;\n        byteSize = byteSize || buffer.byteLength - byteOffset;\n      }\n\n      return {\n        buffer: buffer,\n        byteOffset: byteOffset,\n        byteSize: byteSize\n      };\n    }\n  }, {\n    key: \"_getVaryingInfo\",\n    value: function _getVaryingInfo(locationOrName) {\n      return this.configuration && this.configuration.getVaryingInfo(locationOrName);\n    }\n  }, {\n    key: \"_getVaryingIndex\",\n    value: function _getVaryingIndex(locationOrName) {\n      if (this.configuration) {\n        return this.configuration.getVaryingInfo(locationOrName).location;\n      }\n\n      var location = Number(locationOrName);\n      return Number.isFinite(location) ? location : -1;\n    }\n  }, {\n    key: \"_bindBuffers\",\n    value: function _bindBuffers() {\n      if (this.bindOnUse) {\n        for (var bufferIndex in this.buffers) {\n          var _this$_getBufferParam2 = this._getBufferParams(this.buffers[bufferIndex]),\n              buffer = _this$_getBufferParam2.buffer,\n              byteSize = _this$_getBufferParam2.byteSize,\n              byteOffset = _this$_getBufferParam2.byteOffset;\n\n          this._bindBuffer(bufferIndex, buffer, byteOffset, byteSize);\n        }\n      }\n    }\n  }, {\n    key: \"_unbindBuffers\",\n    value: function _unbindBuffers() {\n      if (this.bindOnUse) {\n        for (var bufferIndex in this.buffers) {\n          this._bindBuffer(bufferIndex, null);\n        }\n      }\n    }\n  }, {\n    key: \"_bindBuffer\",\n    value: function _bindBuffer(index, buffer) {\n      var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var byteSize = arguments.length > 3 ? arguments[3] : undefined;\n      var handle = buffer && buffer.handle;\n\n      if (!handle || byteSize === undefined) {\n        this.gl.bindBufferBase(35982, index, handle);\n      } else {\n        this.gl.bindBufferRange(35982, index, handle, byteOffset, byteSize);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_createHandle\",\n    value: function _createHandle() {\n      return this.gl.createTransformFeedback();\n    }\n  }, {\n    key: \"_deleteHandle\",\n    value: function _deleteHandle() {\n      this.gl.deleteTransformFeedback(this.handle);\n    }\n  }, {\n    key: \"_bindHandle\",\n    value: function _bindHandle(handle) {\n      this.gl.bindTransformFeedback(36386, this.handle);\n    }\n  }]);\n\n  return TransformFeedback;\n}(Resource);\n\nexport { TransformFeedback as default };","map":{"version":3,"sources":["../../../src/classes/transform-feedback.js"],"names":["TransformFeedback","Resource","gl","isWebGL2","props","assertWebGL2Context","Object","isObjectEmpty","buffers","locationOrName","bufferOrParams","location","buffer","byteSize","byteOffset","log","primitiveMode","Number","index","handle"],"mappings":"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","sourcesContent":["import GL from '@luma.gl/constants';\nimport {isWebGL2, log} from '@luma.gl/gltools';\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport {assertWebGL2Context} from '../webgl-utils';\nimport {isObjectEmpty} from '../utils';\n\n// NOTE: The `bindOnUse` flag is a major workaround:\n// See https://github.com/KhronosGroup/WebGL/issues/2346\n\nexport default class TransformFeedback extends Resource {\n  static isSupported(gl) {\n    return isWebGL2(gl);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGL2Context(gl);\n    super(gl, props);\n\n    this.initialize(props);\n    this.stubRemovedMethods('TransformFeedback', 'v6.0', ['pause', 'resume']);\n    Object.seal(this);\n  }\n\n  initialize(props = {}) {\n    this.buffers = {};\n    this.unused = {};\n    this.configuration = null;\n    this.bindOnUse = true;\n\n    // Unbind any currently bound buffers\n    if (!isObjectEmpty(this.buffers)) {\n      this.bind(() => this._unbindBuffers());\n    }\n\n    this.setProps(props);\n    return this;\n  }\n\n  setProps(props) {\n    if ('program' in props) {\n      this.configuration = props.program && props.program.configuration;\n    }\n    if ('configuration' in props) {\n      this.configuration = props.configuration;\n    }\n    if ('bindOnUse' in props) {\n      props = props.bindOnUse;\n    }\n    if ('buffers' in props) {\n      this.setBuffers(props.buffers);\n    }\n  }\n\n  setBuffers(buffers = {}) {\n    this.bind(() => {\n      for (const bufferName in buffers) {\n        this.setBuffer(bufferName, buffers[bufferName]);\n      }\n    });\n    return this;\n  }\n\n  setBuffer(locationOrName, bufferOrParams) {\n    const location = this._getVaryingIndex(locationOrName);\n    const {buffer, byteSize, byteOffset} = this._getBufferParams(bufferOrParams);\n\n    if (location < 0) {\n      this.unused[locationOrName] = buffer;\n      log.warn(() => `${this.id} unused varying buffer ${locationOrName}`)();\n      return this;\n    }\n\n    this.buffers[location] = bufferOrParams;\n\n    // Need to avoid chrome bug where buffer that is already bound to a different target\n    // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n    if (!this.bindOnUse) {\n      this._bindBuffer(location, buffer, byteOffset, byteSize);\n    }\n\n    return this;\n  }\n\n  begin(primitiveMode = GL.POINTS) {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n    this._bindBuffers();\n    this.gl.beginTransformFeedback(primitiveMode);\n    return this;\n  }\n\n  end() {\n    this.gl.endTransformFeedback();\n    this._unbindBuffers();\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _getBufferParams(bufferOrParams) {\n    let byteOffset;\n    let byteSize;\n    let buffer;\n    if (bufferOrParams instanceof Buffer === false) {\n      buffer = bufferOrParams.buffer;\n      byteSize = bufferOrParams.byteSize;\n      byteOffset = bufferOrParams.byteOffset;\n    } else {\n      buffer = bufferOrParams;\n    }\n    // to use bindBufferRange, either offset or size must be specified, use default value for the other.\n    if (byteOffset !== undefined || byteSize !== undefined) {\n      byteOffset = byteOffset || 0;\n      byteSize = byteSize || buffer.byteLength - byteOffset;\n    }\n    return {buffer, byteOffset, byteSize};\n  }\n\n  _getVaryingInfo(locationOrName) {\n    return this.configuration && this.configuration.getVaryingInfo(locationOrName);\n  }\n\n  _getVaryingIndex(locationOrName) {\n    if (this.configuration) {\n      return this.configuration.getVaryingInfo(locationOrName).location;\n    }\n    const location = Number(locationOrName);\n    return Number.isFinite(location) ? location : -1;\n  }\n\n  // Need to avoid chrome bug where buffer that is already bound to a different target\n  // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n  _bindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        const {buffer, byteSize, byteOffset} = this._getBufferParams(this.buffers[bufferIndex]);\n        this._bindBuffer(bufferIndex, buffer, byteOffset, byteSize);\n      }\n    }\n  }\n\n  _unbindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        this._bindBuffer(bufferIndex, null);\n      }\n    }\n  }\n\n  _bindBuffer(index, buffer, byteOffset = 0, byteSize) {\n    const handle = buffer && buffer.handle;\n    if (!handle || byteSize === undefined) {\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle);\n    } else {\n      this.gl.bindBufferRange(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle, byteOffset, byteSize);\n    }\n    return this;\n  }\n\n  // RESOURCE METHODS\n\n  _createHandle() {\n    return this.gl.createTransformFeedback();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteTransformFeedback(this.handle);\n  }\n\n  _bindHandle(handle) {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}