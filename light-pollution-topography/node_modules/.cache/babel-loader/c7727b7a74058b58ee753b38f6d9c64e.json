{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nexport var GL_PRIMITIVE = {\n  POINTS: 0x0000,\n  LINES: 0x0001,\n  TRIANGLES: 0x0004\n};\nexport var GL_PRIMITIVE_MODE = {\n  POINTS: 0x0000,\n  LINES: 0x0001,\n  LINE_LOOP: 0x0002,\n  LINE_STRIP: 0x0003,\n  TRIANGLES: 0x0004,\n  TRIANGLE_STRIP: 0x0005,\n  TRIANGLE_FAN: 0x0006\n};\nexport var GL_TYPE = {\n  BYTE: 5120,\n  UNSIGNED_BYTE: 5121,\n  SHORT: 5122,\n  UNSIGNED_SHORT: 5123,\n  INT: 5124,\n  UNSIGNED_INT: 5125,\n  FLOAT: 5126,\n  DOUBLE: 5130\n};\nexport var GL = _objectSpread({}, GL_PRIMITIVE_MODE, {}, GL_TYPE);","map":{"version":3,"sources":["../../../src/geometry/constants.js"],"names":["GL_PRIMITIVE","POINTS","LINES","TRIANGLES","GL_PRIMITIVE_MODE","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","GL_TYPE","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","DOUBLE","GL"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EADoB,MAAA;AAE1BC,EAAAA,KAAK,EAFqB,MAAA;AAG1BC,EAAAA,SAAS,EAAE;AAHe,CAArB;AAOP,OAAO,IAAMC,iBAAiB,GAAG;AAC/BH,EAAAA,MAAM,EADyB,MAAA;AAE/BC,EAAAA,KAAK,EAF0B,MAAA;AAG/BG,EAAAA,SAAS,EAHsB,MAAA;AAI/BC,EAAAA,UAAU,EAJqB,MAAA;AAK/BH,EAAAA,SAAS,EALsB,MAAA;AAM/BI,EAAAA,cAAc,EANiB,MAAA;AAO/BC,EAAAA,YAAY,EAAE;AAPiB,CAA1B;AAWP,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EADiB,IAAA;AAErBC,EAAAA,aAAa,EAFQ,IAAA;AAGrBC,EAAAA,KAAK,EAHgB,IAAA;AAIrBC,EAAAA,cAAc,EAJO,IAAA;AAKrBC,EAAAA,GAAG,EALkB,IAAA;AAMrBC,EAAAA,YAAY,EANS,IAAA;AAOrBC,EAAAA,KAAK,EAPgB,IAAA;AAQrBC,EAAAA,MAAM,EAAE;AARa,CAAhB;AAWP,OAAO,IAAMC,EAAE,GAAA,aAAA,CAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,EAAR,OAAQ,CAAR","sourcesContent":["// Subset of WebGL constants\n\nexport const GL_PRIMITIVE = {\n  POINTS: 0x0000, // Points. single points.\n  LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n  TRIANGLES: 0x0004 // Triangles. Each set of three vertices creates a separate triangle.\n};\n\n// Primitive modes\nexport const GL_PRIMITIVE_MODE = {\n  POINTS: 0x0000, // Points. single points.\n  LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // Lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // Lines/ a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // Triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // Triangles. A connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // Triangles. A connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport const GL_TYPE = {\n  BYTE: 5120,\n  UNSIGNED_BYTE: 5121,\n  SHORT: 5122,\n  UNSIGNED_SHORT: 5123,\n  INT: 5124,\n  UNSIGNED_INT: 5125,\n  FLOAT: 5126,\n  DOUBLE: 5130\n};\n\nexport const GL = {\n  ...GL_PRIMITIVE_MODE,\n  ...GL_TYPE\n};\n"]},"metadata":{},"sourceType":"module"}