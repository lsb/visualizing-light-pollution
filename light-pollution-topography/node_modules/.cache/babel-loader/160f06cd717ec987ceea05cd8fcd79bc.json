{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport View from './view';\nimport Viewport from '../viewports/viewport';\nimport { Matrix4 } from 'math.gl';\nimport OrthographicController from '../controllers/orthographic-controller';\nvar viewMatrix = new Matrix4().lookAt({\n  eye: [0, 0, 1]\n});\n\nfunction getProjectionMatrix(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      near = _ref.near,\n      far = _ref.far;\n  width = width || 1;\n  height = height || 1;\n  return new Matrix4().ortho({\n    left: -width / 2,\n    right: width / 2,\n    bottom: height / 2,\n    top: -height / 2,\n    near: near,\n    far: far\n  });\n}\n\nvar OrthographicViewport = function (_Viewport) {\n  _inherits(OrthographicViewport, _Viewport);\n\n  function OrthographicViewport(_ref2) {\n    var _this;\n\n    var id = _ref2.id,\n        x = _ref2.x,\n        y = _ref2.y,\n        width = _ref2.width,\n        height = _ref2.height,\n        _ref2$near = _ref2.near,\n        near = _ref2$near === void 0 ? 0.1 : _ref2$near,\n        _ref2$far = _ref2.far,\n        far = _ref2$far === void 0 ? 1000 : _ref2$far,\n        _ref2$zoom = _ref2.zoom,\n        zoom = _ref2$zoom === void 0 ? 0 : _ref2$zoom,\n        _ref2$target = _ref2.target,\n        target = _ref2$target === void 0 ? [0, 0, 0] : _ref2$target;\n\n    _classCallCheck(this, OrthographicViewport);\n\n    var scale = Math.pow(2, zoom);\n    return _possibleConstructorReturn(_this, new Viewport({\n      id: id,\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      position: target,\n      viewMatrix: viewMatrix.clone().scale(scale),\n      projectionMatrix: getProjectionMatrix({\n        width: width,\n        height: height,\n        near: near,\n        far: far\n      }),\n      zoom: zoom\n    }));\n  }\n\n  return OrthographicViewport;\n}(Viewport);\n\nvar OrthographicView = function (_View) {\n  _inherits(OrthographicView, _View);\n\n  function OrthographicView(props) {\n    _classCallCheck(this, OrthographicView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrthographicView).call(this, Object.assign({}, props, {\n      type: OrthographicViewport\n    })));\n  }\n\n  _createClass(OrthographicView, [{\n    key: \"controller\",\n    get: function get() {\n      return this._getControllerProps({\n        type: OrthographicController,\n        ViewportType: OrthographicViewport\n      });\n    }\n  }]);\n\n  return OrthographicView;\n}(View);\n\nexport { OrthographicView as default };\nOrthographicView.displayName = 'OrthographicView';","map":{"version":3,"sources":["../../../src/views/orthographic-view.js"],"names":["viewMatrix","eye","width","height","near","far","left","right","bottom","top","OrthographicViewport","Viewport","id","x","y","zoom","target","scale","Math","position","projectionMatrix","getProjectionMatrix","OrthographicView","View","type","ViewportType"],"mappings":"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","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\n\nimport {Matrix4} from 'math.gl';\nimport OrthographicController from '../controllers/orthographic-controller';\n\nconst viewMatrix = new Matrix4().lookAt({eye: [0, 0, 1]});\n\nfunction getProjectionMatrix({width, height, near, far}) {\n  // Make sure Matrix4.ortho doesn't crash on 0 width/height\n  width = width || 1;\n  height = height || 1;\n\n  return new Matrix4().ortho({\n    left: -width / 2,\n    right: width / 2,\n    bottom: height / 2,\n    top: -height / 2,\n    near,\n    far\n  });\n}\n\nclass OrthographicViewport extends Viewport {\n  constructor({id, x, y, width, height, near = 0.1, far = 1000, zoom = 0, target = [0, 0, 0]}) {\n    const scale = Math.pow(2, zoom);\n    return new Viewport({\n      id,\n      x,\n      y,\n      width,\n      height,\n      position: target,\n      viewMatrix: viewMatrix.clone().scale(scale),\n      projectionMatrix: getProjectionMatrix({width, height, near, far}),\n      zoom\n    });\n  }\n}\n\nexport default class OrthographicView extends View {\n  constructor(props) {\n    super(\n      Object.assign({}, props, {\n        type: OrthographicViewport\n      })\n    );\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: OrthographicController,\n      ViewportType: OrthographicViewport\n    });\n  }\n}\n\nOrthographicView.displayName = 'OrthographicView';\n"]},"metadata":{},"sourceType":"module"}