{"ast":null,"code":"import _toConsumableArray from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _createSuper from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { ArrowType, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n/** @ignore */\n\nexport var JSONTypeAssembler = /*#__PURE__*/function (_Visitor) {\n  _inherits(JSONTypeAssembler, _Visitor);\n\n  var _super = _createSuper(JSONTypeAssembler);\n\n  function JSONTypeAssembler() {\n    _classCallCheck(this, JSONTypeAssembler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(JSONTypeAssembler, [{\n    key: \"visit\",\n    value: function visit(node) {\n      return node == null ? undefined : _get(_getPrototypeOf(JSONTypeAssembler.prototype), \"visit\", this).call(this, node);\n    }\n  }, {\n    key: \"visitNull\",\n    value: function visitNull(_ref) {\n      var typeId = _ref.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(_ref2) {\n      var typeId = _ref2.typeId,\n          bitWidth = _ref2.bitWidth,\n          isSigned = _ref2.isSigned;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'bitWidth': bitWidth,\n        'isSigned': isSigned\n      };\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(_ref3) {\n      var typeId = _ref3.typeId,\n          precision = _ref3.precision;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'precision': Precision[precision]\n      };\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(_ref4) {\n      var typeId = _ref4.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(_ref5) {\n      var typeId = _ref5.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(_ref6) {\n      var typeId = _ref6.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(_ref7) {\n      var typeId = _ref7.typeId,\n          scale = _ref7.scale,\n          precision = _ref7.precision;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'scale': scale,\n        'precision': precision\n      };\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(_ref8) {\n      var typeId = _ref8.typeId,\n          unit = _ref8.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': DateUnit[unit]\n      };\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(_ref9) {\n      var typeId = _ref9.typeId,\n          unit = _ref9.unit,\n          bitWidth = _ref9.bitWidth;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': TimeUnit[unit],\n        bitWidth: bitWidth\n      };\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(_ref10) {\n      var typeId = _ref10.typeId,\n          timezone = _ref10.timezone,\n          unit = _ref10.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': TimeUnit[unit],\n        timezone: timezone\n      };\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(_ref11) {\n      var typeId = _ref11.typeId,\n          unit = _ref11.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': IntervalUnit[unit]\n      };\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(_ref12) {\n      var typeId = _ref12.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(_ref13) {\n      var typeId = _ref13.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(_ref14) {\n      var typeId = _ref14.typeId,\n          mode = _ref14.mode,\n          typeIds = _ref14.typeIds;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'mode': UnionMode[mode],\n        'typeIds': _toConsumableArray(typeIds)\n      };\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(node) {\n      return this.visit(node.dictionary);\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(_ref15) {\n      var typeId = _ref15.typeId,\n          byteWidth = _ref15.byteWidth;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'byteWidth': byteWidth\n      };\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(_ref16) {\n      var typeId = _ref16.typeId,\n          listSize = _ref16.listSize;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'listSize': listSize\n      };\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(_ref17) {\n      var typeId = _ref17.typeId,\n          keysSorted = _ref17.keysSorted;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'keysSorted': keysSorted\n      };\n    }\n  }]);\n\n  return JSONTypeAssembler;\n}(Visitor);","map":{"version":3,"sources":["visitor/jsontypeassembler.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\nimport { ArrowType, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n\n/** @ignore */\nexport interface JSONTypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T): object | undefined;\n}\n\n/** @ignore */\nexport class JSONTypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T): object | undefined {\n        return node == null ? undefined : super.visit(node);\n    }\n    public visitNull<T extends type.Null>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitInt<T extends type.Int>({ typeId, bitWidth, isSigned }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'bitWidth': bitWidth, 'isSigned': isSigned };\n    }\n    public visitFloat<T extends type.Float>({ typeId, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'precision': Precision[precision] };\n    }\n    public visitBinary<T extends type.Binary>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitBool<T extends type.Bool>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUtf8<T extends type.Utf8>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitDecimal<T extends type.Decimal>({ typeId, scale, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'scale': scale, 'precision': precision };\n    }\n    public visitDate<T extends type.Date_>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': DateUnit[unit] };\n    }\n    public visitTime<T extends type.Time>({ typeId, unit, bitWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], bitWidth };\n    }\n    public visitTimestamp<T extends type.Timestamp>({ typeId, timezone, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], timezone };\n    }\n    public visitInterval<T extends type.Interval>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': IntervalUnit[unit] };\n    }\n    public visitList<T extends type.List>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitStruct<T extends type.Struct>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUnion<T extends type.Union>({ typeId, mode, typeIds }: T) {\n        return {\n            'name': ArrowType[typeId].toLowerCase(),\n            'mode': UnionMode[mode],\n            'typeIds': [...typeIds]\n        };\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T) {\n        return this.visit(node.dictionary);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>({ typeId, byteWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'byteWidth': byteWidth };\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>({ typeId, listSize }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'listSize': listSize };\n    }\n    public visitMap<T extends type.Map_>({ typeId, keysSorted }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'keysSorted': keysSorted };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}