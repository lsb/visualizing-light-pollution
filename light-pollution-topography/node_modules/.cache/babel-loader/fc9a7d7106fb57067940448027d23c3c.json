{"ast":null,"code":"import { getFirstCharacters } from '../binary-utils/get-first-characters';\nexport function parseJSON(string) {\n  try {\n    return JSON.parse(string);\n  } catch (_) {\n    throw new Error(\"Failed to parse JSON from data starting with \\\"\".concat(getFirstCharacters(string), \"\\\"\"));\n  }\n}","map":{"version":3,"sources":["../../../../src/lib/parser-utils/parse-json.js"],"names":["JSON","getFirstCharacters"],"mappings":"AAAA,SAAA,kBAAA,QAAA,sCAAA;AAGA,OAAO,SAAA,SAAA,CAAA,MAAA,EAA2B;AAChC,MAAI;AACF,WAAOA,IAAI,CAAJA,KAAAA,CAAP,MAAOA,CAAP;AADF,GAAA,CAEE,OAAA,CAAA,EAAU;AACV,UAAM,IAAA,KAAA,CAAA,kDAAA,MAAA,CAA2DC,kBAAkB,CAA7E,MAA6E,CAA7E,EAAN,IAAM,CAAA,CAAN;AACD;AACF","sourcesContent":["import {getFirstCharacters} from '../binary-utils/get-first-characters';\n\n// Minimal JSON parser with a meaningful error message\nexport function parseJSON(string) {\n  try {\n    return JSON.parse(string);\n  } catch (_) {\n    throw new Error(`Failed to parse JSON from data starting with \"${getFirstCharacters(string)}\"`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}