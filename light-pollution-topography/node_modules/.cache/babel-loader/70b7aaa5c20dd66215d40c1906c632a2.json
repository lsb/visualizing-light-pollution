{"ast":null,"code":"export function flatten(array) {\n  var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n    return true;\n  };\n\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n\n  return flattenArray(array, filter, []);\n}\n\nfunction flattenArray(array, filter, result) {\n  var index = -1;\n\n  while (++index < array.length) {\n    var value = array[index];\n\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n\n  return result;\n}\n\nexport function fillArray(_ref) {\n  var target = _ref.target,\n      source = _ref.source,\n      _ref$start = _ref.start,\n      start = _ref$start === void 0 ? 0 : _ref$start,\n      _ref$count = _ref.count,\n      count = _ref$count === void 0 ? 1 : _ref$count;\n  var length = source.length;\n  var total = count * length;\n  var copied = 0;\n\n  for (var i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return target;\n}","map":{"version":3,"sources":["../../../src/utils/flatten.js"],"names":["filter","Array","flattenArray","index","array","value","result","target","source","start","count","length","total","copied","i"],"mappings":"AAgCA,OAAO,SAAA,OAAA,CAAA,KAAA,EAA6C;AAAA,MAArBA,MAAqB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAZ,YAAA;AAAA,WAAA,IAAA;AAAY,GAAA;;AAElD,MAAI,CAACC,KAAK,CAALA,OAAAA,CAAL,KAAKA,CAAL,EAA2B;AACzB,WAAOD,MAAM,CAANA,KAAM,CAANA,GAAgB,CAAhBA,KAAgB,CAAhBA,GAAP,EAAA;AACD;;AAED,SAAOE,YAAY,CAAA,KAAA,EAAA,MAAA,EAAnB,EAAmB,CAAnB;AACD;;AAGD,SAAA,YAAA,CAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAA6C;AAC3C,MAAIC,KAAK,GAAG,CAAZ,CAAA;;AACA,SAAO,EAAA,KAAA,GAAUC,KAAK,CAAtB,MAAA,EAA+B;AAC7B,QAAMC,KAAK,GAAGD,KAAK,CAAnB,KAAmB,CAAnB;;AACA,QAAIH,KAAK,CAALA,OAAAA,CAAJ,KAAIA,CAAJ,EAA0B;AACxBC,MAAAA,YAAY,CAAA,KAAA,EAAA,MAAA,EAAZA,MAAY,CAAZA;AADF,KAAA,MAEO,IAAIF,MAAM,CAAV,KAAU,CAAV,EAAmB;AACxBM,MAAAA,MAAM,CAANA,IAAAA,CAAAA,KAAAA;AACD;AACF;;AACD,SAAA,MAAA;AACD;;AAGD,OAAO,SAAA,SAAA,CAAA,IAAA,EAA2D;AAAA,MAAvCC,MAAuC,GAAA,IAAA,CAAvCA,MAAuC;AAAA,MAA/BC,MAA+B,GAAA,IAAA,CAA/BA,MAA+B;AAAA,MAAA,UAAA,GAAA,IAAA,CAAvBC,KAAuB;AAAA,MAAvBA,KAAuB,GAAA,UAAA,KAAA,KAAA,CAAA,GAAf,CAAe,GAAA,UAAA;AAAA,MAAA,UAAA,GAAA,IAAA,CAAZC,KAAY;AAAA,MAAZA,KAAY,GAAA,UAAA,KAAA,KAAA,CAAA,GAAJ,CAAI,GAAA,UAAA;AAChE,MAAMC,MAAM,GAAGH,MAAM,CAArB,MAAA;AACA,MAAMI,KAAK,GAAGF,KAAK,GAAnB,MAAA;AACA,MAAIG,MAAM,GAAV,CAAA;;AACA,OAAK,IAAIC,CAAC,GAAV,KAAA,EAAoBD,MAAM,GAA1B,MAAA,EAAqCA,MAArC,EAAA,EAA+C;AAC7CN,IAAAA,MAAM,CAACO,CAAPP,EAAM,CAANA,GAAcC,MAAM,CAApBD,MAAoB,CAApBA;AACD;;AAED,SAAOM,MAAM,GAAb,KAAA,EAAuB;AAGrB,QAAIA,MAAM,GAAGD,KAAK,GAAlB,MAAA,EAA6B;AAC3BL,MAAAA,MAAM,CAANA,UAAAA,CAAkBE,KAAK,GAAvBF,MAAAA,EAAAA,KAAAA,EAAyCE,KAAK,GAA9CF,MAAAA;AACAM,MAAAA,MAAM,IAANA,CAAAA;AAFF,KAAA,MAGO;AACLN,MAAAA,MAAM,CAANA,UAAAA,CAAkBE,KAAK,GAAvBF,MAAAA,EAAAA,KAAAA,EAAyCE,KAAK,GAALA,KAAAA,GAAzCF,MAAAA;AACAM,MAAAA,MAAM,GAANA,KAAAA;AACD;AACF;;AAED,SAAA,MAAA;AACD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Flattens a nested array into a single level array,\n * or a single value into an array with one value\n * @example flatten([[1, [2]], [3], 4]) => [1, 2, 3, 4]\n * @example flatten(1) => [1]\n * @param {Array} array The array to flatten.\n * @param {Function} filter= - Optional predicate called on each `value` to\n *   determine if it should be included (pushed onto) the resulting array.\n * @param {Function} map= - Optional transform applied to each array elements.\n * @param {Array} result=[] - Optional array to push value into\n * @return {Array} Returns the new flattened array (new array or `result` if provided)\n */\nexport function flatten(array, filter = () => true) {\n  // Wrap single object in array\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n  // Deep flatten and filter the array\n  return flattenArray(array, filter, []);\n}\n\n// Deep flattens an array. Helper to `flatten`, see its parameters\nfunction flattenArray(array, filter, result) {\n  let index = -1;\n  while (++index < array.length) {\n    const value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n// Uses copyWithin to significantly speed up typed array value filling\nexport function fillArray({target, source, start = 0, count = 1}) {\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return target;\n}\n"]},"metadata":{},"sourceType":"module"}