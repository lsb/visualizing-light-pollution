{"ast":null,"code":"import _createSuper from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { instance as comparer } from './visitor/typecomparator';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\n\nexport var DataType = /*#__PURE__*/function () {\n  function DataType() {\n    _classCallCheck(this, DataType);\n  }\n\n  _createClass(DataType, [{\n    key: \"compareTo\",\n    value: function compareTo(other) {\n      return comparer.visit(this, other);\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.NONE;\n    }\n  }], [{\n    key: \"isNull\",\n\n    /** @nocollapse */\n    value: function isNull(x) {\n      return x && x.typeId === Type.Null;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isInt\",\n    value: function isInt(x) {\n      return x && x.typeId === Type.Int;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isFloat\",\n    value: function isFloat(x) {\n      return x && x.typeId === Type.Float;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isBinary\",\n    value: function isBinary(x) {\n      return x && x.typeId === Type.Binary;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isUtf8\",\n    value: function isUtf8(x) {\n      return x && x.typeId === Type.Utf8;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isBool\",\n    value: function isBool(x) {\n      return x && x.typeId === Type.Bool;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isDecimal\",\n    value: function isDecimal(x) {\n      return x && x.typeId === Type.Decimal;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isDate\",\n    value: function isDate(x) {\n      return x && x.typeId === Type.Date;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isTime\",\n    value: function isTime(x) {\n      return x && x.typeId === Type.Time;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isTimestamp\",\n    value: function isTimestamp(x) {\n      return x && x.typeId === Type.Timestamp;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isInterval\",\n    value: function isInterval(x) {\n      return x && x.typeId === Type.Interval;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isList\",\n    value: function isList(x) {\n      return x && x.typeId === Type.List;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isStruct\",\n    value: function isStruct(x) {\n      return x && x.typeId === Type.Struct;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isUnion\",\n    value: function isUnion(x) {\n      return x && x.typeId === Type.Union;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isFixedSizeBinary\",\n    value: function isFixedSizeBinary(x) {\n      return x && x.typeId === Type.FixedSizeBinary;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isFixedSizeList\",\n    value: function isFixedSizeList(x) {\n      return x && x.typeId === Type.FixedSizeList;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isMap\",\n    value: function isMap(x) {\n      return x && x.typeId === Type.Map;\n    }\n    /** @nocollapse */\n\n  }, {\n    key: \"isDictionary\",\n    value: function isDictionary(x) {\n      return x && x.typeId === Type.Dictionary;\n    }\n  }]);\n\n  return DataType;\n}();\n\nDataType[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  proto.ArrayType = Array;\n  return proto[Symbol.toStringTag] = 'DataType';\n}(DataType.prototype);\n/** @ignore */\n\n\nexport var Null = /*#__PURE__*/function (_DataType) {\n  _inherits(Null, _DataType);\n\n  var _super = _createSuper(Null);\n\n  function Null() {\n    _classCallCheck(this, Null);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Null, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Null\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Null;\n    }\n  }]);\n\n  return Null;\n}(DataType);\n\nNull[Symbol.toStringTag] = function (proto) {\n  return proto[Symbol.toStringTag] = 'Null';\n}(Null.prototype);\n/** @ignore */\n\n\nvar Int_ = /*#__PURE__*/function (_DataType2) {\n  _inherits(Int_, _DataType2);\n\n  var _super2 = _createSuper(Int_);\n\n  function Int_(isSigned, bitWidth) {\n    var _this;\n\n    _classCallCheck(this, Int_);\n\n    _this = _super2.call(this);\n    _this.isSigned = isSigned;\n    _this.bitWidth = bitWidth;\n    return _this;\n  }\n\n  _createClass(Int_, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.isSigned ? \"I\" : \"Ui\", \"nt\").concat(this.bitWidth);\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Int;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.bitWidth) {\n        case 8:\n          return this.isSigned ? Int8Array : Uint8Array;\n\n        case 16:\n          return this.isSigned ? Int16Array : Uint16Array;\n\n        case 32:\n          return this.isSigned ? Int32Array : Uint32Array;\n\n        case 64:\n          return this.isSigned ? Int32Array : Uint32Array;\n      }\n\n      throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n    }\n  }]);\n\n  return Int_;\n}(DataType);\n\nInt_[Symbol.toStringTag] = function (proto) {\n  proto.isSigned = null;\n  proto.bitWidth = null;\n  return proto[Symbol.toStringTag] = 'Int';\n}(Int_.prototype);\n\nexport { Int_ as Int };\n/** @ignore */\n\nexport var Int8 = /*#__PURE__*/function (_Int_) {\n  _inherits(Int8, _Int_);\n\n  var _super3 = _createSuper(Int8);\n\n  function Int8() {\n    _classCallCheck(this, Int8);\n\n    return _super3.call(this, true, 8);\n  }\n\n  return Int8;\n}(Int_);\n/** @ignore */\n\nexport var Int16 = /*#__PURE__*/function (_Int_2) {\n  _inherits(Int16, _Int_2);\n\n  var _super4 = _createSuper(Int16);\n\n  function Int16() {\n    _classCallCheck(this, Int16);\n\n    return _super4.call(this, true, 16);\n  }\n\n  return Int16;\n}(Int_);\n/** @ignore */\n\nexport var Int32 = /*#__PURE__*/function (_Int_3) {\n  _inherits(Int32, _Int_3);\n\n  var _super5 = _createSuper(Int32);\n\n  function Int32() {\n    _classCallCheck(this, Int32);\n\n    return _super5.call(this, true, 32);\n  }\n\n  return Int32;\n}(Int_);\n/** @ignore */\n\nexport var Int64 = /*#__PURE__*/function (_Int_4) {\n  _inherits(Int64, _Int_4);\n\n  var _super6 = _createSuper(Int64);\n\n  function Int64() {\n    _classCallCheck(this, Int64);\n\n    return _super6.call(this, true, 64);\n  }\n\n  return Int64;\n}(Int_);\n/** @ignore */\n\nexport var Uint8 = /*#__PURE__*/function (_Int_5) {\n  _inherits(Uint8, _Int_5);\n\n  var _super7 = _createSuper(Uint8);\n\n  function Uint8() {\n    _classCallCheck(this, Uint8);\n\n    return _super7.call(this, false, 8);\n  }\n\n  return Uint8;\n}(Int_);\n/** @ignore */\n\nexport var Uint16 = /*#__PURE__*/function (_Int_6) {\n  _inherits(Uint16, _Int_6);\n\n  var _super8 = _createSuper(Uint16);\n\n  function Uint16() {\n    _classCallCheck(this, Uint16);\n\n    return _super8.call(this, false, 16);\n  }\n\n  return Uint16;\n}(Int_);\n/** @ignore */\n\nexport var Uint32 = /*#__PURE__*/function (_Int_7) {\n  _inherits(Uint32, _Int_7);\n\n  var _super9 = _createSuper(Uint32);\n\n  function Uint32() {\n    _classCallCheck(this, Uint32);\n\n    return _super9.call(this, false, 32);\n  }\n\n  return Uint32;\n}(Int_);\n/** @ignore */\n\nexport var Uint64 = /*#__PURE__*/function (_Int_8) {\n  _inherits(Uint64, _Int_8);\n\n  var _super10 = _createSuper(Uint64);\n\n  function Uint64() {\n    _classCallCheck(this, Uint64);\n\n    return _super10.call(this, false, 64);\n  }\n\n  return Uint64;\n}(Int_);\nObject.defineProperty(Int8.prototype, 'ArrayType', {\n  value: Int8Array\n});\nObject.defineProperty(Int16.prototype, 'ArrayType', {\n  value: Int16Array\n});\nObject.defineProperty(Int32.prototype, 'ArrayType', {\n  value: Int32Array\n});\nObject.defineProperty(Int64.prototype, 'ArrayType', {\n  value: Int32Array\n});\nObject.defineProperty(Uint8.prototype, 'ArrayType', {\n  value: Uint8Array\n});\nObject.defineProperty(Uint16.prototype, 'ArrayType', {\n  value: Uint16Array\n});\nObject.defineProperty(Uint32.prototype, 'ArrayType', {\n  value: Uint32Array\n});\nObject.defineProperty(Uint64.prototype, 'ArrayType', {\n  value: Uint32Array\n});\n/** @ignore */\n\nexport var Float = /*#__PURE__*/function (_DataType3) {\n  _inherits(Float, _DataType3);\n\n  var _super11 = _createSuper(Float);\n\n  function Float(precision) {\n    var _this2;\n\n    _classCallCheck(this, Float);\n\n    _this2 = _super11.call(this);\n    _this2.precision = precision;\n    return _this2;\n  }\n\n  _createClass(Float, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Float\".concat(this.precision << 5 || 16);\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Float;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.precision) {\n        case Precision.HALF:\n          return Uint16Array;\n\n        case Precision.SINGLE:\n          return Float32Array;\n\n        case Precision.DOUBLE:\n          return Float64Array;\n      }\n\n      throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n    }\n  }]);\n\n  return Float;\n}(DataType);\n\nFloat[Symbol.toStringTag] = function (proto) {\n  proto.precision = null;\n  return proto[Symbol.toStringTag] = 'Float';\n}(Float.prototype);\n/** @ignore */\n\n\nexport var Float16 = /*#__PURE__*/function (_Float) {\n  _inherits(Float16, _Float);\n\n  var _super12 = _createSuper(Float16);\n\n  function Float16() {\n    _classCallCheck(this, Float16);\n\n    return _super12.call(this, Precision.HALF);\n  }\n\n  return Float16;\n}(Float);\n/** @ignore */\n\nexport var Float32 = /*#__PURE__*/function (_Float2) {\n  _inherits(Float32, _Float2);\n\n  var _super13 = _createSuper(Float32);\n\n  function Float32() {\n    _classCallCheck(this, Float32);\n\n    return _super13.call(this, Precision.SINGLE);\n  }\n\n  return Float32;\n}(Float);\n/** @ignore */\n\nexport var Float64 = /*#__PURE__*/function (_Float3) {\n  _inherits(Float64, _Float3);\n\n  var _super14 = _createSuper(Float64);\n\n  function Float64() {\n    _classCallCheck(this, Float64);\n\n    return _super14.call(this, Precision.DOUBLE);\n  }\n\n  return Float64;\n}(Float);\nObject.defineProperty(Float16.prototype, 'ArrayType', {\n  value: Uint16Array\n});\nObject.defineProperty(Float32.prototype, 'ArrayType', {\n  value: Float32Array\n});\nObject.defineProperty(Float64.prototype, 'ArrayType', {\n  value: Float64Array\n});\n/** @ignore */\n\nexport var Binary = /*#__PURE__*/function (_DataType4) {\n  _inherits(Binary, _DataType4);\n\n  var _super15 = _createSuper(Binary);\n\n  function Binary() {\n    _classCallCheck(this, Binary);\n\n    return _super15.call(this);\n  }\n\n  _createClass(Binary, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Binary\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Binary;\n    }\n  }]);\n\n  return Binary;\n}(DataType);\n\nBinary[Symbol.toStringTag] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Binary';\n}(Binary.prototype);\n/** @ignore */\n\n\nexport var Utf8 = /*#__PURE__*/function (_DataType5) {\n  _inherits(Utf8, _DataType5);\n\n  var _super16 = _createSuper(Utf8);\n\n  function Utf8() {\n    _classCallCheck(this, Utf8);\n\n    return _super16.call(this);\n  }\n\n  _createClass(Utf8, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Utf8\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Utf8;\n    }\n  }]);\n\n  return Utf8;\n}(DataType);\n\nUtf8[Symbol.toStringTag] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Utf8';\n}(Utf8.prototype);\n/** @ignore */\n\n\nexport var Bool = /*#__PURE__*/function (_DataType6) {\n  _inherits(Bool, _DataType6);\n\n  var _super17 = _createSuper(Bool);\n\n  function Bool() {\n    _classCallCheck(this, Bool);\n\n    return _super17.call(this);\n  }\n\n  _createClass(Bool, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Bool\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Bool;\n    }\n  }]);\n\n  return Bool;\n}(DataType);\n\nBool[Symbol.toStringTag] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Bool';\n}(Bool.prototype);\n/** @ignore */\n\n\nexport var Decimal = /*#__PURE__*/function (_DataType7) {\n  _inherits(Decimal, _DataType7);\n\n  var _super18 = _createSuper(Decimal);\n\n  function Decimal(scale, precision) {\n    var _this3;\n\n    _classCallCheck(this, Decimal);\n\n    _this3 = _super18.call(this);\n    _this3.scale = scale;\n    _this3.precision = precision;\n    return _this3;\n  }\n\n  _createClass(Decimal, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Decimal[\".concat(this.precision, \"e\").concat(this.scale > 0 ? \"+\" : \"\").concat(this.scale, \"]\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Decimal;\n    }\n  }]);\n\n  return Decimal;\n}(DataType);\n\nDecimal[Symbol.toStringTag] = function (proto) {\n  proto.scale = null;\n  proto.precision = null;\n  proto.ArrayType = Uint32Array;\n  return proto[Symbol.toStringTag] = 'Decimal';\n}(Decimal.prototype);\n/** @ignore */\n\n\nexport var Date_ = /*#__PURE__*/function (_DataType8) {\n  _inherits(Date_, _DataType8);\n\n  var _super19 = _createSuper(Date_);\n\n  function Date_(unit) {\n    var _this4;\n\n    _classCallCheck(this, Date_);\n\n    _this4 = _super19.call(this);\n    _this4.unit = unit;\n    return _this4;\n  }\n\n  _createClass(Date_, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Date\".concat((this.unit + 1) * 32, \"<\").concat(DateUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Date;\n    }\n  }]);\n\n  return Date_;\n}(DataType);\n\nDate_[Symbol.toStringTag] = function (proto) {\n  proto.unit = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Date';\n}(Date_.prototype);\n/** @ignore */\n\n\nexport var DateDay = /*#__PURE__*/function (_Date_) {\n  _inherits(DateDay, _Date_);\n\n  var _super20 = _createSuper(DateDay);\n\n  function DateDay() {\n    _classCallCheck(this, DateDay);\n\n    return _super20.call(this, DateUnit.DAY);\n  }\n\n  return DateDay;\n}(Date_);\n/** @ignore */\n\nexport var DateMillisecond = /*#__PURE__*/function (_Date_2) {\n  _inherits(DateMillisecond, _Date_2);\n\n  var _super21 = _createSuper(DateMillisecond);\n\n  function DateMillisecond() {\n    _classCallCheck(this, DateMillisecond);\n\n    return _super21.call(this, DateUnit.MILLISECOND);\n  }\n\n  return DateMillisecond;\n}(Date_);\n/** @ignore */\n\nvar Time_ = /*#__PURE__*/function (_DataType9) {\n  _inherits(Time_, _DataType9);\n\n  var _super22 = _createSuper(Time_);\n\n  function Time_(unit, bitWidth) {\n    var _this5;\n\n    _classCallCheck(this, Time_);\n\n    _this5 = _super22.call(this);\n    _this5.unit = unit;\n    _this5.bitWidth = bitWidth;\n    return _this5;\n  }\n\n  _createClass(Time_, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Time\".concat(this.bitWidth, \"<\").concat(TimeUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Time;\n    }\n  }]);\n\n  return Time_;\n}(DataType);\n\nTime_[Symbol.toStringTag] = function (proto) {\n  proto.unit = null;\n  proto.bitWidth = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Time';\n}(Time_.prototype);\n\nexport { Time_ as Time };\n/** @ignore */\n\nexport var TimeSecond = /*#__PURE__*/function (_Time_) {\n  _inherits(TimeSecond, _Time_);\n\n  var _super23 = _createSuper(TimeSecond);\n\n  function TimeSecond() {\n    _classCallCheck(this, TimeSecond);\n\n    return _super23.call(this, TimeUnit.SECOND, 32);\n  }\n\n  return TimeSecond;\n}(Time_);\n/** @ignore */\n\nexport var TimeMillisecond = /*#__PURE__*/function (_Time_2) {\n  _inherits(TimeMillisecond, _Time_2);\n\n  var _super24 = _createSuper(TimeMillisecond);\n\n  function TimeMillisecond() {\n    _classCallCheck(this, TimeMillisecond);\n\n    return _super24.call(this, TimeUnit.MILLISECOND, 32);\n  }\n\n  return TimeMillisecond;\n}(Time_);\n/** @ignore */\n\nexport var TimeMicrosecond = /*#__PURE__*/function (_Time_3) {\n  _inherits(TimeMicrosecond, _Time_3);\n\n  var _super25 = _createSuper(TimeMicrosecond);\n\n  function TimeMicrosecond() {\n    _classCallCheck(this, TimeMicrosecond);\n\n    return _super25.call(this, TimeUnit.MICROSECOND, 64);\n  }\n\n  return TimeMicrosecond;\n}(Time_);\n/** @ignore */\n\nexport var TimeNanosecond = /*#__PURE__*/function (_Time_4) {\n  _inherits(TimeNanosecond, _Time_4);\n\n  var _super26 = _createSuper(TimeNanosecond);\n\n  function TimeNanosecond() {\n    _classCallCheck(this, TimeNanosecond);\n\n    return _super26.call(this, TimeUnit.NANOSECOND, 64);\n  }\n\n  return TimeNanosecond;\n}(Time_);\n/** @ignore */\n\nvar Timestamp_ = /*#__PURE__*/function (_DataType10) {\n  _inherits(Timestamp_, _DataType10);\n\n  var _super27 = _createSuper(Timestamp_);\n\n  function Timestamp_(unit, timezone) {\n    var _this6;\n\n    _classCallCheck(this, Timestamp_);\n\n    _this6 = _super27.call(this);\n    _this6.unit = unit;\n    _this6.timezone = timezone;\n    return _this6;\n  }\n\n  _createClass(Timestamp_, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp<\".concat(TimeUnit[this.unit]).concat(this.timezone ? \", \".concat(this.timezone) : \"\", \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Timestamp;\n    }\n  }]);\n\n  return Timestamp_;\n}(DataType);\n\nTimestamp_[Symbol.toStringTag] = function (proto) {\n  proto.unit = null;\n  proto.timezone = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Timestamp';\n}(Timestamp_.prototype);\n\nexport { Timestamp_ as Timestamp };\n/** @ignore */\n\nexport var TimestampSecond = /*#__PURE__*/function (_Timestamp_) {\n  _inherits(TimestampSecond, _Timestamp_);\n\n  var _super28 = _createSuper(TimestampSecond);\n\n  function TimestampSecond(timezone) {\n    _classCallCheck(this, TimestampSecond);\n\n    return _super28.call(this, TimeUnit.SECOND, timezone);\n  }\n\n  return TimestampSecond;\n}(Timestamp_);\n/** @ignore */\n\nexport var TimestampMillisecond = /*#__PURE__*/function (_Timestamp_2) {\n  _inherits(TimestampMillisecond, _Timestamp_2);\n\n  var _super29 = _createSuper(TimestampMillisecond);\n\n  function TimestampMillisecond(timezone) {\n    _classCallCheck(this, TimestampMillisecond);\n\n    return _super29.call(this, TimeUnit.MILLISECOND, timezone);\n  }\n\n  return TimestampMillisecond;\n}(Timestamp_);\n/** @ignore */\n\nexport var TimestampMicrosecond = /*#__PURE__*/function (_Timestamp_3) {\n  _inherits(TimestampMicrosecond, _Timestamp_3);\n\n  var _super30 = _createSuper(TimestampMicrosecond);\n\n  function TimestampMicrosecond(timezone) {\n    _classCallCheck(this, TimestampMicrosecond);\n\n    return _super30.call(this, TimeUnit.MICROSECOND, timezone);\n  }\n\n  return TimestampMicrosecond;\n}(Timestamp_);\n/** @ignore */\n\nexport var TimestampNanosecond = /*#__PURE__*/function (_Timestamp_4) {\n  _inherits(TimestampNanosecond, _Timestamp_4);\n\n  var _super31 = _createSuper(TimestampNanosecond);\n\n  function TimestampNanosecond(timezone) {\n    _classCallCheck(this, TimestampNanosecond);\n\n    return _super31.call(this, TimeUnit.NANOSECOND, timezone);\n  }\n\n  return TimestampNanosecond;\n}(Timestamp_);\n/** @ignore */\n\nvar Interval_ = /*#__PURE__*/function (_DataType11) {\n  _inherits(Interval_, _DataType11);\n\n  var _super32 = _createSuper(Interval_);\n\n  function Interval_(unit) {\n    var _this7;\n\n    _classCallCheck(this, Interval_);\n\n    _this7 = _super32.call(this);\n    _this7.unit = unit;\n    return _this7;\n  }\n\n  _createClass(Interval_, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Interval<\".concat(IntervalUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Interval;\n    }\n  }]);\n\n  return Interval_;\n}(DataType);\n\nInterval_[Symbol.toStringTag] = function (proto) {\n  proto.unit = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Interval';\n}(Interval_.prototype);\n\nexport { Interval_ as Interval };\n/** @ignore */\n\nexport var IntervalDayTime = /*#__PURE__*/function (_Interval_) {\n  _inherits(IntervalDayTime, _Interval_);\n\n  var _super33 = _createSuper(IntervalDayTime);\n\n  function IntervalDayTime() {\n    _classCallCheck(this, IntervalDayTime);\n\n    return _super33.call(this, IntervalUnit.DAY_TIME);\n  }\n\n  return IntervalDayTime;\n}(Interval_);\n/** @ignore */\n\nexport var IntervalYearMonth = /*#__PURE__*/function (_Interval_2) {\n  _inherits(IntervalYearMonth, _Interval_2);\n\n  var _super34 = _createSuper(IntervalYearMonth);\n\n  function IntervalYearMonth() {\n    _classCallCheck(this, IntervalYearMonth);\n\n    return _super34.call(this, IntervalUnit.YEAR_MONTH);\n  }\n\n  return IntervalYearMonth;\n}(Interval_);\n/** @ignore */\n\nexport var List = /*#__PURE__*/function (_DataType12) {\n  _inherits(List, _DataType12);\n\n  var _super35 = _createSuper(List);\n\n  function List(child) {\n    var _this8;\n\n    _classCallCheck(this, List);\n\n    _this8 = _super35.call(this);\n    _this8.children = [child];\n    return _this8;\n  }\n\n  _createClass(List, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"List<\".concat(this.valueType, \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.List;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.valueType.ArrayType;\n    }\n  }]);\n\n  return List;\n}(DataType);\n\nList[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  return proto[Symbol.toStringTag] = 'List';\n}(List.prototype);\n/** @ignore */\n\n\nexport var Struct = /*#__PURE__*/function (_DataType13) {\n  _inherits(Struct, _DataType13);\n\n  var _super36 = _createSuper(Struct);\n\n  function Struct(children) {\n    var _this9;\n\n    _classCallCheck(this, Struct);\n\n    _this9 = _super36.call(this);\n    _this9.children = children;\n    return _this9;\n  }\n\n  _createClass(Struct, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Struct<{\".concat(this.children.map(function (f) {\n        return \"\".concat(f.name, \":\").concat(f.type);\n      }).join(\", \"), \"}>\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Struct;\n    }\n  }]);\n\n  return Struct;\n}(DataType);\n\nStruct[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  return proto[Symbol.toStringTag] = 'Struct';\n}(Struct.prototype);\n/** @ignore */\n\n\nvar Union_ = /*#__PURE__*/function (_DataType14) {\n  _inherits(Union_, _DataType14);\n\n  var _super37 = _createSuper(Union_);\n\n  function Union_(mode, typeIds, children) {\n    var _this10;\n\n    _classCallCheck(this, Union_);\n\n    _this10 = _super37.call(this);\n    _this10.mode = mode;\n    _this10.children = children;\n    _this10.typeIds = typeIds = Int32Array.from(typeIds);\n    _this10.typeIdToChildIndex = typeIds.reduce(function (typeIdToChildIndex, typeId, idx) {\n      return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n    }, Object.create(null));\n    return _this10;\n  }\n\n  _createClass(Union_, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this[Symbol.toStringTag], \"<\").concat(this.children.map(function (x) {\n        return \"\".concat(x.type);\n      }).join(\" | \"), \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Union;\n    }\n  }]);\n\n  return Union_;\n}(DataType);\n\nUnion_[Symbol.toStringTag] = function (proto) {\n  proto.mode = null;\n  proto.typeIds = null;\n  proto.children = null;\n  proto.typeIdToChildIndex = null;\n  proto.ArrayType = Int8Array;\n  return proto[Symbol.toStringTag] = 'Union';\n}(Union_.prototype);\n\nexport { Union_ as Union };\n/** @ignore */\n\nexport var DenseUnion = /*#__PURE__*/function (_Union_) {\n  _inherits(DenseUnion, _Union_);\n\n  var _super38 = _createSuper(DenseUnion);\n\n  function DenseUnion(typeIds, children) {\n    _classCallCheck(this, DenseUnion);\n\n    return _super38.call(this, UnionMode.Dense, typeIds, children);\n  }\n\n  return DenseUnion;\n}(Union_);\n/** @ignore */\n\nexport var SparseUnion = /*#__PURE__*/function (_Union_2) {\n  _inherits(SparseUnion, _Union_2);\n\n  var _super39 = _createSuper(SparseUnion);\n\n  function SparseUnion(typeIds, children) {\n    _classCallCheck(this, SparseUnion);\n\n    return _super39.call(this, UnionMode.Sparse, typeIds, children);\n  }\n\n  return SparseUnion;\n}(Union_);\n/** @ignore */\n\nexport var FixedSizeBinary = /*#__PURE__*/function (_DataType15) {\n  _inherits(FixedSizeBinary, _DataType15);\n\n  var _super40 = _createSuper(FixedSizeBinary);\n\n  function FixedSizeBinary(byteWidth) {\n    var _this11;\n\n    _classCallCheck(this, FixedSizeBinary);\n\n    _this11 = _super40.call(this);\n    _this11.byteWidth = byteWidth;\n    return _this11;\n  }\n\n  _createClass(FixedSizeBinary, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"FixedSizeBinary[\".concat(this.byteWidth, \"]\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.FixedSizeBinary;\n    }\n  }]);\n\n  return FixedSizeBinary;\n}(DataType);\n\nFixedSizeBinary[Symbol.toStringTag] = function (proto) {\n  proto.byteWidth = null;\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n}(FixedSizeBinary.prototype);\n/** @ignore */\n\n\nexport var FixedSizeList = /*#__PURE__*/function (_DataType16) {\n  _inherits(FixedSizeList, _DataType16);\n\n  var _super41 = _createSuper(FixedSizeList);\n\n  function FixedSizeList(listSize, child) {\n    var _this12;\n\n    _classCallCheck(this, FixedSizeList);\n\n    _this12 = _super41.call(this);\n    _this12.listSize = listSize;\n    _this12.children = [child];\n    return _this12;\n  }\n\n  _createClass(FixedSizeList, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"FixedSizeList[\".concat(this.listSize, \"]<\").concat(this.valueType, \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.FixedSizeList;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.valueType.ArrayType;\n    }\n  }]);\n\n  return FixedSizeList;\n}(DataType);\n\nFixedSizeList[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  proto.listSize = null;\n  return proto[Symbol.toStringTag] = 'FixedSizeList';\n}(FixedSizeList.prototype);\n/** @ignore */\n\n\nexport var Map_ = /*#__PURE__*/function (_DataType17) {\n  _inherits(Map_, _DataType17);\n\n  var _super42 = _createSuper(Map_);\n\n  function Map_(child) {\n    var _this13;\n\n    var keysSorted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    _classCallCheck(this, Map_);\n\n    _this13 = _super42.call(this);\n    _this13.children = [child];\n    _this13.keysSorted = keysSorted;\n    return _this13;\n  }\n\n  _createClass(Map_, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Map<{\".concat(this.children[0].type.children.map(function (f) {\n        return \"\".concat(f.name, \":\").concat(f.type);\n      }).join(\", \"), \"}>\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Map;\n    }\n  }, {\n    key: \"keyType\",\n    get: function get() {\n      return this.children[0].type.children[0].type;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type.children[1].type;\n    }\n  }]);\n\n  return Map_;\n}(DataType);\n\nMap_[Symbol.toStringTag] = function (proto) {\n  proto.children = null;\n  proto.keysSorted = null;\n  return proto[Symbol.toStringTag] = 'Map_';\n}(Map_.prototype);\n/** @ignore */\n\n\nvar getId = function (atomicDictionaryId) {\n  return function () {\n    return ++atomicDictionaryId;\n  };\n}(-1);\n/** @ignore */\n\n\nexport var Dictionary = /*#__PURE__*/function (_DataType18) {\n  _inherits(Dictionary, _DataType18);\n\n  var _super43 = _createSuper(Dictionary);\n\n  function Dictionary(dictionary, indices, id, isOrdered) {\n    var _this14;\n\n    _classCallCheck(this, Dictionary);\n\n    _this14 = _super43.call(this);\n    _this14.indices = indices;\n    _this14.dictionary = dictionary;\n    _this14.isOrdered = isOrdered || false;\n    _this14.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    return _this14;\n  }\n\n  _createClass(Dictionary, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Dictionary<\".concat(this.indices, \", \").concat(this.dictionary, \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Dictionary;\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this.dictionary.children;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.dictionary;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.dictionary.ArrayType;\n    }\n  }]);\n\n  return Dictionary;\n}(DataType);\n\nDictionary[Symbol.toStringTag] = function (proto) {\n  proto.id = null;\n  proto.indices = null;\n  proto.isOrdered = null;\n  proto.dictionary = null;\n  return proto[Symbol.toStringTag] = 'Dictionary';\n}(Dictionary.prototype);\n/** @ignore */\n\n\nexport function strideForType(type) {\n  var t = type;\n\n  switch (type.typeId) {\n    case Type.Decimal:\n      return 4;\n\n    case Type.Timestamp:\n      return 2;\n\n    case Type.Date:\n      return 1 + t.unit;\n\n    case Type.Interval:\n      return 1 + t.unit;\n\n    case Type.Int:\n      return 1 + +(t.bitWidth > 32);\n\n    case Type.Time:\n      return 1 + +(t.bitWidth > 32);\n\n    case Type.FixedSizeList:\n      return t.listSize;\n\n    case Type.FixedSizeBinary:\n      return t.byteWidth;\n\n    default:\n      return 1;\n  }\n}","map":{"version":3,"sources":["type.ts"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA,SAAS,QAAQ,IAAI,QAArB,QAAqC,0BAArC;AAGA,SACI,IADJ,EAEI,SAFJ,EAEe,SAFf,EAGI,QAHJ,EAGc,QAHd,EAGwB,YAHxB,QAIO,QAJP;AAkCA;;;;;AAIA,WAAsB,QAAtB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,8BAyBqB,KAzBrB,EAyBoC;AAC5B,aAAO,QAAQ,CAAC,KAAT,CAAe,IAAf,EAAqB,KAArB,CAAP;AACH;AA3BL;AAAA;AAAA,wBAwBqB;AAAY,aAAa,IAAI,CAAC,IAAlB;AAAyB;AAxB1D;AAAA;;AAKI;AALJ,2BAKiD,CALjD,EAKuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,IAA9B;AAAgD;AAC7H;;AANJ;AAAA;AAAA,0BAMiD,CANjD,EAMuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,GAA9B;AAAgD;AAC7H;;AAPJ;AAAA;AAAA,4BAOiD,CAPjD,EAOuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,KAA9B;AAAgD;AAC7H;;AARJ;AAAA;AAAA,6BAQiD,CARjD,EAQuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,MAA9B;AAAgD;AAC7H;;AATJ;AAAA;AAAA,2BASiD,CATjD,EASuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,IAA9B;AAAgD;AAC7H;;AAVJ;AAAA;AAAA,2BAUiD,CAVjD,EAUuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,IAA9B;AAAgD;AAC7H;;AAXJ;AAAA;AAAA,8BAWiD,CAXjD,EAWuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,OAA9B;AAAgD;AAC7H;;AAZJ;AAAA;AAAA,2BAYiD,CAZjD,EAYuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,IAA9B;AAAgD;AAC7H;;AAbJ;AAAA;AAAA,2BAaiD,CAbjD,EAauD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,IAA9B;AAAgD;AAC7H;;AAdJ;AAAA;AAAA,gCAciD,CAdjD,EAcuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,SAA9B;AAAgD;AAC7H;;AAfJ;AAAA;AAAA,+BAeiD,CAfjD,EAeuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,QAA9B;AAAgD;AAC7H;;AAhBJ;AAAA;AAAA,2BAgBiD,CAhBjD,EAgBuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,IAA9B;AAAgD;AAC7H;;AAjBJ;AAAA;AAAA,6BAiBiD,CAjBjD,EAiBuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,MAA9B;AAAgD;AAC7H;;AAlBJ;AAAA;AAAA,4BAkBiD,CAlBjD,EAkBuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,KAA9B;AAAgD;AAC7H;;AAnBJ;AAAA;AAAA,sCAmBiD,CAnBjD,EAmBuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,eAA9B;AAAgD;AAC7H;;AApBJ;AAAA;AAAA,oCAoBiD,CApBjD,EAoBuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,aAA9B;AAAgD;AAC7H;;AArBJ;AAAA;AAAA,0BAqBiD,CArBjD,EAqBuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,GAA9B;AAAgD;AAC7H;;AAtBJ;AAAA;AAAA,iCAsBiD,CAtBjD,EAsBuD;AAA0B,aAAO,CAAC,IAAI,CAAC,CAAC,MAAF,KAAa,IAAI,CAAC,UAA9B;AAAgD;AAtBjI;;AAAA;AAAA;;AA6BqB,QAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAoB;AAClD,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,KAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,UAAnC;AACH,CAJuC,CAIrC,QAAQ,CAAC,SAJ4B,CAAvB;AASrB;;;AACA,WAAa,IAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BACmB;AAAK;AAAgB;AADxC;AAAA;AAAA,wBAEqB;AAAK,aAAO,IAAI,CAAC,IAAZ;AAAgC;AAF1D;;AAAA;AAAA,EAA0B,QAA1B;;AAGqB,IAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAgB;AACrD,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,MAAnC;AACH,CAFuC,CAErC,IAAI,CAAC,SAFgC,CAAvB;AAsBrB;;;IACM,I;;;;;AACF,gBAA4B,QAA5B,EAC4B,QAD5B,EAC0D;AAAA;;AAAA;;AACtD;AAFwB,UAAA,QAAA,GAAA,QAAA;AACA,UAAA,QAAA,GAAA,QAAA;AAA8B;AAEzD;;;;+BAWc;AAAK,uBAAU,KAAK,QAAL,aAAV,eAAyC,KAAK,QAA9C;AAA2D;;;wBAV9D;AAAK,aAAO,IAAI,CAAC,GAAZ;AAAuB;;;wBACzB;AAChB,cAAQ,KAAK,QAAb;AACI,aAAM,CAAN;AAAS,iBAAO,KAAK,QAAL,GAAiB,SAAjB,GAA8B,UAArC;;AACT,aAAK,EAAL;AAAS,iBAAO,KAAK,QAAL,GAAgB,UAAhB,GAA6B,WAApC;;AACT,aAAK,EAAL;AAAS,iBAAO,KAAK,QAAL,GAAgB,UAAhB,GAA6B,WAApC;;AACT,aAAK,EAAL;AAAS,iBAAO,KAAK,QAAL,GAAgB,UAAhB,GAA6B,WAApC;AAJb;;AAMA,YAAM,IAAI,KAAJ,wBAA0B,KAAK,MAAM,CAAC,WAAZ,CAA1B,WAAN;AACH;;;;EAdqC,Q;;AAgBrB,IAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAgB;AAC9C,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACA,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,KAAnC;AACH,CAJuC,CAIrC,IAAI,CAAC,SAJgC,CAAvB;;AAOrB,SAAS,IAAI,IAAI,GAAjB;AAEA;;AACA,WAAa,IAAb;AAAA;;AAAA;;AAA4C,kBAAA;AAAA;;AAAA,8BAAsB,IAAtB,EAA4B,CAA5B;AAAiC;;AAA7E;AAAA,EAA0B,IAA1B;AACA;;AACA,WAAa,KAAb;AAAA;;AAAA;;AAA8C,mBAAA;AAAA;;AAAA,8BAAsB,IAAtB,EAA4B,EAA5B;AAAkC;;AAAhF;AAAA,EAA2B,IAA3B;AACA;;AACA,WAAa,KAAb;AAAA;;AAAA;;AAA8C,mBAAA;AAAA;;AAAA,8BAAsB,IAAtB,EAA4B,EAA5B;AAAkC;;AAAhF;AAAA,EAA2B,IAA3B;AACA;;AACA,WAAa,KAAb;AAAA;;AAAA;;AAA8C,mBAAA;AAAA;;AAAA,8BAAsB,IAAtB,EAA4B,EAA5B;AAAkC;;AAAhF;AAAA,EAA2B,IAA3B;AACA;;AACA,WAAa,KAAb;AAAA;;AAAA;;AAA8C,mBAAA;AAAA;;AAAA,8BAAsB,KAAtB,EAA6B,CAA7B;AAAkC;;AAAhF;AAAA,EAA2B,IAA3B;AACA;;AACA,WAAa,MAAb;AAAA;;AAAA;;AAAgD,oBAAA;AAAA;;AAAA,8BAAsB,KAAtB,EAA6B,EAA7B;AAAmC;;AAAnF;AAAA,EAA4B,IAA5B;AACA;;AACA,WAAa,MAAb;AAAA;;AAAA;;AAAgD,oBAAA;AAAA;;AAAA,8BAAsB,KAAtB,EAA6B,EAA7B;AAAmC;;AAAnF;AAAA,EAA4B,IAA5B;AACA;;AACA,WAAa,MAAb;AAAA;;AAAA;;AAAgD,oBAAA;AAAA;;AAAA,+BAAsB,KAAtB,EAA6B,EAA7B;AAAmC;;AAAnF;AAAA,EAA4B,IAA5B;AAEA,MAAM,CAAC,cAAP,CAAsB,IAAI,CAAC,SAA3B,EAAsC,WAAtC,EAAmD;AAAE,EAAA,KAAK,EAAE;AAAT,CAAnD;AACA,MAAM,CAAC,cAAP,CAAsB,KAAK,CAAC,SAA5B,EAAuC,WAAvC,EAAoD;AAAE,EAAA,KAAK,EAAE;AAAT,CAApD;AACA,MAAM,CAAC,cAAP,CAAsB,KAAK,CAAC,SAA5B,EAAuC,WAAvC,EAAoD;AAAE,EAAA,KAAK,EAAE;AAAT,CAApD;AACA,MAAM,CAAC,cAAP,CAAsB,KAAK,CAAC,SAA5B,EAAuC,WAAvC,EAAoD;AAAE,EAAA,KAAK,EAAE;AAAT,CAApD;AACA,MAAM,CAAC,cAAP,CAAsB,KAAK,CAAC,SAA5B,EAAuC,WAAvC,EAAoD;AAAE,EAAA,KAAK,EAAE;AAAT,CAApD;AACA,MAAM,CAAC,cAAP,CAAsB,MAAM,CAAC,SAA7B,EAAwC,WAAxC,EAAqD;AAAE,EAAA,KAAK,EAAE;AAAT,CAArD;AACA,MAAM,CAAC,cAAP,CAAsB,MAAM,CAAC,SAA7B,EAAwC,WAAxC,EAAqD;AAAE,EAAA,KAAK,EAAE;AAAT,CAArD;AACA,MAAM,CAAC,cAAP,CAAsB,MAAM,CAAC,SAA7B,EAAwC,WAAxC,EAAqD;AAAE,EAAA,KAAK,EAAE;AAAT,CAArD;AAcA;;AACA,WAAa,KAAb;AAAA;;AAAA;;AACI,iBAA4B,SAA5B,EAAgD;AAAA;;AAAA;;AAC5C;AADwB,WAAA,SAAA,GAAA,SAAA;AAAoB;AAE/C;;AAHL;AAAA;AAAA,+BAamB;AAAK,4BAAgB,KAAK,SAAL,IAAkB,CAAnB,IAAyB,EAAxC;AAA+C;AAbvE;AAAA;AAAA,wBAIqB;AAAK,aAAO,IAAI,CAAC,KAAZ;AAAyB;AAJnD;AAAA;AAAA,wBAKwB;AAChB,cAAQ,KAAK,SAAb;AACI,aAAK,SAAS,CAAC,IAAf;AAAqB,iBAAO,WAAP;;AACrB,aAAK,SAAS,CAAC,MAAf;AAAuB,iBAAO,YAAP;;AACvB,aAAK,SAAS,CAAC,MAAf;AAAuB,iBAAO,YAAP;AAH3B;;AAKA,YAAM,IAAI,KAAJ,wBAA0B,KAAK,MAAM,CAAC,WAAZ,CAA1B,WAAN;AACH;AAZL;;AAAA;AAAA,EAAsD,QAAtD;;AAcqB,KAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAiB;AAC/C,EAAA,KAAM,CAAC,SAAP,GAAmB,IAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,OAAnC;AACH,CAHuC,CAGrC,KAAK,CAAC,SAH+B,CAAvB;AAMrB;;;AACA,WAAa,OAAb;AAAA;;AAAA;;AAAmD,qBAAA;AAAA;;AAAA,+BAAsB,SAAS,CAAC,IAAhC;AAAwC;;AAA3F;AAAA,EAA6B,KAA7B;AACA;;AACA,WAAa,OAAb;AAAA;;AAAA;;AAAmD,qBAAA;AAAA;;AAAA,+BAAsB,SAAS,CAAC,MAAhC;AAA0C;;AAA7F;AAAA,EAA6B,KAA7B;AACA;;AACA,WAAa,OAAb;AAAA;;AAAA;;AAAmD,qBAAA;AAAA;;AAAA,+BAAsB,SAAS,CAAC,MAAhC;AAA0C;;AAA7F;AAAA,EAA6B,KAA7B;AAEA,MAAM,CAAC,cAAP,CAAsB,OAAO,CAAC,SAA9B,EAAyC,WAAzC,EAAsD;AAAE,EAAA,KAAK,EAAE;AAAT,CAAtD;AACA,MAAM,CAAC,cAAP,CAAsB,OAAO,CAAC,SAA9B,EAAyC,WAAzC,EAAsD;AAAE,EAAA,KAAK,EAAE;AAAT,CAAtD;AACA,MAAM,CAAC,cAAP,CAAsB,OAAO,CAAC,SAA9B,EAAyC,WAAzC,EAAsD;AAAE,EAAA,KAAK,EAAE;AAAT,CAAtD;AAIA;;AACA,WAAa,MAAb;AAAA;;AAAA;;AACI,oBAAA;AAAA;;AAAA;AAEC;;AAHL;AAAA;AAAA,+BAKmB;AAAK;AAAkB;AAL1C;AAAA;AAAA,wBAIqB;AAAK,aAAO,IAAI,CAAC,MAAZ;AAAoC;AAJ9D;;AAAA;AAAA,EAA4B,QAA5B;;AAMqB,MAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAkB;AAChD,EAAA,KAAM,CAAC,SAAP,GAAmB,UAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,QAAnC;AACH,CAHuC,CAGrC,MAAM,CAAC,SAH8B,CAAvB;AAQrB;;;AACA,WAAa,IAAb;AAAA;;AAAA;;AACI,kBAAA;AAAA;;AAAA;AAEC;;AAHL;AAAA;AAAA,+BAKmB;AAAK;AAAgB;AALxC;AAAA;AAAA,wBAIqB;AAAK,aAAO,IAAI,CAAC,IAAZ;AAAgC;AAJ1D;;AAAA;AAAA,EAA0B,QAA1B;;AAMqB,IAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAgB;AAC9C,EAAA,KAAM,CAAC,SAAP,GAAmB,UAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,MAAnC;AACH,CAHuC,CAGrC,IAAI,CAAC,SAHgC,CAAvB;AAQrB;;;AACA,WAAa,IAAb;AAAA;;AAAA;;AACI,kBAAA;AAAA;;AAAA;AAEC;;AAHL;AAAA;AAAA,+BAKmB;AAAK;AAAgB;AALxC;AAAA;AAAA,wBAIqB;AAAK,aAAO,IAAI,CAAC,IAAZ;AAAgC;AAJ1D;;AAAA;AAAA,EAA0B,QAA1B;;AAMqB,IAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAgB;AAC9C,EAAA,KAAM,CAAC,SAAP,GAAmB,UAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,MAAnC;AACH,CAHuC,CAGrC,IAAI,CAAC,SAHgC,CAAvB;AAQrB;;;AACA,WAAa,OAAb;AAAA;;AAAA;;AACI,mBAA4B,KAA5B,EAC4B,SAD5B,EAC6C;AAAA;;AAAA;;AACzC;AAFwB,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,SAAA,GAAA,SAAA;AAAiB;AAE5C;;AAJL;AAAA;AAAA,+BAMmB;AAAK,+BAAkB,KAAK,SAAvB,cAAoC,KAAK,KAAL,GAAa,CAAb,WAApC,SAAgE,KAAK,KAArE;AAAgF;AANxG;AAAA;AAAA,wBAKqB;AAAK,aAAO,IAAI,CAAC,OAAZ;AAAsC;AALhE;;AAAA;AAAA,EAA6B,QAA7B;;AAOqB,OAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAmB;AACjD,EAAA,KAAM,CAAC,KAAP,GAAe,IAAf;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,IAAnB;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,WAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,SAAnC;AACH,CALuC,CAKrC,OAAO,CAAC,SAL6B,CAAvB;AAYrB;;;AACA,WAAa,KAAb;AAAA;;AAAA;;AACI,iBAA4B,IAA5B,EAA0C;AAAA;;AAAA;;AACtC;AADwB,WAAA,IAAA,GAAA,IAAA;AAAc;AAEzC;;AAHL;AAAA;AAAA,+BAKmB;AAAK,2BAAc,CAAC,KAAK,IAAL,GAAY,CAAb,IAAkB,EAAhC,cAAsC,QAAQ,CAAC,KAAK,IAAN,CAA9C;AAA+D;AALvF;AAAA;AAAA,wBAIqB;AAAK,aAAO,IAAI,CAAC,IAAZ;AAAwB;AAJlD;;AAAA;AAAA,EAAoD,QAApD;;AAMqB,KAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAiB;AAC/C,EAAA,KAAM,CAAC,IAAP,GAAc,IAAd;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,UAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,MAAnC;AACH,CAJuC,CAIrC,KAAK,CAAC,SAJ+B,CAAvB;AAOrB;;;AACA,WAAa,OAAb;AAAA;;AAAA;;AAAmD,qBAAA;AAAA;;AAAA,+BAAsB,QAAQ,CAAC,GAA/B;AAAsC;;AAAzF;AAAA,EAA6B,KAA7B;AACA;;AACA,WAAa,eAAb;AAAA;;AAAA;;AAAmE,6BAAA;AAAA;;AAAA,+BAAsB,QAAQ,CAAC,WAA/B;AAA8C;;AAAjH;AAAA,EAAqC,KAArC;AAeA;;IACM,K;;;;;AACF,iBAA4B,IAA5B,EAC4B,QAD5B,EACkD;AAAA;;AAAA;;AAC9C;AAFwB,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,QAAA;AAAsB;AAEjD;;;;+BAEc;AAAK,2BAAc,KAAK,QAAnB,cAA+B,QAAQ,CAAC,KAAK,IAAN,CAAvC;AAAwD;;;wBAD3D;AAAK,aAAO,IAAI,CAAC,IAAZ;AAAwB;;;;EALL,Q;;AAOxB,KAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAiB;AAC/C,EAAA,KAAM,CAAC,IAAP,GAAc,IAAd;AACA,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,UAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,MAAnC;AACH,CALuC,CAKrC,KAAK,CAAC,SAL+B,CAAvB;;AAQrB,SAAS,KAAK,IAAI,IAAlB;AAEA;;AACA,WAAa,UAAb;AAAA;;AAAA;;AAAyD,wBAAA;AAAA;;AAAA,+BAAsB,QAAQ,CAAC,MAA/B,EAAuC,EAAvC;AAA6C;;AAAtG;AAAA,EAAgC,KAAhC;AACA;;AACA,WAAa,eAAb;AAAA;;AAAA;;AAAmE,6BAAA;AAAA;;AAAA,+BAAsB,QAAQ,CAAC,WAA/B,EAA4C,EAA5C;AAAkD;;AAArH;AAAA,EAAqC,KAArC;AACA;;AACA,WAAa,eAAb;AAAA;;AAAA;;AAAmE,6BAAA;AAAA;;AAAA,+BAAsB,QAAQ,CAAC,WAA/B,EAA4C,EAA5C;AAAkD;;AAArH;AAAA,EAAqC,KAArC;AACA;;AACA,WAAa,cAAb;AAAA;;AAAA;;AAAiE,4BAAA;AAAA;;AAAA,+BAAsB,QAAQ,CAAC,UAA/B,EAA2C,EAA3C;AAAiD;;AAAlH;AAAA,EAAoC,KAApC;AAMA;;IACM,U;;;;;AACF,sBAA4B,IAA5B,EAC4B,QAD5B,EACoD;AAAA;;AAAA;;AAChD;AAFwB,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,QAAA;AAAwB;AAEnD;;;;+BAEc;AAAK,iCAAoB,QAAQ,CAAC,KAAK,IAAN,CAA5B,SAA0C,KAAK,QAAL,eAAqB,KAAK,QAA1B,MAA1C;AAAyF;;;wBAD5F;AAAK,aAAO,IAAI,CAAC,SAAZ;AAA6B;;;;EALK,Q;;AAOvC,UAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAsB;AACpD,EAAA,KAAM,CAAC,IAAP,GAAc,IAAd;AACA,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,UAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,WAAnC;AACH,CALuC,CAKrC,UAAU,CAAC,SAL0B,CAAvB;;AAQrB,SAAS,UAAU,IAAI,SAAvB;AAEA;;AACA,WAAa,eAAb;AAAA;;AAAA;;AAAwE,2BAAY,QAAZ,EAAoC;AAAA;;AAAA,+BAAU,QAAQ,CAAC,MAAnB,EAA2B,QAA3B;AAAuC;;AAAnJ;AAAA,EAAqC,UAArC;AACA;;AACA,WAAa,oBAAb;AAAA;;AAAA;;AAAkF,gCAAY,QAAZ,EAAoC;AAAA;;AAAA,+BAAU,QAAQ,CAAC,WAAnB,EAAgC,QAAhC;AAA4C;;AAAlK;AAAA,EAA0C,UAA1C;AACA;;AACA,WAAa,oBAAb;AAAA;;AAAA;;AAAkF,gCAAY,QAAZ,EAAoC;AAAA;;AAAA,+BAAU,QAAQ,CAAC,WAAnB,EAAgC,QAAhC;AAA4C;;AAAlK;AAAA,EAA0C,UAA1C;AACA;;AACA,WAAa,mBAAb;AAAA;;AAAA;;AAAgF,+BAAY,QAAZ,EAAoC;AAAA;;AAAA,+BAAU,QAAQ,CAAC,UAAnB,EAA+B,QAA/B;AAA2C;;AAA/J;AAAA,EAAyC,UAAzC;AAMA;;IACM,S;;;;;AACF,qBAA4B,IAA5B,EAA8C;AAAA;;AAAA;;AAC1C;AADwB,WAAA,IAAA,GAAA,IAAA;AAAkB;AAE7C;;;;+BAEc;AAAK,gCAAmB,YAAY,CAAC,KAAK,IAAN,CAA/B;AAAgD;;;wBADnD;AAAK,aAAO,IAAI,CAAC,QAAZ;AAA4B;;;;EAJG,Q;;AAMpC,SAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAqB;AACnD,EAAA,KAAM,CAAC,IAAP,GAAc,IAAd;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,UAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,UAAnC;AACH,CAJuC,CAIrC,SAAS,CAAC,SAJ2B,CAAvB;;AAOrB,SAAS,SAAS,IAAI,QAAtB;AAEA;;AACA,WAAa,eAAb;AAAA;;AAAA;;AAAuE,6BAAA;AAAA;;AAAA,+BAAsB,YAAY,CAAC,QAAnC;AAA+C;;AAAtH;AAAA,EAAqC,SAArC;AACA;;AACA,WAAa,iBAAb;AAAA;;AAAA;;AAA2E,+BAAA;AAAA;;AAAA,+BAAsB,YAAY,CAAC,UAAnC;AAAiD;;AAA5H;AAAA,EAAuC,SAAvC;AAIA;;AACA,WAAa,IAAb;AAAA;;AAAA;;AACI,gBAAY,KAAZ,EAA2B;AAAA;;AAAA;;AACvB;AACA,WAAK,QAAL,GAAgB,CAAC,KAAD,CAAhB;AAFuB;AAG1B;;AAJL;AAAA;AAAA,+BAOmB;AAAK,4BAAe,KAAK,SAApB;AAAmC;AAP3D;AAAA;AAAA,wBAMqB;AAAK,aAAO,IAAI,CAAC,IAAZ;AAAgC;AAN1D;AAAA;AAAA,wBAQwB;AAAQ,aAAO,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAxB;AAAoC;AARpE;AAAA;AAAA,wBASyB;AAAe,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AAAsC;AAT9E;AAAA;AAAA,wBAUwB;AAAqB,aAAO,KAAK,SAAL,CAAe,SAAtB;AAAkC;AAV/E;;AAAA;AAAA,EAAoD,QAApD;;AAWqB,IAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAgB;AAC9C,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,MAAnC;AACH,CAHuC,CAGrC,IAAI,CAAC,SAHgC,CAAvB;AAQrB;;;AACA,WAAa,MAAb;AAAA;;AAAA;;AAEI,kBAAY,QAAZ,EAAyC;AAAA;;AAAA;;AACrC;AACA,WAAK,QAAL,GAAgB,QAAhB;AAFqC;AAGxC;;AALL;AAAA;AAAA,+BAOmB;AAAK,+BAAkB,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAC,CAAD;AAAA,yBAAU,CAAC,CAAC,IAAZ,cAAoB,CAAC,CAAC,IAAtB;AAAA,OAAlB,EAAgD,IAAhD,MAAlB;AAAmF;AAP3G;AAAA;AAAA,wBAMqB;AAAK,aAAO,IAAI,CAAC,MAAZ;AAAoC;AAN9D;;AAAA;AAAA,EAAyE,QAAzE;;AAQqB,MAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAkB;AAChD,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,QAAnC;AACH,CAHuC,CAGrC,MAAM,CAAC,SAH8B,CAAvB;AAUrB;;;IACM,M;;;;;AAKF,kBAAY,IAAZ,EACY,OADZ,EAEY,QAFZ,EAEkC;AAAA;;AAAA;;AAC9B;AACA,YAAK,IAAL,GAAY,IAAZ;AACA,YAAK,QAAL,GAAgB,QAAhB;AACA,YAAK,OAAL,GAAe,OAAO,GAAG,UAAU,CAAC,IAAX,CAAgB,OAAhB,CAAzB;AACA,YAAK,kBAAL,GAA0B,OAAO,CAAC,MAAR,CAAe,UAAC,kBAAD,EAAqB,MAArB,EAA6B,GAA7B,EAAoC;AACzE,aAAO,CAAC,kBAAkB,CAAC,MAAD,CAAlB,GAA6B,GAA9B,KAAsC,kBAAtC,IAA4D,kBAAnE;AACH,KAFyB,EAEvB,MAAM,CAAC,MAAP,CAAc,IAAd,CAFuB,CAA1B;AAL8B;AAQjC;;;;+BAEc;AAAK,uBAAU,KAAK,MAAM,CAAC,WAAZ,CAAV,cAChB,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAC,CAAD;AAAA,yBAAU,CAAC,CAAC,IAAZ;AAAA,OAAlB,EAAsC,IAAtC,OADgB;AAEd;;;wBAHW;AAAK,aAAO,IAAI,CAAC,KAAZ;AAAyB;;;;EAhBH,Q;;AAoB3B,MAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAkB;AAChD,EAAA,KAAM,CAAC,IAAP,GAAc,IAAd;AACA,EAAA,KAAM,CAAC,OAAP,GAAiB,IAAjB;AACA,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACA,EAAA,KAAM,CAAC,kBAAP,GAA4B,IAA5B;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,SAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,OAAnC;AACH,CAPuC,CAOrC,MAAM,CAAC,SAP8B,CAAvB;;AAUrB,SAAS,MAAM,IAAI,KAAnB;AAEA;;AACA,WAAa,UAAb;AAAA;;AAAA;;AACI,sBAAY,OAAZ,EAA4C,QAA5C,EAA6D;AAAA;;AAAA,+BACnD,SAAS,CAAC,KADyC,EAClC,OADkC,EACzB,QADyB;AAE5D;;AAHL;AAAA,EAAgC,MAAhC;AAMA;;AACA,WAAa,WAAb;AAAA;;AAAA;;AACI,uBAAY,OAAZ,EAA4C,QAA5C,EAA6D;AAAA;;AAAA,+BACnD,SAAS,CAAC,MADyC,EACjC,OADiC,EACxB,QADwB;AAE5D;;AAHL;AAAA,EAAiC,MAAjC;AAQA;;AACA,WAAa,eAAb;AAAA;;AAAA;;AACI,2BAA4B,SAA5B,EAA6C;AAAA;;AAAA;;AACzC;AADwB,YAAA,SAAA,GAAA,SAAA;AAAiB;AAE5C;;AAHL;AAAA;AAAA,+BAKmB;AAAK,uCAA0B,KAAK,SAA/B;AAA8C;AALtE;AAAA;AAAA,wBAIqB;AAAK,aAAO,IAAI,CAAC,eAAZ;AAAsD;AAJhF;;AAAA;AAAA,EAAqC,QAArC;;AAMqB,eAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAA2B;AACzD,EAAA,KAAM,CAAC,SAAP,GAAmB,IAAnB;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,UAAnB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,iBAAnC;AACH,CAJuC,CAIrC,eAAe,CAAC,SAJqB,CAAvB;AASrB;;;AACA,WAAa,aAAb;AAAA;;AAAA;;AAEI,yBAA4B,QAA5B,EAA8C,KAA9C,EAA6D;AAAA;;AAAA;;AACzD;AADwB,YAAA,QAAA,GAAA,QAAA;AAExB,YAAK,QAAL,GAAgB,CAAC,KAAD,CAAhB;AAFyD;AAG5D;;AALL;AAAA;AAAA,+BAUmB;AAAK,qCAAwB,KAAK,QAA7B,eAA0C,KAAK,SAA/C;AAA8D;AAVtF;AAAA;AAAA,wBAMqB;AAAK,aAAO,IAAI,CAAC,aAAZ;AAAkD;AAN5E;AAAA;AAAA,wBAOwB;AAAQ,aAAO,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAxB;AAAoC;AAPpE;AAAA;AAAA,wBAQyB;AAAe,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AAAsC;AAR9E;AAAA;AAAA,wBASwB;AAAqB,aAAO,KAAK,SAAL,CAAe,SAAtB;AAAkC;AAT/E;;AAAA;AAAA,EAA6D,QAA7D;;AAWqB,aAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAyB;AACvD,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACA,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,eAAnC;AACH,CAJuC,CAIrC,aAAa,CAAC,SAJuB,CAAvB;AAcrB;;;AACA,WAAa,IAAb;AAAA;;AAAA;;AACI,gBAAY,KAAZ,EAAkF;AAAA;;AAAA,QAAlB,UAAkB,uEAAL,KAAK;;AAAA;;AAC9E;AACA,YAAK,QAAL,GAAgB,CAAC,KAAD,CAAhB;AACA,YAAK,UAAL,GAAkB,UAAlB;AAH8E;AAIjF;;AALL;AAAA;AAAA,+BAWmB;AAAK,4BAAe,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAjB,CAAsB,QAAtB,CAA+B,GAA/B,CAAmC,UAAC,CAAD;AAAA,yBAAU,CAAC,CAAC,IAAZ,cAAoB,CAAC,CAAC,IAAtB;AAAA,OAAnC,EAAiE,IAAjE,MAAf;AAAiG;AAXzH;AAAA;AAAA,wBAQqB;AAAK,aAAO,IAAI,CAAC,GAAZ;AAA8B;AARxD;AAAA;AAAA,wBASsB;AAAW,aAAO,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAjB,CAAsB,QAAtB,CAA+B,CAA/B,EAAkC,IAAzC;AAAwD;AATzF;AAAA;AAAA,wBAUwB;AAAa,aAAO,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAjB,CAAsB,QAAtB,CAA+B,CAA/B,EAAkC,IAAzC;AAA0D;AAV/F;;AAAA;AAAA,EAAsF,QAAtF;;AAYqB,IAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAgB;AAC9C,EAAA,KAAM,CAAC,QAAP,GAAkB,IAAlB;AACA,EAAA,KAAM,CAAC,UAAP,GAAoB,IAApB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,MAAnC;AACH,CAJuC,CAIrC,IAAI,CAAC,SAJgC,CAAvB;AAOrB;;;AACA,IAAM,KAAK,GAAI,UAAC,kBAAD;AAAA,SAAwB;AAAA,WAAM,EAAE,kBAAR;AAAA,GAAxB;AAAA,CAAD,CAAqD,CAAC,CAAtD,CAAd;AAOA;;;AACA,WAAa,UAAb;AAAA;;AAAA;;AAKI,sBAAY,UAAZ,EAA2B,OAA3B,EAA0C,EAA1C,EAAqE,SAArE,EAA+F;AAAA;;AAAA;;AAC3F;AACA,YAAK,OAAL,GAAe,OAAf;AACA,YAAK,UAAL,GAAkB,UAAlB;AACA,YAAK,SAAL,GAAiB,SAAS,IAAI,KAA9B;AACA,YAAK,EAAL,GAAU,EAAE,IAAI,IAAN,GAAa,KAAK,EAAlB,GAAuB,OAAO,EAAP,KAAc,QAAd,GAAyB,EAAzB,GAA8B,EAAE,CAAC,GAAlE;AAL2F;AAM9F;;AAXL;AAAA;AAAA,+BAgBmB;AAAK,kCAAqB,KAAK,OAA1B,eAAsC,KAAK,UAA3C;AAA2D;AAhBnF;AAAA;AAAA,wBAYqB;AAAK,aAAO,IAAI,CAAC,UAAZ;AAA4C;AAZtE;AAAA;AAAA,wBAauB;AAAK,aAAO,KAAK,UAAL,CAAgB,QAAvB;AAAkC;AAb9D;AAAA;AAAA,wBAcwB;AAAQ,aAAO,KAAK,UAAZ;AAA8B;AAd9D;AAAA;AAAA,wBAewB;AAAqB,aAAO,KAAK,UAAL,CAAgB,SAAvB;AAAmC;AAfhF;;AAAA;AAAA,EAAsF,QAAtF;;AAiBqB,UAAA,CAAC,MAAM,CAAC,WAAR,CAAA,GAAwB,UAAC,KAAD,EAAsB;AACpD,EAAA,KAAM,CAAC,EAAP,GAAY,IAAZ;AACA,EAAA,KAAM,CAAC,OAAP,GAAiB,IAAjB;AACA,EAAA,KAAM,CAAC,SAAP,GAAmB,IAAnB;AACA,EAAA,KAAM,CAAC,UAAP,GAAoB,IAApB;AACP,SAAO,KAAK,CAAC,MAAM,CAAC,WAAR,CAAL,GAA4B,YAAnC;AACH,CANuC,CAMrC,UAAU,CAAC,SAN0B,CAAvB;AAgBrB;;;AACA,OAAM,SAAU,aAAV,CAAwB,IAAxB,EAAsC;AACxC,MAAI,CAAC,GAAQ,IAAb;;AACA,UAAQ,IAAI,CAAC,MAAb;AACI,SAAK,IAAI,CAAC,OAAV;AAAmB,aAAO,CAAP;;AACnB,SAAK,IAAI,CAAC,SAAV;AAAqB,aAAO,CAAP;;AACrB,SAAK,IAAI,CAAC,IAAV;AAAgB,aAAO,IAAK,CAAW,CAAC,IAAxB;;AAChB,SAAK,IAAI,CAAC,QAAV;AAAoB,aAAO,IAAK,CAAe,CAAC,IAA5B;;AACpB,SAAK,IAAI,CAAC,GAAV;AAAe,aAAO,IAAI,EAAG,CAAU,CAAC,QAAX,GAAsB,EAAzB,CAAX;;AACf,SAAK,IAAI,CAAC,IAAV;AAAgB,aAAO,IAAI,EAAG,CAAW,CAAC,QAAZ,GAAuB,EAA1B,CAAX;;AAChB,SAAK,IAAI,CAAC,aAAV;AAAyB,aAAQ,CAAmB,CAAC,QAA5B;;AACzB,SAAK,IAAI,CAAC,eAAV;AAA2B,aAAQ,CAAqB,CAAC,SAA9B;;AAC3B;AAAS,aAAO,CAAP;AATb;AAWH","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}