{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nexport function getTransferList(object) {\n  var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var transfers = arguments.length > 2 ? arguments[2] : undefined;\n  var transfersSet = transfers || new Set();\n\n  if (!object) {} else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    transfersSet.add(object.buffer);\n  } else if (recursive && _typeof(object) === 'object') {\n    for (var key in object) {\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  return transfers === undefined ? Array.from(transfersSet) : null;\n}\n\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../../../src/lib/worker-utils/get-transfer-list.js"],"names":["recursive","transfers","transfersSet","isTransferable","object","getTransferList","Array"],"mappings":";AAOA,OAAO,SAAA,eAAA,CAAA,MAAA,EAA8D;AAAA,MAA7BA,SAA6B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAjB,IAAiB;AAAA,MAAXC,SAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;AAEnE,MAAMC,YAAY,GAAGD,SAAS,IAAI,IAAlC,GAAkC,EAAlC;;AAEA,MAAI,CAAJ,MAAA,EAAa,CAAb,CAAA,MAEO,IAAIE,cAAc,CAAlB,MAAkB,CAAlB,EAA4B;AACjCD,IAAAA,YAAY,CAAZA,GAAAA,CAAAA,MAAAA;AADK,GAAA,MAEA,IAAIC,cAAc,CAACC,MAAM,CAAzB,MAAkB,CAAlB,EAAmC;AAExCF,IAAAA,YAAY,CAAZA,GAAAA,CAAiBE,MAAM,CAAvBF,MAAAA;AAFK,GAAA,MAGA,IAAIF,SAAS,IAAI,OAAA,CAAA,MAAA,CAAA,KAAjB,QAAA,EAA6C;AAClD,SAAK,IAAL,GAAA,IAAA,MAAA,EAA0B;AAExBK,MAAAA,eAAe,CAACD,MAAM,CAAP,GAAO,CAAP,EAAA,SAAA,EAAfC,YAAe,CAAfA;AACD;AACF;;AAID,SAAOJ,SAAS,KAATA,SAAAA,GAA0BK,KAAK,CAALA,IAAAA,CAA1BL,YAA0BK,CAA1BL,GAAP,IAAA;AACD;;AAGD,SAAA,cAAA,CAAA,MAAA,EAAgC;AAC9B,MAAI,CAAJ,MAAA,EAAa;AACX,WAAA,KAAA;AACD;;AACD,MAAIG,MAAM,YAAV,WAAA,EAAmC;AACjC,WAAA,IAAA;AACD;;AACD,MAAI,OAAA,WAAA,KAAA,WAAA,IAAsCA,MAAM,YAAhD,WAAA,EAAyE;AACvE,WAAA,IAAA;AACD;;AACD,MAAI,OAAA,WAAA,KAAA,WAAA,IAAsCA,MAAM,YAAhD,WAAA,EAAyE;AACvE,WAAA,IAAA;AACD;;AACD,MAAI,OAAA,eAAA,KAAA,WAAA,IAA0CA,MAAM,YAApD,eAAA,EAAiF;AAC/E,WAAA,IAAA;AACD;;AACD,SAAA,KAAA;AACD","sourcesContent":["// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/* global MessagePort, ImageBitmap, OffscreenCanvas */\n\n// Returns an array of Transferrable objects that can be used with postMessage\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\nexport function getTransferList(object, recursive = true, transfers) {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : null;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}