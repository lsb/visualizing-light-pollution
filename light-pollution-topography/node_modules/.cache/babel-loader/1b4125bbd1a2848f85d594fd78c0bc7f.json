{"ast":null,"code":"import _objectSpread from\"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./App.css';import DeckGL from'@deck.gl/react';import{TerrainLayer,TileLayer}from'@deck.gl/geo-layers';import{BitmapLayer}from'@deck.gl/layers';var bitmapLayerDefaults={wrapLongitude:true,renderSubLayers:function renderSubLayers(props){return new BitmapLayer(props,{data:null,image:props.data,bounds:[props.tile.bbox.west,props.tile.bbox.south,props.tile.bbox.east,props.tile.bbox.north]});}};var terrainLayerDefaults={elevationDecoder:{rScaler:0,gScaler:0,bScaler:337,offset:0},meshMaxError:1,wrapLongitude:true,workerUrl:\"./terrain-loader.worker.js\",material:{ambient:0.2,diffuse:1,shininess:128,specularColor:[255,192,64]}};var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={viz:\"bumpy-terrain\",initialViewState:{longitude:-122.4,latitude:37.7,zoom:5,pitch:30,bearing:0,maxZoom:10}};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;var viz=this.state.viz;var smog=new TileLayer(_objectSpread({},bitmapLayerDefaults,{data:'./tiles/greys-{z}-{x}-{y}.png',maxZoom:8,id:'smog'}));var watercolor=new TileLayer(_objectSpread({},bitmapLayerDefaults,{data:'./stamen-tiles/watercolor/{z}/{x}/{y}.jpg',id:'watercolor'}));var tonerlabel=new TileLayer(_objectSpread({},bitmapLayerDefaults,{data:'./stamen-tiles/toner-labels/{z}/{x}/{y}.png',id:'tonerlabel'}));var terrain=new TileLayer(_objectSpread({},bitmapLayerDefaults,{data:'./stamen-tiles/terrain/{z}/{x}/{y}.png',id:'greenhills'}));var bumpyLight=new TerrainLayer(_objectSpread({},terrainLayerDefaults,{id:'bumpyLight',elevationData:'./tiles/globe-{z}-{x}-{y}.png',texture:'./tiles/globe-{z}-{x}-{y}.png',workerUrl:\"./terrain-loader.worker.js\"}));var bumpyTerrain=new TerrainLayer(_objectSpread({},terrainLayerDefaults,{id:'bumpyTerrain',elevationData:'./tiles/globe-{z}-{x}-{y}.png',texture:'./stamen-tiles/terrain/{z}/{x}/{y}.png'}));var bumpyWatercolor=new TerrainLayer(_objectSpread({},terrainLayerDefaults,{id:'bumpyWatercolor',elevationData:'./tiles/globe-{z}-{x}-{y}.png',texture:'./stamen-tiles/watercolor/{z}/{x}/{y}.jpg'}));var layerMapping={\"bumpy-light\":[bumpyLight],\"bumpy-terrain\":[bumpyTerrain],\"bumpy-watercolor\":[bumpyWatercolor],\"hazy-terrain\":[terrain,smog],\"hazy-watercolor\":[watercolor,tonerlabel,smog],\"hazy-gouache\":[watercolor,smog]};var layers=layerMapping[viz];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DeckGL,{initialViewState:this.state.initialViewState,controller:true,layers:layers,id:\"maincanvas\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"tweaks\"},/*#__PURE__*/React.createElement(\"div\",{id:\"colophon\"},\"\\xA9 Lee Butterman 2020. Made in Oakland, California.\",/*#__PURE__*/React.createElement(\"br\",null),\"Map tiles by Stamen Design under \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://creativecommons.org/licenses/by/3.0/\"},\"CC BY 3.0\"),\". Map data by OpenStreetMap under \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://creativecommons.org/licenses/by-sa/3.0/\"},\"CC BY SA 3.0\")),/*#__PURE__*/React.createElement(\"div\",{id:\"tweaks\"},\"View light pollution as:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"bumpy-light\",checked:viz===\"bumpy-light\",onChange:function onChange(e){return _this2.setState({viz:e.target.value});}}),\"topography, on a white/blue world\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"bumpy-terrain\",checked:viz===\"bumpy-terrain\",onChange:function onChange(e){return _this2.setState({viz:e.target.value});}}),\"topography, on a terrain map world\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"bumpy-watercolor\",checked:viz===\"bumpy-watercolor\",onChange:function onChange(e){return _this2.setState({viz:e.target.value});}}),\"topography, on a watercolor world\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"hazy-terrain\",checked:viz===\"hazy-terrain\",onChange:function onChange(e){return _this2.setState({viz:e.target.value});}}),\"haze, on a terrain map world\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"hazy-watercolor\",checked:viz===\"hazy-watercolor\",onChange:function onChange(e){return _this2.setState({viz:e.target.value});}}),\"haze, on a watercolor world with labels\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"viz\",value:\"hazy-gouache\",checked:viz===\"hazy-gouache\",onChange:function onChange(e){return _this2.setState({viz:e.target.value});}}),\"haze, on a watercolor world\"))))));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/lsb/wikidatageo/dark-sky-vacations/src/App.js"],"names":["React","DeckGL","TerrainLayer","TileLayer","BitmapLayer","bitmapLayerDefaults","wrapLongitude","renderSubLayers","props","data","image","bounds","tile","bbox","west","south","east","north","terrainLayerDefaults","elevationDecoder","rScaler","gScaler","bScaler","offset","meshMaxError","workerUrl","material","ambient","diffuse","shininess","specularColor","App","state","viz","initialViewState","longitude","latitude","zoom","pitch","bearing","maxZoom","smog","id","watercolor","tonerlabel","terrain","bumpyLight","elevationData","texture","bumpyTerrain","bumpyWatercolor","layerMapping","layers","e","setState","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport DeckGL from '@deck.gl/react';\nimport { TerrainLayer, TileLayer, } from '@deck.gl/geo-layers';\nimport { BitmapLayer,  } from '@deck.gl/layers';\n\nconst bitmapLayerDefaults = ({\n  wrapLongitude: true,\n  renderSubLayers: props => (\n    new BitmapLayer((props), {\n      data: null,\n      image: props.data,\n      bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north],\n    })\n  ),\n})\nconst terrainLayerDefaults = ({\n  elevationDecoder: {\n    rScaler: 0,\n    gScaler: 0,\n    bScaler: 337,\n    offset: 0,\n  },\n  meshMaxError: 1,\n  wrapLongitude: true,\n  workerUrl: \"./terrain-loader.worker.js\",\n  material: {\n    ambient: 0.2,\n    diffuse: 1,\n    shininess: 128,\n    specularColor: [255, 192, 64]\n  },\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viz: \"bumpy-terrain\",\n      initialViewState: {longitude: -122.4, latitude: 37.7, zoom: 5, pitch: 30, bearing: 0, maxZoom: 10},\n    }\n  }\n  render() {\n    const {viz} = this.state;\n    const smog = new TileLayer({\n      ...bitmapLayerDefaults,\n      data: './tiles/greys-{z}-{x}-{y}.png',\n      maxZoom: 8,\n      id: 'smog',\n    })\n    const watercolor = new TileLayer({\n      ...bitmapLayerDefaults,\n      data: './stamen-tiles/watercolor/{z}/{x}/{y}.jpg',\n      id: 'watercolor',\n    });\n    const tonerlabel = new TileLayer({\n      ...bitmapLayerDefaults,\n      data: './stamen-tiles/toner-labels/{z}/{x}/{y}.png',\n      id: 'tonerlabel',\n    });\n    const terrain = new TileLayer({\n      ...bitmapLayerDefaults,\n      data: './stamen-tiles/terrain/{z}/{x}/{y}.png',\n      id: 'greenhills',\n    })\n    const bumpyLight = new TerrainLayer({\n      ...terrainLayerDefaults,\n      id: 'bumpyLight',\n      elevationData: './tiles/globe-{z}-{x}-{y}.png',\n      texture: './tiles/globe-{z}-{x}-{y}.png',\n      workerUrl: \"./terrain-loader.worker.js\",\n    });\n    const bumpyTerrain = new TerrainLayer({\n      ...terrainLayerDefaults,\n      id: 'bumpyTerrain',\n      elevationData: './tiles/globe-{z}-{x}-{y}.png',\n      texture: './stamen-tiles/terrain/{z}/{x}/{y}.png',\n    });\n    const bumpyWatercolor = new TerrainLayer({\n      ...terrainLayerDefaults,\n      id: 'bumpyWatercolor',\n      elevationData: './tiles/globe-{z}-{x}-{y}.png',\n      texture: './stamen-tiles/watercolor/{z}/{x}/{y}.jpg',\n    })\n    const layerMapping = ({\n      \"bumpy-light\": [bumpyLight],\n      \"bumpy-terrain\": [bumpyTerrain],\n      \"bumpy-watercolor\": [bumpyWatercolor],\n      \"hazy-terrain\": [terrain, smog],\n      \"hazy-watercolor\": [watercolor, tonerlabel, smog],\n      \"hazy-gouache\": [watercolor, smog],\n    })\n    const layers = layerMapping[viz];\n    return (\n      <div>\n        <div>\n          <DeckGL initialViewState={this.state.initialViewState} controller={true} layers={layers} id={\"maincanvas\"} />\n        </div>\n        <div className=\"tweaks\">\n          <div id=\"colophon\">© Lee Butterman 2020. Made in Oakland, California.<br/>Map tiles by Stamen Design under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>. Map data by OpenStreetMap under <a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC BY SA 3.0</a></div>\n          <div id=\"tweaks\">\n            View light pollution as:<br/>\n            <form>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"bumpy-light\" checked={viz === \"bumpy-light\"} onChange={e => this.setState({viz: e.target.value})} />\n                  topography, on a white/blue world\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"bumpy-terrain\" checked={viz === \"bumpy-terrain\"} onChange={e => this.setState({viz: e.target.value})} />\n                  topography, on a terrain map world\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"bumpy-watercolor\" checked={viz === \"bumpy-watercolor\"} onChange={e => this.setState({viz: e.target.value})} />\n                  topography, on a watercolor world\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"hazy-terrain\" checked={viz === \"hazy-terrain\"} onChange={e => this.setState({viz: e.target.value})} />\n                  haze, on a terrain map world\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"hazy-watercolor\" checked={viz === \"hazy-watercolor\"} onChange={e => this.setState({viz: e.target.value})} />\n                  haze, on a watercolor world with labels\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"viz\" value=\"hazy-gouache\" checked={viz === \"hazy-gouache\"} onChange={e => this.setState({viz: e.target.value})} />\n                  haze, on a watercolor world\n                </label>\n              </div>\n            </form>\n          </div>          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}