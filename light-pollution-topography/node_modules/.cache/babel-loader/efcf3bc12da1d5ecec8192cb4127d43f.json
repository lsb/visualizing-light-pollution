{"ast":null,"code":"import _classCallCheck from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/home/lsb/wikidatageo/dark-sky-vacations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n/** @ignore */\n\nexport var GetVectorConstructor = /*#__PURE__*/function (_Visitor) {\n  _inherits(GetVectorConstructor, _Visitor);\n\n  var _super = _createSuper(GetVectorConstructor);\n\n  function GetVectorConstructor() {\n    _classCallCheck(this, GetVectorConstructor);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GetVectorConstructor, [{\n    key: \"visitNull\",\n    value: function visitNull() {\n      return NullVector;\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool() {\n      return BoolVector;\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt() {\n      return IntVector;\n    }\n  }, {\n    key: \"visitInt8\",\n    value: function visitInt8() {\n      return Int8Vector;\n    }\n  }, {\n    key: \"visitInt16\",\n    value: function visitInt16() {\n      return Int16Vector;\n    }\n  }, {\n    key: \"visitInt32\",\n    value: function visitInt32() {\n      return Int32Vector;\n    }\n  }, {\n    key: \"visitInt64\",\n    value: function visitInt64() {\n      return Int64Vector;\n    }\n  }, {\n    key: \"visitUint8\",\n    value: function visitUint8() {\n      return Uint8Vector;\n    }\n  }, {\n    key: \"visitUint16\",\n    value: function visitUint16() {\n      return Uint16Vector;\n    }\n  }, {\n    key: \"visitUint32\",\n    value: function visitUint32() {\n      return Uint32Vector;\n    }\n  }, {\n    key: \"visitUint64\",\n    value: function visitUint64() {\n      return Uint64Vector;\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat() {\n      return FloatVector;\n    }\n  }, {\n    key: \"visitFloat16\",\n    value: function visitFloat16() {\n      return Float16Vector;\n    }\n  }, {\n    key: \"visitFloat32\",\n    value: function visitFloat32() {\n      return Float32Vector;\n    }\n  }, {\n    key: \"visitFloat64\",\n    value: function visitFloat64() {\n      return Float64Vector;\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8() {\n      return Utf8Vector;\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary() {\n      return BinaryVector;\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary() {\n      return FixedSizeBinaryVector;\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate() {\n      return DateVector;\n    }\n  }, {\n    key: \"visitDateDay\",\n    value: function visitDateDay() {\n      return DateDayVector;\n    }\n  }, {\n    key: \"visitDateMillisecond\",\n    value: function visitDateMillisecond() {\n      return DateMillisecondVector;\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp() {\n      return TimestampVector;\n    }\n  }, {\n    key: \"visitTimestampSecond\",\n    value: function visitTimestampSecond() {\n      return TimestampSecondVector;\n    }\n  }, {\n    key: \"visitTimestampMillisecond\",\n    value: function visitTimestampMillisecond() {\n      return TimestampMillisecondVector;\n    }\n  }, {\n    key: \"visitTimestampMicrosecond\",\n    value: function visitTimestampMicrosecond() {\n      return TimestampMicrosecondVector;\n    }\n  }, {\n    key: \"visitTimestampNanosecond\",\n    value: function visitTimestampNanosecond() {\n      return TimestampNanosecondVector;\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime() {\n      return TimeVector;\n    }\n  }, {\n    key: \"visitTimeSecond\",\n    value: function visitTimeSecond() {\n      return TimeSecondVector;\n    }\n  }, {\n    key: \"visitTimeMillisecond\",\n    value: function visitTimeMillisecond() {\n      return TimeMillisecondVector;\n    }\n  }, {\n    key: \"visitTimeMicrosecond\",\n    value: function visitTimeMicrosecond() {\n      return TimeMicrosecondVector;\n    }\n  }, {\n    key: \"visitTimeNanosecond\",\n    value: function visitTimeNanosecond() {\n      return TimeNanosecondVector;\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal() {\n      return DecimalVector;\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList() {\n      return ListVector;\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct() {\n      return StructVector;\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion() {\n      return UnionVector;\n    }\n  }, {\n    key: \"visitDenseUnion\",\n    value: function visitDenseUnion() {\n      return DenseUnionVector;\n    }\n  }, {\n    key: \"visitSparseUnion\",\n    value: function visitSparseUnion() {\n      return SparseUnionVector;\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary() {\n      return DictionaryVector;\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval() {\n      return IntervalVector;\n    }\n  }, {\n    key: \"visitIntervalDayTime\",\n    value: function visitIntervalDayTime() {\n      return IntervalDayTimeVector;\n    }\n  }, {\n    key: \"visitIntervalYearMonth\",\n    value: function visitIntervalYearMonth() {\n      return IntervalYearMonthVector;\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList() {\n      return FixedSizeListVector;\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap() {\n      return MapVector;\n    }\n  }]);\n\n  return GetVectorConstructor;\n}(Visitor);\n/** @ignore */\n\nexport var instance = new GetVectorConstructor();","map":{"version":3,"sources":["visitor/vectorctor.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n"]},"metadata":{},"sourceType":"module"}