{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { LIFECYCLE } from '../lifecycle/constants';\nimport { createProps } from './create-props';\nimport { PROP_SYMBOLS } from './constants';\nvar ASYNC_ORIGINAL = PROP_SYMBOLS.ASYNC_ORIGINAL,\n    ASYNC_RESOLVED = PROP_SYMBOLS.ASYNC_RESOLVED,\n    ASYNC_DEFAULTS = PROP_SYMBOLS.ASYNC_DEFAULTS;\nimport ComponentState from './component-state';\nvar defaultProps = {};\nvar counter = 0;\n\nvar Component = function () {\n  function Component() {\n    _classCallCheck(this, Component);\n\n    this.props = createProps.apply(this, arguments);\n    this.id = this.props.id;\n    this.count = counter++;\n    this.lifecycle = LIFECYCLE.NO_STATE;\n    this.parent = null;\n    this.context = null;\n    this.state = null;\n    this.internalState = null;\n    Object.seal(this);\n  }\n\n  _createClass(Component, [{\n    key: \"clone\",\n    value: function clone(newProps) {\n      var props = this.props;\n      var asyncProps = {};\n\n      for (var key in props[ASYNC_DEFAULTS]) {\n        if (key in props[ASYNC_RESOLVED]) {\n          asyncProps[key] = props[ASYNC_RESOLVED][key];\n        } else if (key in props[ASYNC_ORIGINAL]) {\n          asyncProps[key] = props[ASYNC_ORIGINAL][key];\n        }\n      }\n\n      return new this.constructor(Object.assign({}, props, asyncProps, newProps));\n    }\n  }, {\n    key: \"_initState\",\n    value: function _initState() {\n      this.internalState = new ComponentState({});\n    }\n  }, {\n    key: \"stats\",\n    get: function get() {\n      return this.internalState.stats;\n    }\n  }]);\n\n  return Component;\n}();\n\nexport { Component as default };\nComponent.componentName = 'Component';\nComponent.defaultProps = defaultProps;","map":{"version":3,"sources":["../../../src/lifecycle/component.js"],"names":["ASYNC_ORIGINAL","ASYNC_RESOLVED","ASYNC_DEFAULTS","PROP_SYMBOLS","defaultProps","counter","Component","createProps","LIFECYCLE","Object","newProps","props","asyncProps","key"],"mappings":";;AAAA,SAAA,SAAA,QAAA,wBAAA;AACA,SAAA,WAAA,QAAA,gBAAA;AACA,SAAA,YAAA,QAAA,aAAA;IACOA,c,GAAkDG,Y,CAAlDH,c;IAAgBC,c,GAAkCE,Y,CAAlCF,c;IAAgBC,c,GAAkBC,Y,CAAlBD,c;AACvC,OAAA,cAAA,MAAA,mBAAA;AAEA,IAAME,YAAY,GAAlB,EAAA;AAEA,IAAIC,OAAO,GAAX,CAAA;;IAEqBC,S;AACnB,WAAA,SAAA,GAAkC;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAGhC,SAAA,KAAA,GAAaC,WAAW,CAAXA,KAAAA,CAAAA,IAAAA,EAAb,SAAaA,CAAb;AAIA,SAAA,EAAA,GAAU,KAAA,KAAA,CAAV,EAAA;AACA,SAAA,KAAA,GAAaF,OAAb,EAAA;AACA,SAAA,SAAA,GAAiBG,SAAS,CAA1B,QAAA;AACA,SAAA,MAAA,GAAA,IAAA;AACA,SAAA,OAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,SAAA,aAAA,GAAA,IAAA;AAGAC,IAAAA,MAAM,CAANA,IAAAA,CAAAA,IAAAA;AACD;;;;0BAGKC,Q,EAAU;AAAA,UACPC,KADO,GAAA,KAAA,KAAA;AAId,UAAMC,UAAU,GAAhB,EAAA;;AAGA,WAAK,IAAL,GAAA,IAAkBD,KAAK,CAAvB,cAAuB,CAAvB,EAAyC;AACvC,YAAIE,GAAG,IAAIF,KAAK,CAAhB,cAAgB,CAAhB,EAAkC;AAChCC,UAAAA,UAAU,CAAVA,GAAU,CAAVA,GAAkBD,KAAK,CAALA,cAAK,CAALA,CAAlBC,GAAkBD,CAAlBC;AADF,SAAA,MAEO,IAAIC,GAAG,IAAIF,KAAK,CAAhB,cAAgB,CAAhB,EAAkC;AACvCC,UAAAA,UAAU,CAAVA,GAAU,CAAVA,GAAkBD,KAAK,CAALA,cAAK,CAALA,CAAlBC,GAAkBD,CAAlBC;AACD;AACF;;AAGD,aAAO,IAAI,KAAJ,WAAA,CAAqBH,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAAA,UAAAA,EAA5B,QAA4BA,CAArB,CAAP;AACD;;;iCAQY;AACX,WAAA,aAAA,GAAqB,IAAA,cAAA,CAArB,EAAqB,CAArB;AACD;;;wBARW;AACV,aAAO,KAAA,aAAA,CAAP,KAAA;AACD;;;;;;SA1CkBH,S;AAmDrBA,SAAS,CAATA,aAAAA,GAAAA,WAAAA;AACAA,SAAS,CAATA,YAAAA,GAAAA,YAAAA","sourcesContent":["import {LIFECYCLE} from '../lifecycle/constants';\nimport {createProps} from './create-props';\nimport {PROP_SYMBOLS} from './constants';\nconst {ASYNC_ORIGINAL, ASYNC_RESOLVED, ASYNC_DEFAULTS} = PROP_SYMBOLS;\nimport ComponentState from './component-state';\n\nconst defaultProps = {};\n\nlet counter = 0;\n\nexport default class Component {\n  constructor(/* ...propObjects */) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps.apply(this, arguments);\n    /* eslint-enable prefer-spread */\n\n    // Define all members before layer is sealed\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n    this.lifecycle = LIFECYCLE.NO_STATE; // Helps track and debug the life cycle of the layers\n    this.parent = null; // reference to the composite layer parent that rendered this layer\n    this.context = null; // Will reference layer manager's context, contains state shared by layers\n    this.state = null; // Will be set to the shared layer state object during layer matching\n    this.internalState = null;\n\n    // Seal the layer\n    Object.seal(this);\n  }\n\n  // clone this layer with modified props\n  clone(newProps) {\n    const {props} = this;\n\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps = {};\n\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS]) {\n      if (key in props[ASYNC_RESOLVED]) {\n        asyncProps[key] = props[ASYNC_RESOLVED][key];\n      } else if (key in props[ASYNC_ORIGINAL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL][key];\n      }\n    }\n\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    return new this.constructor(Object.assign({}, props, asyncProps, newProps));\n  }\n\n  get stats() {\n    return this.internalState.stats;\n  }\n\n  // PROTECTED METHODS, override in subclass\n\n  _initState() {\n    this.internalState = new ComponentState({});\n  }\n}\n\nComponent.componentName = 'Component';\nComponent.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}