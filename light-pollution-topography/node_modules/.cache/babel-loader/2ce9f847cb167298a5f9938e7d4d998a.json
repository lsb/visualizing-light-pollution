{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { FixedSizeList } from '../type';\n/** @ignore */\n\nexport class FixedSizeListBuilder extends Builder {\n  constructor() {\n    super(...arguments);\n    this._run = new Run();\n  }\n\n  setValue(index, value) {\n    super.setValue(index, this._run.bind(value));\n  }\n\n  addChild(child, name = '0') {\n    if (this.numChildren > 0) {\n      throw new Error('FixedSizeListBuilder can only have one child.');\n    }\n\n    const childIndex = this.children.push(child);\n    this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n    return childIndex;\n  }\n\n  clear() {\n    this._run.clear();\n\n    return super.clear();\n  }\n\n}","map":{"version":3,"sources":["builder/fixedsizelist.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAS,GAAT,QAAoB,OAApB;AACA,SAAS,KAAT,QAAsB,WAAtB;AACA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAmB,aAAnB,QAAwC,SAAxC;AAEA;;AACA,OAAM,MAAO,oBAAP,SAA2E,OAA3E,CAA2G;AAAjH,EAAA,WAAA,GAAA;;AACc,SAAA,IAAA,GAAO,IAAI,GAAJ,EAAP;AAgBb;;AAfU,EAAA,QAAQ,CAAC,KAAD,EAAgB,KAAhB,EAAkC;AAC7C,UAAM,QAAN,CAAe,KAAf,EAAsB,KAAK,IAAL,CAAU,IAAV,CAAe,KAAf,CAAtB;AACH;;AACM,EAAA,QAAQ,CAAC,KAAD,EAAoB,IAAI,GAAG,GAA3B,EAA8B;AACzC,QAAI,KAAK,WAAL,GAAmB,CAAvB,EAA0B;AACtB,YAAM,IAAI,KAAJ,CAAU,+CAAV,CAAN;AACH;;AACD,UAAM,UAAU,GAAG,KAAK,QAAL,CAAc,IAAd,CAAmB,KAAnB,CAAnB;AACA,SAAK,IAAL,GAAY,IAAI,aAAJ,CAAkB,KAAK,IAAL,CAAU,QAA5B,EAAsC,IAAI,KAAJ,CAAU,IAAV,EAAgB,KAAK,CAAC,IAAtB,EAA4B,IAA5B,CAAtC,CAAZ;AACA,WAAO,UAAP;AACH;;AACM,EAAA,KAAK,GAAA;AACR,SAAK,IAAL,CAAU,KAAV;;AACA,WAAO,MAAM,KAAN,EAAP;AACH;;AAhB4G","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}