{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport loadTerrain from './lib/parse-terrain';\nvar VERSION = typeof \"2.1.2\" !== 'undefined' ? \"2.1.2\" : 'latest';\nexport var TerrainWorkerLoader = {\n  id: 'terrain',\n  name: 'Terrain',\n  version: VERSION,\n  extensions: ['png', 'pngraw'],\n  mimeType: 'image/png',\n  options: {\n    terrain: {\n      workerUrl: \"https://unpkg.com/@loaders.gl/terrain@\".concat(VERSION, \"/dist/terrain-loader.worker.js\"),\n      meshMaxError: 10,\n      elevationDecoder: {\n        rScaler: 1,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0\n      }\n    }\n  }\n};\nexport var TerrainLoader = _objectSpread({}, TerrainWorkerLoader, {\n  parse: loadTerrain\n});","map":{"version":3,"sources":["../../src/terrain-loader.js"],"names":["VERSION","TerrainWorkerLoader","id","name","version","extensions","mimeType","options","terrain","workerUrl","meshMaxError","elevationDecoder","rScaler","gScaler","bScaler","offset","TerrainLoader","parse","loadTerrain"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAA,WAAA,MAAA,qBAAA;AAGA,IAAMA,OAAO,GAAG,OAAA,OAAA,KAAA,WAAA,GAAA,OAAA,GAAhB,QAAA;AAEA,OAAO,IAAMC,mBAAmB,GAAG;AACjCC,EAAAA,EAAE,EAD+B,SAAA;AAEjCC,EAAAA,IAAI,EAF6B,SAAA;AAGjCC,EAAAA,OAAO,EAH0B,OAAA;AAIjCC,EAAAA,UAAU,EAAE,CAAA,KAAA,EAJqB,QAIrB,CAJqB;AAKjCC,EAAAA,QAAQ,EALyB,WAAA;AAMjCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAA,yCAAA,MAAA,CAAA,OAAA,EADF,gCACE,CADF;AAEPC,MAAAA,YAAY,EAFL,EAAA;AAGPC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,OAAO,EADS,CAAA;AAEhBC,QAAAA,OAAO,EAFS,CAAA;AAGhBC,QAAAA,OAAO,EAHS,CAAA;AAIhBC,QAAAA,MAAM,EAAE;AAJQ;AAHX;AADF;AANwB,CAA5B;AAoBP,OAAO,IAAMC,aAAa,GAAA,aAAA,CAAA,EAAA,EAAA,mBAAA,EAAA;AAExBC,EAAAA,KAAK,EAAEC;AAFiB,CAAA,CAAnB","sourcesContent":["// __VERSION__ is injected by babel-plugin-version-inline\n/* global __VERSION__ */\nimport loadTerrain from './lib/parse-terrain';\n\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport const TerrainWorkerLoader = {\n  id: 'terrain',\n  name: 'Terrain',\n  version: VERSION,\n  extensions: ['png', 'pngraw'],\n  mimeType: 'image/png',\n  options: {\n    terrain: {\n      workerUrl: `https://unpkg.com/@loaders.gl/terrain@${VERSION}/dist/terrain-loader.worker.js`,\n      meshMaxError: 10,\n      elevationDecoder: {\n        rScaler: 1,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0\n      }\n    }\n  }\n};\n\nexport const TerrainLoader = {\n  ...TerrainWorkerLoader,\n  parse: loadTerrain\n};\n"]},"metadata":{},"sourceType":"module"}