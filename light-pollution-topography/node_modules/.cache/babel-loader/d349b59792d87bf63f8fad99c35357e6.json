{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport parseMVT from './lib/parse-mvt';\nvar VERSION = typeof \"2.1.2\" !== 'undefined' ? \"2.1.2\" : 'latest';\nexport var MVTWorkerLoader = {\n  id: 'mvt',\n  name: 'Mapbox Vector Tile',\n  version: VERSION,\n  extensions: ['mvt'],\n  mimeType: 'application/x-protobuf',\n  category: 'geometry',\n  options: {\n    mvt: {\n      coordinates: 'local',\n      layerProperty: 'layerName',\n      layers: null,\n      tileIndex: null,\n      workerUrl: \"https://unpkg.com/@loaders.gl/mvt@\".concat(VERSION, \"/dist/mvt-loader.worker.js\")\n    }\n  }\n};\nexport var MVTLoader = _objectSpread({}, MVTWorkerLoader, {\n  parse: function () {\n    var _parse = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer, options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", parseMVT(arrayBuffer, options));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function parse(_x, _x2) {\n      return _parse.apply(this, arguments);\n    }\n\n    return parse;\n  }(),\n  parseSync: parseMVT,\n  binary: true\n});","map":{"version":3,"sources":["../../src/mvt-loader.js"],"names":["VERSION","MVTWorkerLoader","id","name","version","extensions","mimeType","category","options","mvt","coordinates","layerProperty","layers","tileIndex","workerUrl","MVTLoader","parse","parseMVT","parseSync","binary"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAA,QAAA,MAAA,iBAAA;AAGA,IAAMA,OAAO,GAAG,OAAA,OAAA,KAAA,WAAA,GAAA,OAAA,GAAhB,QAAA;AAEA,OAAO,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,EAAE,EAD2B,KAAA;AAE7BC,EAAAA,IAAI,EAFyB,oBAAA;AAG7BC,EAAAA,OAAO,EAHsB,OAAA;AAI7BC,EAAAA,UAAU,EAAE,CAJiB,KAIjB,CAJiB;AAK7BC,EAAAA,QAAQ,EALqB,wBAAA;AAM7BC,EAAAA,QAAQ,EANqB,UAAA;AAO7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AACHC,MAAAA,WAAW,EADR,OAAA;AAEHC,MAAAA,aAAa,EAFV,WAAA;AAGHC,MAAAA,MAAM,EAHH,IAAA;AAIHC,MAAAA,SAAS,EAJN,IAAA;AAKHC,MAAAA,SAAS,EAAA,qCAAA,MAAA,CAAA,OAAA,EAAA,4BAAA;AALN;AADE;AAPoB,CAAxB;AAkBP,OAAO,IAAMC,SAAS,GAAA,aAAA,CAAA,EAAA,EAAA,eAAA,EAAA;AAEpBC,EAAAA,KAAK,EAAA,YAAA;AAAA,QAAA,MAAA,GAAA,iBAAA,CAAA,mBAAA,CAAA,IAAA,CAAE,SAAA,OAAA,CAAA,WAAA,EAAA,OAAA,EAAA;AAAA,aAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,eAAA,CAAA,EAAA;AAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AAAA,qBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAgCC,QAAQ,CAAA,WAAA,EAAxC,OAAwC,CAAxC,CAAA;;AAAA,iBAAA,CAAA;AAAA,iBAAA,KAAA;AAAA,qBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,OAAA,EAAA,OAAA,CAAA;AAAF,KAAA,CAAA,CAAA;;AAAA,aAAA,KAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,aAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;;AAAA,WAAA,KAAA;AAFe,GAEf,EAFe;AAGpBC,EAAAA,SAAS,EAHW,QAAA;AAIpBC,EAAAA,MAAM,EAAE;AAJY,CAAA,CAAf","sourcesContent":["// __VERSION__ is injected by babel-plugin-version-inline\n/* global __VERSION__ */\nimport parseMVT from './lib/parse-mvt';\n\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport const MVTWorkerLoader = {\n  id: 'mvt',\n  name: 'Mapbox Vector Tile',\n  version: VERSION,\n  extensions: ['mvt'],\n  mimeType: 'application/x-protobuf',\n  category: 'geometry',\n  options: {\n    mvt: {\n      coordinates: 'local',\n      layerProperty: 'layerName',\n      layers: null,\n      tileIndex: null,\n      workerUrl: `https://unpkg.com/@loaders.gl/mvt@${VERSION}/dist/mvt-loader.worker.js`\n    }\n  }\n};\n\nexport const MVTLoader = {\n  ...MVTWorkerLoader,\n  parse: async (arrayBuffer, options) => parseMVT(arrayBuffer, options),\n  parseSync: parseMVT,\n  binary: true\n};\n"]},"metadata":{},"sourceType":"module"}