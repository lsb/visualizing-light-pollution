{"ast":null,"code":"// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\n\nexport var org;\n\n(function (org) {\n  var apache;\n\n  (function (apache) {\n    var arrow;\n\n    (function (arrow) {\n      var flatbuf;\n\n      (function (flatbuf) {\n        class Footer {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Footer\n           */\n\n\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * @param flatbuffers.ByteBuffer bb\n           * @param Footer= obj\n           * @returns Footer\n           */\n\n\n          static getRootAsFooter(bb, obj) {\n            return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n          }\n          /**\n           * @returns org.apache.arrow.flatbuf.MetadataVersion\n           */\n\n\n          version() {\n            let offset = this.bb.__offset(this.bb_pos, 4);\n\n            return offset ?\n            /**  */\n            this.bb.readInt16(this.bb_pos + offset) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n          }\n          /**\n           * @param org.apache.arrow.flatbuf.Schema= obj\n           * @returns org.apache.arrow.flatbuf.Schema|null\n           */\n\n\n          schema(obj) {\n            let offset = this.bb.__offset(this.bb_pos, 6);\n\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n\n\n          dictionaries(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n\n\n          dictionariesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 8);\n\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param number index\n           * @param org.apache.arrow.flatbuf.Block= obj\n           * @returns org.apache.arrow.flatbuf.Block\n           */\n\n\n          recordBatches(index, obj) {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n          }\n          /**\n           * @returns number\n           */\n\n\n          recordBatchesLength() {\n            let offset = this.bb.__offset(this.bb_pos, 10);\n\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           */\n\n\n          static startFooter(builder) {\n            builder.startObject(4);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param org.apache.arrow.flatbuf.MetadataVersion version\n           */\n\n\n          static addVersion(builder, version) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset schemaOffset\n           */\n\n\n          static addSchema(builder, schemaOffset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset dictionariesOffset\n           */\n\n\n          static addDictionaries(builder, dictionariesOffset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n\n\n          static startDictionariesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset recordBatchesOffset\n           */\n\n\n          static addRecordBatches(builder, recordBatchesOffset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param number numElems\n           */\n\n\n          static startRecordBatchesVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @returns flatbuffers.Offset\n           */\n\n\n          static endFooter(builder) {\n            let offset = builder.endObject();\n            return offset;\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Offset offset\n           */\n\n\n          static finishFooterBuffer(builder, offset) {\n            builder.finish(offset);\n          }\n\n          static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n          }\n\n        }\n\n        flatbuf.Footer = Footer;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n\n\n(function (org) {\n  var apache;\n\n  (function (apache) {\n    var arrow;\n\n    (function (arrow) {\n      var flatbuf;\n\n      (function (flatbuf) {\n        class Block {\n          constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Block\n           */\n\n\n          __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n          }\n          /**\n           * Index to the start of the RecordBlock (note this is past the Message header)\n           *\n           * @returns flatbuffers.Long\n           */\n\n\n          offset() {\n            return this.bb.readInt64(this.bb_pos);\n          }\n          /**\n           * Length of the metadata\n           *\n           * @returns number\n           */\n\n\n          metaDataLength() {\n            return this.bb.readInt32(this.bb_pos + 8);\n          }\n          /**\n           * Length of the data (this is aligned so there can be a gap between this and\n           * the metatdata).\n           *\n           * @returns flatbuffers.Long\n           */\n\n\n          bodyLength() {\n            return this.bb.readInt64(this.bb_pos + 16);\n          }\n          /**\n           * @param flatbuffers.Builder builder\n           * @param flatbuffers.Long offset\n           * @param number metaDataLength\n           * @param flatbuffers.Long bodyLength\n           * @returns flatbuffers.Offset\n           */\n\n\n          static createBlock(builder, offset, metaDataLength, bodyLength) {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n          }\n\n        }\n\n        flatbuf.Block = Block;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));","map":{"version":3,"sources":["fb/File.ts"],"names":[],"mappings":"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","sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}