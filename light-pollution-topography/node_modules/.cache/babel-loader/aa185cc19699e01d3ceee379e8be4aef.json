{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _awaitAsyncGenerator from \"@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nimport _asyncIterator from \"@babel/runtime/helpers/esm/asyncIterator\";\nexport function forEach(_x7, _x8) {\n  return _forEach.apply(this, arguments);\n}\n\nfunction _forEach() {\n  _forEach = _asyncToGenerator(_regeneratorRuntime.mark(function _callee5(iterator, visitor) {\n    var _ref, done, value, cancel;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!true) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.next = 3;\n            return iterator.next();\n\n          case 3:\n            _ref = _context5.sent;\n            done = _ref.done;\n            value = _ref.value;\n\n            if (!done) {\n              _context5.next = 9;\n              break;\n            }\n\n            iterator[\"return\"]();\n            return _context5.abrupt(\"return\");\n\n          case 9:\n            cancel = visitor(value);\n\n            if (!cancel) {\n              _context5.next = 12;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 12:\n            _context5.next = 0;\n            break;\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _forEach.apply(this, arguments);\n}\n\nexport function textDecoderAsyncIterator(_x, _x2) {\n  return _textDecoderAsyncIterator.apply(this, arguments);\n}\n\nfunction _textDecoderAsyncIterator() {\n  _textDecoderAsyncIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee(arrayBufferIterator, options) {\n    var textDecoder, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, arrayBuffer;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            textDecoder = new TextDecoder(options);\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 3;\n            _iterator = _asyncIterator(arrayBufferIterator);\n\n          case 5:\n            _context.next = 7;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 7:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 11;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 11:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 19;\n              break;\n            }\n\n            arrayBuffer = _value;\n            _context.next = 16;\n            return typeof arrayBuffer === 'string' ? arrayBuffer : textDecoder.decode(arrayBuffer, {\n              stream: true\n            });\n\n          case 16:\n            _iteratorNormalCompletion = true;\n            _context.next = 5;\n            break;\n\n          case 19:\n            _context.next = 25;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 25:\n            _context.prev = 25;\n            _context.prev = 26;\n\n            if (!(!_iteratorNormalCompletion && _iterator[\"return\"] != null)) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 30;\n            return _awaitAsyncGenerator(_iterator[\"return\"]());\n\n          case 30:\n            _context.prev = 30;\n\n            if (!_didIteratorError) {\n              _context.next = 33;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 33:\n            return _context.finish(30);\n\n          case 34:\n            return _context.finish(25);\n\n          case 35:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 21, 25, 35], [26,, 30, 34]]);\n  }));\n  return _textDecoderAsyncIterator.apply(this, arguments);\n}\n\nexport function textEncoderAsyncIterator(_x3, _x4) {\n  return _textEncoderAsyncIterator.apply(this, arguments);\n}\n\nfunction _textEncoderAsyncIterator() {\n  _textEncoderAsyncIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee2(textIterator, options) {\n    var textEncoder, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, text;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            textEncoder = new TextEncoder();\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context2.prev = 3;\n            _iterator2 = _asyncIterator(textIterator);\n\n          case 5:\n            _context2.next = 7;\n            return _awaitAsyncGenerator(_iterator2.next());\n\n          case 7:\n            _step2 = _context2.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context2.next = 11;\n            return _awaitAsyncGenerator(_step2.value);\n\n          case 11:\n            _value2 = _context2.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context2.next = 19;\n              break;\n            }\n\n            text = _value2;\n            _context2.next = 16;\n            return typeof text === 'string' ? textEncoder.encode(text) : text;\n\n          case 16:\n            _iteratorNormalCompletion2 = true;\n            _context2.next = 5;\n            break;\n\n          case 19:\n            _context2.next = 25;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](3);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context2.t0;\n\n          case 25:\n            _context2.prev = 25;\n            _context2.prev = 26;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null)) {\n              _context2.next = 30;\n              break;\n            }\n\n            _context2.next = 30;\n            return _awaitAsyncGenerator(_iterator2[\"return\"]());\n\n          case 30:\n            _context2.prev = 30;\n\n            if (!_didIteratorError2) {\n              _context2.next = 33;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 33:\n            return _context2.finish(30);\n\n          case 34:\n            return _context2.finish(25);\n\n          case 35:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 21, 25, 35], [26,, 30, 34]]);\n  }));\n  return _textEncoderAsyncIterator.apply(this, arguments);\n}\n\nexport function lineAsyncIterator(_x5) {\n  return _lineAsyncIterator.apply(this, arguments);\n}\n\nfunction _lineAsyncIterator() {\n  _lineAsyncIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee3(textIterator) {\n    var previous, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _value3, textChunk, eolIndex, line;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            previous = '';\n            _iteratorNormalCompletion3 = true;\n            _didIteratorError3 = false;\n            _context3.prev = 3;\n            _iterator3 = _asyncIterator(textIterator);\n\n          case 5:\n            _context3.next = 7;\n            return _awaitAsyncGenerator(_iterator3.next());\n\n          case 7:\n            _step3 = _context3.sent;\n            _iteratorNormalCompletion3 = _step3.done;\n            _context3.next = 11;\n            return _awaitAsyncGenerator(_step3.value);\n\n          case 11:\n            _value3 = _context3.sent;\n\n            if (_iteratorNormalCompletion3) {\n              _context3.next = 26;\n              break;\n            }\n\n            textChunk = _value3;\n            previous += textChunk;\n            eolIndex = void 0;\n\n          case 16:\n            if (!((eolIndex = previous.indexOf('\\n')) >= 0)) {\n              _context3.next = 23;\n              break;\n            }\n\n            line = previous.slice(0, eolIndex + 1);\n            previous = previous.slice(eolIndex + 1);\n            _context3.next = 21;\n            return line;\n\n          case 21:\n            _context3.next = 16;\n            break;\n\n          case 23:\n            _iteratorNormalCompletion3 = true;\n            _context3.next = 5;\n            break;\n\n          case 26:\n            _context3.next = 32;\n            break;\n\n          case 28:\n            _context3.prev = 28;\n            _context3.t0 = _context3[\"catch\"](3);\n            _didIteratorError3 = true;\n            _iteratorError3 = _context3.t0;\n\n          case 32:\n            _context3.prev = 32;\n            _context3.prev = 33;\n\n            if (!(!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null)) {\n              _context3.next = 37;\n              break;\n            }\n\n            _context3.next = 37;\n            return _awaitAsyncGenerator(_iterator3[\"return\"]());\n\n          case 37:\n            _context3.prev = 37;\n\n            if (!_didIteratorError3) {\n              _context3.next = 40;\n              break;\n            }\n\n            throw _iteratorError3;\n\n          case 40:\n            return _context3.finish(37);\n\n          case 41:\n            return _context3.finish(32);\n\n          case 42:\n            if (!(previous.length > 0)) {\n              _context3.next = 45;\n              break;\n            }\n\n            _context3.next = 45;\n            return previous;\n\n          case 45:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 28, 32, 42], [33,, 37, 41]]);\n  }));\n  return _lineAsyncIterator.apply(this, arguments);\n}\n\nexport function numberedLineAsyncIterator(_x6) {\n  return _numberedLineAsyncIterator.apply(this, arguments);\n}\n\nfunction _numberedLineAsyncIterator() {\n  _numberedLineAsyncIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee4(lineIterator) {\n    var counter, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _value4, line;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            counter = 1;\n            _iteratorNormalCompletion4 = true;\n            _didIteratorError4 = false;\n            _context4.prev = 3;\n            _iterator4 = _asyncIterator(lineIterator);\n\n          case 5:\n            _context4.next = 7;\n            return _awaitAsyncGenerator(_iterator4.next());\n\n          case 7:\n            _step4 = _context4.sent;\n            _iteratorNormalCompletion4 = _step4.done;\n            _context4.next = 11;\n            return _awaitAsyncGenerator(_step4.value);\n\n          case 11:\n            _value4 = _context4.sent;\n\n            if (_iteratorNormalCompletion4) {\n              _context4.next = 20;\n              break;\n            }\n\n            line = _value4;\n            _context4.next = 16;\n            return {\n              counter: counter,\n              line: line\n            };\n\n          case 16:\n            counter++;\n\n          case 17:\n            _iteratorNormalCompletion4 = true;\n            _context4.next = 5;\n            break;\n\n          case 20:\n            _context4.next = 26;\n            break;\n\n          case 22:\n            _context4.prev = 22;\n            _context4.t0 = _context4[\"catch\"](3);\n            _didIteratorError4 = true;\n            _iteratorError4 = _context4.t0;\n\n          case 26:\n            _context4.prev = 26;\n            _context4.prev = 27;\n\n            if (!(!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null)) {\n              _context4.next = 31;\n              break;\n            }\n\n            _context4.next = 31;\n            return _awaitAsyncGenerator(_iterator4[\"return\"]());\n\n          case 31:\n            _context4.prev = 31;\n\n            if (!_didIteratorError4) {\n              _context4.next = 34;\n              break;\n            }\n\n            throw _iteratorError4;\n\n          case 34:\n            return _context4.finish(31);\n\n          case 35:\n            return _context4.finish(26);\n\n          case 36:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[3, 22, 26, 36], [27,, 31, 35]]);\n  }));\n  return _numberedLineAsyncIterator.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../src/iterator-utils/async-iteration.js"],"names":["done","value","iterator","cancel","visitor","textDecoder","arrayBuffer","stream","textEncoder","text","previous","textChunk","eolIndex","line","counter"],"mappings":"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","sourcesContent":["/* global TextDecoder, TextEncoder */\n\n// GENERAL UTILITIES\n\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n  // eslint-disable-next-line\n  while (true) {\n    const {done, value} = await iterator.next();\n    if (done) {\n      iterator.return();\n      return;\n    }\n    const cancel = visitor(value);\n    if (cancel) {\n      return;\n    }\n  }\n}\n\n// ITERATOR GENERATORS\n\n// TextDecoder iterators\n// TextDecoder will keep any partial undecoded bytes between calls to `decode`\n\nexport async function* textDecoderAsyncIterator(arrayBufferIterator, options) {\n  const textDecoder = new TextDecoder(options);\n  for await (const arrayBuffer of arrayBufferIterator) {\n    yield typeof arrayBuffer === 'string'\n      ? arrayBuffer\n      : textDecoder.decode(arrayBuffer, {stream: true});\n  }\n}\n\n// TextEncoder iterator\n// TODO - this is not useful unless min chunk size is given\n// TextEncoder will keep any partial undecoded bytes between calls to `encode`\n// If iterator does not yield strings, assume arrayBuffer and return unencoded\n\nexport async function* textEncoderAsyncIterator(textIterator, options) {\n  const textEncoder = new TextEncoder();\n  for await (const text of textIterator) {\n    yield typeof text === 'string' ? textEncoder.encode(text) : text;\n  }\n}\n\n/**\n * @param textIterator async iterable yielding strings\n * @returns an async iterable over lines\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\n\nexport async function* lineAsyncIterator(textIterator) {\n  let previous = '';\n  for await (const textChunk of textIterator) {\n    previous += textChunk;\n    let eolIndex;\n    while ((eolIndex = previous.indexOf('\\n')) >= 0) {\n      // line includes the EOL\n      const line = previous.slice(0, eolIndex + 1);\n      previous = previous.slice(eolIndex + 1);\n      yield line;\n    }\n  }\n\n  if (previous.length > 0) {\n    yield previous;\n  }\n}\n\n/**\n * @param lineIterator async iterable yielding lines\n * @returns async iterable yielding numbered lines\n *\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\nexport async function* numberedLineAsyncIterator(lineIterator) {\n  let counter = 1;\n  for await (const line of lineIterator) {\n    yield {counter, line};\n    counter++;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}