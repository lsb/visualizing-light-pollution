{"ast":null,"code":"var _jsxFileName = \"/home/lsb/wikidatageo/dark-sky-vacations/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport DeckGL from '@deck.gl/react';\nimport { TerrainLayer, TileLayer } from '@deck.gl/geo-layers';\nimport { BitmapLayer } from '@deck.gl/layers';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viz: \"bumpy-light\",\n      initialViewState: {\n        longitude: -122.4,\n        latitude: 37.7,\n        zoom: 5,\n        pitch: 0 * 30,\n        bearing: 0,\n        maxZoom: 16\n      }\n    };\n  }\n\n  render() {\n    const {\n      viz\n    } = this.state;\n    const smog = new TileLayer({\n      data: './tiles/greys-{z}-{x}-{y}.png',\n      id: 'smog',\n      maxZoom: 10,\n      wrapLongitude: true,\n      renderSubLayers: props => new BitmapLayer(props, {\n        data: null,\n        image: props.data,\n        bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north]\n      })\n    });\n    const watercolor = new TileLayer({\n      data: 'http://c.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg',\n      id: 'watercolor',\n      wrapLongitude: true,\n      renderSubLayers: props => new BitmapLayer(props, {\n        data: null,\n        image: props.data,\n        bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north]\n      })\n    });\n    const tonerlabel = new TileLayer({\n      data: 'http://b.tile.stamen.com/toner-labels/{z}/{x}/{y}.png',\n      id: 'tonerlabel',\n      wrapLongitude: true,\n      renderSubLayers: props => new BitmapLayer(props, {\n        data: null,\n        image: props.data,\n        bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north]\n      })\n    });\n    const terrain = new TileLayer({\n      data: 'http://a.tile.stamen.com/terrain/{z}/{x}/{y}.png',\n      id: 'greenhills',\n      wrapLongitude: true,\n      renderSubLayers: props => new BitmapLayer(props, {\n        data: null,\n        image: props.data,\n        bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north]\n      })\n    });\n    const bumpyLight = new TerrainLayer({\n      id: 'bumpyLight',\n      elevationDecoder: {\n        rScaler: 1024,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0\n      },\n      meshMaxError: 1,\n      elevationData: './tiles/light-{z}-{x}-{y}.png',\n      maxZoom: 10,\n      wrapLongitude: true,\n      texture: './tiles/water-{z}-{x}-{y}.png',\n      material: {\n        ambient: 0.2,\n        diffuse: 1,\n        shininess: 128,\n        specularColor: [255, 192, 64]\n      }\n    });\n    const bumpyTerrain = new TerrainLayer({\n      id: 'bumpyTerrain',\n      elevationDecoder: {\n        rScaler: 1024,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0\n      },\n      meshMaxError: 1,\n      elevationData: './tiles/light-{z}-{x}-{y}',\n      maxZoom: 10,\n      wrapLongitude: true,\n      texture: 'http://a.tile.stamen.com/terrain/{z}/{x}/{y}.png',\n      material: {\n        ambient: 0.2,\n        diffuse: 1,\n        shininess: 128,\n        specularColor: [255, 192, 64]\n      }\n    });\n    const layers = viz === \"bumpy-light\" ? [bumpyLight] : viz === \"bumpy-terrain\" ? [bumpyTerrain] : viz === \"hazy-terrain\" ? [terrain, smog] : [watercolor, tonerlabel, smog];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DeckGL, {\n      initialViewState: this.state.initialViewState,\n      controller: true,\n      layers: layers,\n      id: \"maincanvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tweaks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"colophon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"\\xA9 Lee Butterman 2020. Made in Oakland, California.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tweaks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Tweaks:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onChange: e => this.setState({\n        viz: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"bumpy-light\",\n      value: \"bumpy-light\",\n      checked: viz === \"bumpy-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }), \"Light-pollution as topography, light-pollution + water as texture\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"bumpy-terrain\",\n      value: \"bumpy-terrain\",\n      checked: viz === \"bumpy-terrain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }), \"Light-pollution as topography, terrain map as texture\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"hazy-terrain\",\n      value: \"hazy-terrain\",\n      checked: viz === \"hazy-terrain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }), \"Light-pollution as haze on terrain\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"hazy-watercolor\",\n      value: \"hazy-watercolor\",\n      checked: viz === \"hazy-watercolor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }), \"Light-pollution as haze on watercolor\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lsb/wikidatageo/dark-sky-vacations/src/App.js"],"names":["React","DeckGL","TerrainLayer","TileLayer","BitmapLayer","App","Component","constructor","props","state","viz","initialViewState","longitude","latitude","zoom","pitch","bearing","maxZoom","render","smog","data","id","wrapLongitude","renderSubLayers","image","bounds","tile","bbox","west","south","east","north","watercolor","tonerlabel","terrain","bumpyLight","elevationDecoder","rScaler","gScaler","bScaler","offset","meshMaxError","elevationData","texture","material","ambient","diffuse","shininess","specularColor","bumpyTerrain","layers","e","setState","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport DeckGL from '@deck.gl/react';\nimport { TerrainLayer, TileLayer, } from '@deck.gl/geo-layers';\nimport { BitmapLayer,  } from '@deck.gl/layers';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viz: \"bumpy-light\",\n      initialViewState: {longitude: -122.4, latitude: 37.7, zoom: 5, pitch: 0 * 30, bearing: 0, maxZoom: 16},\n    }\n  }\n  render() {\n    const {viz} = this.state;\n    const smog = new TileLayer({\n      data: './tiles/greys-{z}-{x}-{y}.png',\n      id: 'smog',\n      maxZoom: 10,\n      wrapLongitude: true,\n      renderSubLayers: props => (\n        new BitmapLayer((props), {\n          data: null,\n          image: props.data,\n          bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north],\n        })\n      )\n    })\n    const watercolor = new TileLayer({\n      data: 'http://c.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg',\n      id: 'watercolor',\n      wrapLongitude: true,\n      renderSubLayers: props => new BitmapLayer((props), {\n        data: null,\n        image: props.data,\n        bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north],\n      })\n    });\n    const tonerlabel = new TileLayer({\n      data: 'http://b.tile.stamen.com/toner-labels/{z}/{x}/{y}.png',\n      id: 'tonerlabel',\n      wrapLongitude: true,\n      renderSubLayers: props => new BitmapLayer((props), {\n        data: null,\n        image: props.data,\n        bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north],\n      })\n    });\n    const terrain = new TileLayer({\n      data: 'http://a.tile.stamen.com/terrain/{z}/{x}/{y}.png',\n      id: 'greenhills',\n      wrapLongitude: true,\n      renderSubLayers: props => new BitmapLayer((props), {\n        data: null,\n        image: props.data,\n        bounds: [props.tile.bbox.west, props.tile.bbox.south, props.tile.bbox.east, props.tile.bbox.north],\n      })\n    })\n    const bumpyLight = new TerrainLayer({\n      id: 'bumpyLight',\n      elevationDecoder: {\n        rScaler: 1024,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0,\n      },\n      meshMaxError: 1,\n      elevationData: './tiles/light-{z}-{x}-{y}.png',\n      maxZoom: 10,\n      wrapLongitude: true,\n      texture: './tiles/water-{z}-{x}-{y}.png',\n      material: {\n        ambient: 0.2,\n        diffuse: 1,\n        shininess: 128,\n        specularColor: [255, 192, 64]\n      }\n    });\n    const bumpyTerrain = new TerrainLayer({\n      id: 'bumpyTerrain',\n      elevationDecoder: {\n        rScaler: 1024,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0,\n      },\n      meshMaxError: 1,\n      elevationData: './tiles/light-{z}-{x}-{y}',\n      maxZoom: 10,\n      wrapLongitude: true,\n      texture: 'http://a.tile.stamen.com/terrain/{z}/{x}/{y}.png',\n      material: {\n        ambient: 0.2,\n        diffuse: 1,\n        shininess: 128,\n        specularColor: [255, 192, 64],\n      },\n    });\n\n    const layers = viz === \"bumpy-light\" ? [bumpyLight] : (viz === \"bumpy-terrain\" ? [bumpyTerrain] : (viz === \"hazy-terrain\" ? [terrain, smog] : [watercolor, tonerlabel, smog]) );\n    return (\n      <div>\n        <div>\n          <DeckGL initialViewState={this.state.initialViewState} controller={true} layers={layers} id={\"maincanvas\"} />\n        </div>\n        <div className=\"tweaks\">\n          <div id=\"colophon\">© Lee Butterman 2020. Made in Oakland, California.</div>\n          <div id=\"tweaks\">\n            Tweaks:<br/>\n            <form onChange={e => this.setState({viz: e.target.value})}>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"bumpy-light\" value=\"bumpy-light\" checked={viz === \"bumpy-light\"} />\n                  Light-pollution as topography, light-pollution + water as texture\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"bumpy-terrain\" value=\"bumpy-terrain\" checked={viz === \"bumpy-terrain\"} />\n                  Light-pollution as topography, terrain map as texture\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"hazy-terrain\" value=\"hazy-terrain\" checked={viz === \"hazy-terrain\"} />\n                  Light-pollution as haze on terrain\n                </label>\n              </div>\n              <div>\n                <label>\n                  <input type=\"radio\" name=\"hazy-watercolor\" value=\"hazy-watercolor\" checked={viz === \"hazy-watercolor\"} />\n                  Light-pollution as haze on watercolor\n                </label>\n              </div>\n            </form>\n          </div>          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}