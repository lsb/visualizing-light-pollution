{"ast":null,"code":"var pathPrefix = '';\nvar fileAliases = {};\nexport function setPathPrefix(prefix) {\n  pathPrefix = prefix;\n}\nexport function getPathPrefix() {\n  return pathPrefix;\n}\nexport function addAliases(aliases) {\n  Object.assign(fileAliases, aliases);\n}\nexport function resolvePath(filename) {\n  for (var alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      var replacement = fileAliases[alias];\n      return filename.replace(alias, replacement);\n    }\n  }\n\n  filename += pathPrefix;\n  return filename;\n}","map":{"version":3,"sources":["../../../../src/lib/path-utils/file-aliases.js"],"names":["pathPrefix","fileAliases","Object","filename","replacement"],"mappings":"AAEA,IAAIA,UAAU,GAAd,EAAA;AACA,IAAMC,WAAW,GAAjB,EAAA;AAKA,OAAO,SAAA,aAAA,CAAA,MAAA,EAA+B;AACpCD,EAAAA,UAAU,GAAVA,MAAAA;AACD;AAED,OAAO,SAAA,aAAA,GAAyB;AAC9B,SAAA,UAAA;AACD;AAKD,OAAO,SAAA,UAAA,CAAA,OAAA,EAA6B;AAClCE,EAAAA,MAAM,CAANA,MAAAA,CAAAA,WAAAA,EAAAA,OAAAA;AACD;AAED,OAAO,SAAA,WAAA,CAAA,QAAA,EAA+B;AACpC,OAAK,IAAL,KAAA,IAAA,WAAA,EAAiC;AAC/B,QAAIC,QAAQ,CAARA,UAAAA,CAAJ,KAAIA,CAAJ,EAAgC;AAC9B,UAAMC,WAAW,GAAGH,WAAW,CAA/B,KAA+B,CAA/B;AACA,aAAOE,QAAQ,CAARA,OAAAA,CAAAA,KAAAA,EAAP,WAAOA,CAAP;AACD;AACF;;AACDA,EAAAA,QAAQ,IAARA,UAAAA;AACA,SAAA,QAAA;AACD","sourcesContent":["// Simple file alias mechanisms for tests.\n\nlet pathPrefix = '';\nconst fileAliases = {};\n\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix) {\n  pathPrefix = prefix;\n}\n\nexport function getPathPrefix() {\n  return pathPrefix;\n}\n\n// Note: addAliases are an experimental export,\n// they are only for testing of loaders.gl loaders\n// not inteded as a generic aliasing mechanism\nexport function addAliases(aliases) {\n  Object.assign(fileAliases, aliases);\n}\n\nexport function resolvePath(filename) {\n  for (const alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      const replacement = fileAliases[alias];\n      return filename.replace(alias, replacement);\n    }\n  }\n  filename += pathPrefix;\n  return filename;\n}\n"]},"metadata":{},"sourceType":"module"}