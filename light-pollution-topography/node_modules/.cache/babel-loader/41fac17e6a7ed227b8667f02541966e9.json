{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport assert from '../utils/assert';\n\nvar ViewState = function () {\n  function ViewState(opts) {\n    _classCallCheck(this, ViewState);\n\n    assert(Number.isFinite(opts.width), '`width` must be supplied');\n    assert(Number.isFinite(opts.height), '`height` must be supplied');\n    this._viewportProps = this._applyConstraints(opts);\n  }\n\n  _createClass(ViewState, [{\n    key: \"getViewportProps\",\n    value: function getViewportProps() {\n      return this._viewportProps;\n    }\n  }, {\n    key: \"shortestPathFrom\",\n    value: function shortestPathFrom(viewState) {\n      return this._viewportProps;\n    }\n  }, {\n    key: \"_applyConstraints\",\n    value: function _applyConstraints(props) {\n      return props;\n    }\n  }]);\n\n  return ViewState;\n}();\n\nexport { ViewState as default };","map":{"version":3,"sources":["../../../src/controllers/view-state.js"],"names":["ViewState","assert","Number","opts","viewState","props"],"mappings":";;AAAA,OAAA,MAAA,MAAA,iBAAA;;IAIqBA,S;AACnB,WAAA,SAAA,CAAA,IAAA,EAAkB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAChBC,IAAAA,MAAM,CAACC,MAAM,CAANA,QAAAA,CAAgBC,IAAI,CAArB,KAACD,CAAD,EAAND,0BAAM,CAANA;AACAA,IAAAA,MAAM,CAACC,MAAM,CAANA,QAAAA,CAAgBC,IAAI,CAArB,MAACD,CAAD,EAAND,2BAAM,CAANA;AAEA,SAAA,cAAA,GAAsB,KAAA,iBAAA,CAAtB,IAAsB,CAAtB;AACD;;;;uCAEkB;AACjB,aAAO,KAAP,cAAA;AACD;;;qCAEgBG,S,EAAW;AAC1B,aAAO,KAAP,cAAA;AACD;;;sCAIiBC,K,EAAO;AACvB,aAAA,KAAA;AACD;;;;;;SApBkBL,S","sourcesContent":["import assert from '../utils/assert';\n\n/* Helpers */\n\nexport default class ViewState {\n  constructor(opts) {\n    assert(Number.isFinite(opts.width), '`width` must be supplied');\n    assert(Number.isFinite(opts.height), '`height` must be supplied');\n\n    this._viewportProps = this._applyConstraints(opts);\n  }\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  shortestPathFrom(viewState) {\n    return this._viewportProps;\n  }\n\n  // Redefined by subclass\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    return props;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}