import { global, isBrowser } from '../utils/globals';
var _parseImageNode = global._parseImageNode;
var IMAGE_SUPPORTED = typeof Image !== 'undefined';
var IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';
var NODE_IMAGE_SUPPORTED = Boolean(_parseImageNode);
export function isImageTypeSupported(type) {
  switch (type) {
    case 'auto':
      return IMAGE_BITMAP_SUPPORTED || IMAGE_SUPPORTED || NODE_IMAGE_SUPPORTED;

    case 'imagebitmap':
      return IMAGE_BITMAP_SUPPORTED;

    case 'html':
    case 'image':
      return IMAGE_SUPPORTED;

    case 'ndarray':
    case 'data':
      return isBrowser ? true : NODE_IMAGE_SUPPORTED;

    default:
      throw new Error("@loaders.gl/images: image ".concat(type, " not supported in this environment"));
  }
}
export function getDefaultImageType() {
  if (isImageTypeSupported('image')) {
    return 'image';
  }

  if (isImageTypeSupported('imagebitmap')) {
    return 'imagebitmap';
  }

  if (isImageTypeSupported('data')) {
    return 'data';
  }

  throw new Error("Install '@loaders.gl/polyfills' to parse images under Node.js");
}
//# sourceMappingURL=image-type.js.map