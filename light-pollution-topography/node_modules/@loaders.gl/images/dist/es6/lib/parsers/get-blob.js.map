{"version":3,"sources":["../../../../src/lib/parsers/get-blob.js"],"names":["SVG_DATA_URL_PATTERN","SVG_URL_PATTERN","getBlob","arrayBuffer","url","isSVG","console","warn","Blob","Uint8Array","type","getBlobOrDataUrl","textDecoder","TextDecoder","xmlText","decode","src","btoa","test"],"mappings":"AAEA,MAAMA,oBAAoB,GAAG,uBAA7B;AACA,MAAMC,eAAe,GAAG,mBAAxB;AAEA,OAAO,SAASC,OAAT,CAAiBC,WAAjB,EAA8BC,GAA9B,EAAmC;AACxC,MAAIC,KAAK,CAACD,GAAD,CAAT,EAAgB;AAGdE,IAAAA,OAAO,CAACC,IAAR,CAAa,qCAAb;AACA,WAAO,IAAIC,IAAJ,CAAS,CAAC,IAAIC,UAAJ,CAAeN,WAAf,CAAD,CAAT,EAAwC;AAACO,MAAAA,IAAI,EAAE;AAAP,KAAxC,CAAP;AACD;;AAED,SAAO,IAAIF,IAAJ,CAAS,CAAC,IAAIC,UAAJ,CAAeN,WAAf,CAAD,CAAT,CAAP;AACD;AAED,OAAO,SAASQ,gBAAT,CAA0BR,WAA1B,EAAuCC,GAAvC,EAA4C;AACjD,MAAIC,KAAK,CAACD,GAAD,CAAT,EAAgB;AAEd,UAAMQ,WAAW,GAAG,IAAIC,WAAJ,EAApB;AACA,UAAMC,OAAO,GAAGF,WAAW,CAACG,MAAZ,CAAmBZ,WAAnB,CAAhB;AAMA,UAAMa,GAAG,uCAAgCC,IAAI,CAACH,OAAD,CAApC,CAAT;AACA,WAAOE,GAAP;AACD;;AACD,SAAOd,OAAO,CAACC,WAAD,EAAcC,GAAd,CAAd;AACD;;AAED,SAASC,KAAT,CAAeD,GAAf,EAAoB;AAClB,SAAOA,GAAG,KAAKJ,oBAAoB,CAACkB,IAArB,CAA0Bd,GAA1B,KAAkCH,eAAe,CAACiB,IAAhB,CAAqBd,GAArB,CAAvC,CAAV;AACD","sourcesContent":["/* global Blob, TextDecoder, btoa */ // encodeURLComponent,\n\nconst SVG_DATA_URL_PATTERN = /^data:image\\/svg\\+xml/;\nconst SVG_URL_PATTERN = /\\.svg((\\?|#).*)?$/;\n\nexport function getBlob(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n    // eslint-disable-next-line\n    console.warn('SVG cannot be parsed to imagebitmap');\n    return new Blob([new Uint8Array(arrayBuffer)], {type: 'image/svg+xml'});\n  }\n  // TODO - how to determine mime type? Param? Sniff here?\n  return new Blob([new Uint8Array(arrayBuffer)]); // MIME type not needed?\n}\n\nexport function getBlobOrDataUrl(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // Prepare a properly tagged data URL, and load using normal mechanism\n    const textDecoder = new TextDecoder();\n    const xmlText = textDecoder.decode(arrayBuffer);\n    // TODO Escape in browser to support e.g. Chinese characters\n    // if (typeof unescape === 'function' && typeof encodeURLComponent === 'function') {\n    //   xmlText = unescape(encodeURLComponent(xmlText));\n    // }\n    // base64 encoding is safer. utf-8 fails in some browsers\n    const src = `data:image/svg+xml;base64,${btoa(xmlText)}`;\n    return src;\n  }\n  return getBlob(arrayBuffer, url);\n}\n\nfunction isSVG(url) {\n  return url && (SVG_DATA_URL_PATTERN.test(url) || SVG_URL_PATTERN.test(url));\n}\n"],"file":"get-blob.js"}