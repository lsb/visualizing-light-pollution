{"version":3,"sources":["../../../../src/lib/parsers/parse-to-image-bitmap.js"],"names":["getBlob","imagebitmapOptionsSupported","parseToImageBitmap","arrayBuffer","options","url","blob","imagebitmapOptions","imagebitmap","isEmptyObject","createImageBitmap","error","console","warn","EMPTY_OBJECT","object","key"],"mappings":"AACA,SAAQA,OAAR,QAAsB,YAAtB;AAMA,IAAIC,2BAA2B,GAAG,IAAlC;AAGA,eAAe,eAAeC,kBAAf,CAAkCC,WAAlC,EAA+CC,OAA/C,EAAwDC,GAAxD,EAA6D;AAC1E,QAAMC,IAAI,GAAGN,OAAO,CAACG,WAAD,EAAcE,GAAd,CAApB;AACA,MAAIE,kBAAkB,GAAGH,OAAO,IAAIA,OAAO,CAACI,WAA5C;;AAIA,MAAIC,aAAa,CAACF,kBAAD,CAAb,IAAqC,CAACN,2BAA1C,EAAuE;AACrEM,IAAAA,kBAAkB,GAAG,IAArB;AACD;;AAED,MAAIA,kBAAJ,EAAwB;AACtB,QAAI;AAEF,aAAO,MAAMG,iBAAiB,CAACJ,IAAD,EAAOC,kBAAP,CAA9B;AACD,KAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACAV,MAAAA,2BAA2B,GAAG,KAA9B;AACD;AACF;;AAED,SAAO,MAAMS,iBAAiB,CAACJ,IAAD,CAA9B;AACD;AAED,MAAMQ,YAAY,GAAG,EAArB;;AAEA,SAASL,aAAT,CAAuBM,MAAvB,EAA+B;AAC7B,OAAK,MAAMC,GAAX,IAAkBD,MAAM,IAAID,YAA5B,EAA0C;AACxC,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD","sourcesContent":["/* global createImageBitmap */\nimport {getBlob} from './get-blob';\n\n// Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n// Supported on worker threads, not supported on Edge, IE11 and Safari\n// https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n\nlet imagebitmapOptionsSupported = true;\n\n// TODO - createImageBitmap supports source rect (5 param overload), pass through?\nexport default async function parseToImageBitmap(arrayBuffer, options, url) {\n  const blob = getBlob(arrayBuffer, url);\n  let imagebitmapOptions = options && options.imagebitmap;\n\n  // Firefox crashes if imagebitmapOptions is supplied\n  // Avoid supplying if not provided, remember if not supported\n  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n    imagebitmapOptions = null;\n  }\n\n  if (imagebitmapOptions) {\n    try {\n      // @ts-ignore Options\n      return await createImageBitmap(blob, imagebitmapOptions);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n      imagebitmapOptionsSupported = false;\n    }\n  }\n\n  return await createImageBitmap(blob);\n}\n\nconst EMPTY_OBJECT = {};\n\nfunction isEmptyObject(object) {\n  for (const key in object || EMPTY_OBJECT) {\n    return true;\n  }\n  return false;\n}\n"],"file":"parse-to-image-bitmap.js"}