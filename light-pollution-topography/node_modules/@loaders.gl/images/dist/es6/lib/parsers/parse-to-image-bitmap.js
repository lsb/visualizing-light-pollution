import { getBlob } from './get-blob';
let imagebitmapOptionsSupported = true;
export default async function parseToImageBitmap(arrayBuffer, options, url) {
  const blob = getBlob(arrayBuffer, url);
  let imagebitmapOptions = options && options.imagebitmap;

  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {
    imagebitmapOptions = null;
  }

  if (imagebitmapOptions) {
    try {
      return await createImageBitmap(blob, imagebitmapOptions);
    } catch (error) {
      console.warn(error);
      imagebitmapOptionsSupported = false;
    }
  }

  return await createImageBitmap(blob);
}
const EMPTY_OBJECT = {};

function isEmptyObject(object) {
  for (const key in object || EMPTY_OBJECT) {
    return true;
  }

  return false;
}
//# sourceMappingURL=parse-to-image-bitmap.js.map