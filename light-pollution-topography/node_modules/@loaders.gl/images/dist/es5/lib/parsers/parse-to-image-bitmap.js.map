{"version":3,"sources":["../../../../src/lib/parsers/parse-to-image-bitmap.js"],"names":["imagebitmapOptionsSupported","parseToImageBitmap","arrayBuffer","options","url","blob","imagebitmapOptions","imagebitmap","isEmptyObject","createImageBitmap","console","warn","EMPTY_OBJECT","object","key"],"mappings":";;;;;;;;;;;;;AACA;;AAMA,IAAIA,2BAA2B,GAAG,IAAlC;;SAG8BC,kB;;;;;wFAAf,iBAAkCC,WAAlC,EAA+CC,OAA/C,EAAwDC,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,IADO,GACA,sBAAQH,WAAR,EAAqBE,GAArB,CADA;AAETE,YAAAA,kBAFS,GAEYH,OAAO,IAAIA,OAAO,CAACI,WAF/B;;AAMb,gBAAIC,aAAa,CAACF,kBAAD,CAAb,IAAqC,CAACN,2BAA1C,EAAuE;AACrEM,cAAAA,kBAAkB,GAAG,IAArB;AACD;;AARY,iBAUTA,kBAVS;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAaIG,iBAAiB,CAACJ,IAAD,EAAOC,kBAAP,CAbrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeTI,YAAAA,OAAO,CAACC,IAAR;AACAX,YAAAA,2BAA2B,GAAG,KAA9B;;AAhBS;AAAA;AAAA,mBAoBAS,iBAAiB,CAACJ,IAAD,CApBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAuBf,IAAMO,YAAY,GAAG,EAArB;;AAEA,SAASJ,aAAT,CAAuBK,MAAvB,EAA+B;AAC7B,OAAK,IAAMC,GAAX,IAAkBD,MAAM,IAAID,YAA5B,EAA0C;AACxC,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD","sourcesContent":["/* global createImageBitmap */\nimport {getBlob} from './get-blob';\n\n// Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n// Supported on worker threads, not supported on Edge, IE11 and Safari\n// https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n\nlet imagebitmapOptionsSupported = true;\n\n// TODO - createImageBitmap supports source rect (5 param overload), pass through?\nexport default async function parseToImageBitmap(arrayBuffer, options, url) {\n  const blob = getBlob(arrayBuffer, url);\n  let imagebitmapOptions = options && options.imagebitmap;\n\n  // Firefox crashes if imagebitmapOptions is supplied\n  // Avoid supplying if not provided, remember if not supported\n  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n    imagebitmapOptions = null;\n  }\n\n  if (imagebitmapOptions) {\n    try {\n      // @ts-ignore Options\n      return await createImageBitmap(blob, imagebitmapOptions);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n      imagebitmapOptionsSupported = false;\n    }\n  }\n\n  return await createImageBitmap(blob);\n}\n\nconst EMPTY_OBJECT = {};\n\nfunction isEmptyObject(object) {\n  for (const key in object || EMPTY_OBJECT) {\n    return true;\n  }\n  return false;\n}\n"],"file":"parse-to-image-bitmap.js"}