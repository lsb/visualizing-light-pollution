{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["Matrix4","MVTLoader","load","COORDINATE_SYSTEM","TileLayer","getURLFromTemplate","ClipExtension","WORLD_SIZE","MVTLayer","tile","url","props","data","Promise","reject","getLoadOptions","worldScale","Math","pow","z","xScale","yScale","xOffset","x","yOffset","y","modelMatrix","translate","scale","coordinateSystem","CARTESIAN","extensions","layerName"],"mappings":";;;;;;;AAAA,SAAQA,OAAR,QAAsB,SAAtB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,iBAAR,QAAgC,eAAhC;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAAQC,kBAAR,QAAiC,qBAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,IAAMC,UAAU,GAAG,GAAnB;;IAEqBC,Q;;;;;;;;;;;gCACPC,I,EAAM;AAChB,UAAMC,GAAG,GAAGL,kBAAkB,CAAC,KAAKM,KAAL,CAAWC,IAAZ,EAAkBH,IAAlB,CAA9B;;AACA,UAAI,CAACC,GAAL,EAAU;AACR,eAAOG,OAAO,CAACC,MAAR,CAAe,aAAf,CAAP;AACD;;AACD,aAAOZ,IAAI,CAACQ,GAAD,EAAMT,SAAN,EAAiB,KAAKc,cAAL,EAAjB,CAAX;AACD;;;oCAEeJ,K,EAAO;AAAA,UACdF,IADc,GACNE,KADM,CACdF,IADc;AAErB,UAAMO,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYT,IAAI,CAACU,CAAjB,CAAnB;AAEA,UAAMC,MAAM,GAAGb,UAAU,GAAGS,UAA5B;AACA,UAAMK,MAAM,GAAG,CAACD,MAAhB;AAEA,UAAME,OAAO,GAAIf,UAAU,GAAGE,IAAI,CAACc,CAAnB,GAAwBP,UAAxC;AACA,UAAMQ,OAAO,GAAGjB,UAAU,IAAI,IAAIE,IAAI,CAACgB,CAAL,GAAST,UAAjB,CAA1B;AAEA,UAAMU,WAAW,GAAG,IAAI1B,OAAJ,GAAc2B,SAAd,CAAwB,CAACL,OAAD,EAAUE,OAAV,EAAmB,CAAnB,CAAxB,EAA+CI,KAA/C,CAAqD,CAACR,MAAD,EAASC,MAAT,EAAiB,CAAjB,CAArD,CAApB;AAEAV,MAAAA,KAAK,CAACe,WAAN,GAAoBA,WAApB;AACAf,MAAAA,KAAK,CAACkB,gBAAN,GAAyB1B,iBAAiB,CAAC2B,SAA3C;AACAnB,MAAAA,KAAK,CAACoB,UAAN,gCAAwBpB,KAAK,CAACoB,UAAN,IAAoB,EAA5C,IAAiD,IAAIzB,aAAJ,EAAjD;AAEA,2FAA6BK,KAA7B;AACD;;;;EA1BmCP,S;;SAAjBI,Q;AA6BrBA,QAAQ,CAACwB,SAAT,GAAqB,UAArB","sourcesContent":["import {Matrix4} from 'math.gl';\nimport {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate} from '../tile-layer/utils';\nimport ClipExtension from './clip-extension';\n\nconst WORLD_SIZE = 512;\n\nexport default class MVTLayer extends TileLayer {\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.props.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    return load(url, MVTLoader, this.getLoadOptions());\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().translate([xOffset, yOffset, 0]).scale([xScale, yScale, 1]);\n\n    props.modelMatrix = modelMatrix;\n    props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n    props.extensions = [...(props.extensions || []), new ClipExtension()];\n\n    return super.renderSubLayers(props);\n  }\n}\n\nMVTLayer.layerName = 'MVTLayer';\n"],"file":"mvt-layer.js"}