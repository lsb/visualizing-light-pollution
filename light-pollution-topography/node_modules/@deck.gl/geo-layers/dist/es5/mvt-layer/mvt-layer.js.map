{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["WORLD_SIZE","MVTLayer","tile","url","props","data","Promise","reject","MVTLoader","getLoadOptions","worldScale","Math","pow","z","xScale","yScale","xOffset","x","yOffset","y","modelMatrix","Matrix4","translate","scale","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","extensions","ClipExtension","TileLayer","layerName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,UAAU,GAAG,GAAnB;;IAEqBC,Q;;;;;;;;;;gCACPC,I,EAAM;AAChB,UAAMC,GAAG,GAAG,+BAAmB,KAAKC,KAAL,CAAWC,IAA9B,EAAoCH,IAApC,CAAZ;;AACA,UAAI,CAACC,GAAL,EAAU;AACR,eAAOG,OAAO,CAACC,MAAR,CAAe,aAAf,CAAP;AACD;;AACD,aAAO,gBAAKJ,GAAL,EAAUK,cAAV,EAAqB,KAAKC,cAAL,EAArB,CAAP;AACD;;;oCAEeL,K,EAAO;AAAA,UACdF,IADc,GACNE,KADM,CACdF,IADc;AAErB,UAAMQ,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYV,IAAI,CAACW,CAAjB,CAAnB;AAEA,UAAMC,MAAM,GAAGd,UAAU,GAAGU,UAA5B;AACA,UAAMK,MAAM,GAAG,CAACD,MAAhB;AAEA,UAAME,OAAO,GAAIhB,UAAU,GAAGE,IAAI,CAACe,CAAnB,GAAwBP,UAAxC;AACA,UAAMQ,OAAO,GAAGlB,UAAU,IAAI,IAAIE,IAAI,CAACiB,CAAL,GAAST,UAAjB,CAA1B;AAEA,UAAMU,WAAW,GAAG,IAAIC,aAAJ,GAAcC,SAAd,CAAwB,CAACN,OAAD,EAAUE,OAAV,EAAmB,CAAnB,CAAxB,EAA+CK,KAA/C,CAAqD,CAACT,MAAD,EAASC,MAAT,EAAiB,CAAjB,CAArD,CAApB;AAEAX,MAAAA,KAAK,CAACgB,WAAN,GAAoBA,WAApB;AACAhB,MAAAA,KAAK,CAACoB,gBAAN,GAAyBC,yBAAkBC,SAA3C;AACAtB,MAAAA,KAAK,CAACuB,UAAN,iDAAwBvB,KAAK,CAACuB,UAAN,IAAoB,EAA5C,IAAiD,IAAIC,yBAAJ,EAAjD;AAEA,6HAA6BxB,KAA7B;AACD;;;EA1BmCyB,qB;;;AA6BtC5B,QAAQ,CAAC6B,SAAT,GAAqB,UAArB","sourcesContent":["import {Matrix4} from 'math.gl';\nimport {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate} from '../tile-layer/utils';\nimport ClipExtension from './clip-extension';\n\nconst WORLD_SIZE = 512;\n\nexport default class MVTLayer extends TileLayer {\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.props.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    return load(url, MVTLoader, this.getLoadOptions());\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().translate([xOffset, yOffset, 0]).scale([xScale, yScale, 1]);\n\n    props.modelMatrix = modelMatrix;\n    props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n    props.extensions = [...(props.extensions || []), new ClipExtension()];\n\n    return super.renderSubLayers(props);\n  }\n}\n\nMVTLayer.layerName = 'MVTLayer';\n"],"file":"mvt-layer.js"}