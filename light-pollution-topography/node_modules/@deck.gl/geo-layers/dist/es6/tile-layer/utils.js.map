{"version":3,"sources":["../../../src/tile-layer/utils.js"],"names":["lngLatToWorld","TILE_SIZE","urlType","type","value","validate","Array","isArray","every","url","equals","value1","value2","len","length","i","getURLFromTemplate","template","properties","index","Math","abs","x","y","replace","_","property","getBoundingBox","viewport","corners","unproject","width","height","min","max","getOSMTileIndex","lngLat","scale","getTileIndex","getScale","z","tileSize","pow","osmTile2lngLat","lng","n","PI","lat","atan","exp","tile2XY","tileToBoundingBox","isGeospatial","west","north","east","south","left","top","right","bottom","getIdentityTileIndices","bbox","minX","minY","maxX","maxY","indices","floor","push","getOSMTileIndices","normalizedX","getTileIndices","maxZoom","minZoom","ceil","zoom","Number","isFinite"],"mappings":"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","sourcesContent":["import {lngLatToWorld} from '@math.gl/web-mercator';\n\nconst TILE_SIZE = 512;\n\nexport const urlType = {\n  type: 'url',\n  value: '',\n  validate: value =>\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equals: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nexport function getURLFromTemplate(template, properties) {\n  if (!template || !template.length) {\n    return null;\n  }\n  if (Array.isArray(template)) {\n    const index = Math.abs(properties.x + properties.y) % template.length;\n    template = template[index];\n  }\n  return template.replace(/\\{ *([\\w_-]+) *\\}/g, (_, property) => properties[property]);\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport) {\n  const corners = [\n    viewport.unproject([0, 0]),\n    viewport.unproject([viewport.width, 0]),\n    viewport.unproject([0, viewport.height]),\n    viewport.unproject([viewport.width, viewport.height])\n  ];\n  return [\n    Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n    Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]),\n    Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n    Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])\n  ];\n}\n\n/*\n * get the OSM tile index at the given location\n * https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames\n */\nfunction getOSMTileIndex(lngLat, scale) {\n  let [x, y] = lngLatToWorld(lngLat);\n  x *= scale / TILE_SIZE;\n  y = (1 - y / TILE_SIZE) * scale;\n  return [x, y];\n}\n\nfunction getTileIndex([x, y], scale) {\n  return [(x * scale) / TILE_SIZE, (y * scale) / TILE_SIZE];\n}\n\nfunction getScale(z, tileSize = TILE_SIZE) {\n  return (Math.pow(2, z) * TILE_SIZE) / tileSize;\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nfunction osmTile2lngLat(x, y, z) {\n  const scale = getScale(z);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x, y, z, tileSize) {\n  const scale = getScale(z, tileSize);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\n\nexport function tileToBoundingBox(viewport, x, y, z, tileSize = TILE_SIZE) {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z, tileSize);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(viewport, z, tileSize) {\n  const bbox = getBoundingBox(viewport);\n  const scale = getScale(z, tileSize);\n\n  const [minX, minY] = getTileIndex([bbox[0], bbox[1]], scale);\n  const [maxX, maxY] = getTileIndex([bbox[2], bbox[3]], scale);\n  const indices = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n\n  return indices;\n}\n\nfunction getOSMTileIndices(viewport, z) {\n  const bbox = getBoundingBox(viewport);\n  const scale = getScale(z);\n  /*\n    minX, maxX could be out of bounds if longitude is near the 180 meridian or multiple worlds\n    are shown:\n                |       |\n    actual   -2 -1  0  1  2  3\n    expected  2  3  0  1  2  3\n   */\n  let [minX, minY] = getOSMTileIndex([bbox[0], bbox[3]], scale);\n  let [maxX, maxY] = getOSMTileIndex([bbox[2], bbox[1]], scale);\n  const indices = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  minX = Math.floor(minX);\n  maxX = Math.min(minX + scale, maxX); // Avoid creating duplicates\n  minY = Math.max(0, Math.floor(minY));\n  maxY = Math.min(scale, maxY);\n  for (let x = minX; x < maxX; x++) {\n    for (let y = minY; y < maxY; y++) {\n      // Cast to valid x between [0, scale]\n      const normalizedX = x - Math.floor(x / scale) * scale;\n      indices.push({x: normalizedX, y, z});\n    }\n  }\n\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\nexport function getTileIndices(viewport, maxZoom, minZoom, tileSize = TILE_SIZE) {\n  let z = Math.ceil(viewport.zoom);\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    return [];\n  }\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z)\n    : getIdentityTileIndices(viewport, z, tileSize);\n}\n"],"file":"utils.js"}