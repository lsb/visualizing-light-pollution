{"version":3,"sources":["../../../src/lib/layer.js"],"names":["COORDINATE_SYSTEM","AttributeManager","UniformTransitionManager","diffProps","validateProps","count","log","debug","withParameters","setParameters","assert","mergeShaders","projectPosition","getWorldPosition","typedArrayManager","Component","LayerState","worldToPixels","load","TRACE_CHANGE_FLAG","TRACE_INITIALIZE","TRACE_UPDATE","TRACE_FINALIZE","TRACE_MATCHED","EMPTY_ARRAY","Object","freeze","pickingColorCache","Uint8ClampedArray","defaultProps","data","type","value","async","dataComparator","_dataDiff","__diff","compare","optional","dataTransform","onDataLoad","fetch","url","layer","getLoadOptions","updateTriggers","visible","pickable","opacity","min","max","onHover","onClick","onDragStart","onDrag","onDragEnd","coordinateSystem","DEFAULT","coordinateOrigin","modelMatrix","wrapLongitude","positionFormat","colorFormat","parameters","uniforms","extensions","getPolygonOffset","layerIndex","highlightedObjectIndex","autoHighlight","highlightColor","Layer","toString","className","constructor","layerName","name","props","id","setState","updateObject","setChangeFlags","stateChanged","assign","state","setNeedsRedraw","redraw","internalState","needsRedraw","setNeedsUpdate","context","layerManager","String","needsUpdate","getNeedsRedraw","opts","clearRedrawFlags","_getNeedsRedraw","hasUniformTransition","shouldUpdateState","_getUpdateParams","uniformTransitions","active","isLoaded","isAsyncPropLoading","isPickable","getModels","models","model","getAttributeManager","attributeManager","getCurrentLayer","loadOptions","project","xyz","viewport","worldPosition","x","y","z","pixelProjectionMatrix","length","unproject","xy","use64bitPositions","LNGLAT","CARTESIAN","info","pickingEvent","nullPickingColor","encodePickingColor","i","target","decodePickingColor","color","Uint8Array","i1","i2","i3","index","initializeState","Error","getShaders","shaders","extension","call","oldProps","changeFlags","propsOrDataChanged","updateState","dataChanged","Array","isArray","dataRange","invalidateAll","finalizeState","delete","finalize","clear","draw","getPickingInfo","mode","object","invalidateAttribute","diffReason","invalidate","updateAttributes","changedAttributes","_setModelAttributes","_updateAttributes","numInstances","getNumInstances","startIndices","getStartIndices","update","transitions","buffers","attributes","ignoreUnknownAttributes","getChangedAttributes","clearChangedFlags","_updateAttributeTransition","updateTransition","_updateUniformTransition","propsInTransition","create","key","defineProperty","calculateInstancePickingColors","attribute","cacheSize","allocate","size","copy","newCacheSize","pickingColor","subarray","excludeAttributes","userData","shaderAttributes","getShaderAttributes","setAttributes","clearPickingColor","pickingColors","instancePickingColors","colors","start","getVertexOffset","end","buffer","subData","offset","restorePickingColors","updateSubBuffer","startOffset","undefined","_initialize","_initState","propsChanged","viewportChanged","extensionsChanged","_updateState","_update","stateNeedsUpdate","currentProps","updateParams","gl","error","_updateModules","isComposite","_renderLayers","setInstanceCount","clearChangeFlags","resetOldProps","_finalize","drawLayer","moduleParameters","Math","pow","setModuleParameters","offsets","polygonOffset","getChangeFlags","flags","updateTriggersChanged","somethingChanged","newProps","transitionsChanged","add","updateModuleSettings","pickingSelectedColor","pickingHighlightColor","Number","isInteger","getOldProps","attributeManagerNeedsRedraw","_getAttributeManager","stats","timeline","isFinite","addInstanced","noAlloc","get","deprecated","onAsyncPropUpdated","_onAsyncPropUpdated","bind","setAsyncProps","_transferState","oldLayer"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable react/no-direct-mutation-state */\nimport {COORDINATE_SYSTEM} from './constants';\nimport AttributeManager from './attribute/attribute-manager';\nimport UniformTransitionManager from './uniform-transition-manager';\nimport {diffProps, validateProps} from '../lifecycle/props';\nimport {count} from '../utils/count';\nimport log from '../utils/log';\nimport debug from '../debug';\nimport GL from '@luma.gl/constants';\nimport {withParameters, setParameters} from '@luma.gl/core';\nimport assert from '../utils/assert';\nimport {mergeShaders} from '../utils/shader';\nimport {projectPosition, getWorldPosition} from '../shaderlib/project/project-functions';\nimport typedArrayManager from '../utils/typed-array-manager';\n\nimport Component from '../lifecycle/component';\nimport LayerState from './layer-state';\n\nimport {worldToPixels} from '@math.gl/web-mercator';\n\nimport {load} from '@loaders.gl/core';\n\nconst TRACE_CHANGE_FLAG = 'layer.changeFlag';\nconst TRACE_INITIALIZE = 'layer.initialize';\nconst TRACE_UPDATE = 'layer.update';\nconst TRACE_FINALIZE = 'layer.finalize';\nconst TRACE_MATCHED = 'layer.matched';\n\nconst EMPTY_ARRAY = Object.freeze([]);\n\nlet pickingColorCache = new Uint8ClampedArray(0);\n\nconst defaultProps = {\n  // data: Special handling for null, see below\n  data: {type: 'data', value: EMPTY_ARRAY, async: true},\n  dataComparator: null,\n  _dataDiff: {type: 'function', value: data => data && data.__diff, compare: false, optional: true},\n  dataTransform: {type: 'function', value: null, compare: false, optional: true},\n  onDataLoad: {type: 'function', value: null, compare: false, optional: true},\n  fetch: {\n    type: 'function',\n    value: (url, {layer}) => load(url, layer.getLoadOptions()),\n    compare: false\n  },\n  updateTriggers: {}, // Update triggers: a core change detection mechanism in deck.gl\n\n  visible: true,\n  pickable: false,\n  opacity: {type: 'number', min: 0, max: 1, value: 1},\n\n  onHover: {type: 'function', value: null, compare: false, optional: true},\n  onClick: {type: 'function', value: null, compare: false, optional: true},\n  onDragStart: {type: 'function', value: null, compare: false, optional: true},\n  onDrag: {type: 'function', value: null, compare: false, optional: true},\n  onDragEnd: {type: 'function', value: null, compare: false, optional: true},\n\n  coordinateSystem: COORDINATE_SYSTEM.DEFAULT,\n  coordinateOrigin: {type: 'array', value: [0, 0, 0], compare: true},\n  modelMatrix: {type: 'array', value: null, compare: true, optional: true},\n  wrapLongitude: false,\n  positionFormat: 'XYZ',\n  colorFormat: 'RGBA',\n\n  parameters: {},\n  uniforms: {},\n  extensions: [],\n\n  // Offset depth based on layer index to avoid z-fighting.\n  // Negative values pull layer towards the camera\n  // https://www.opengl.org/archives/resources/faq/technical/polygonoffset.htm\n  getPolygonOffset: {\n    type: 'function',\n    value: ({layerIndex}) => [0, -layerIndex * 100],\n    compare: false\n  },\n\n  // Selection/Highlighting\n  highlightedObjectIndex: null,\n  autoHighlight: false,\n  highlightColor: {type: 'color', value: [0, 0, 128, 128]}\n};\n\nexport default class Layer extends Component {\n  toString() {\n    const className = this.constructor.layerName || this.constructor.name;\n    return `${className}({id: '${this.props.id}'})`;\n  }\n\n  // Public API\n\n  // Updates selected state members and marks the object for redraw\n  setState(updateObject) {\n    this.setChangeFlags({stateChanged: true});\n    Object.assign(this.state, updateObject);\n    this.setNeedsRedraw();\n  }\n\n  // Sets the redraw flag for this layer, will trigger a redraw next animation frame\n  setNeedsRedraw(redraw = true) {\n    if (this.internalState) {\n      this.internalState.needsRedraw = redraw;\n    }\n  }\n\n  // This layer needs a deep update\n  setNeedsUpdate() {\n    this.context.layerManager.setNeedsUpdate(String(this));\n    this.internalState.needsUpdate = true;\n  }\n\n  // Checks state of attributes and model\n  getNeedsRedraw(opts = {clearRedrawFlags: false}) {\n    return this._getNeedsRedraw(opts);\n  }\n\n  // Checks if layer attributes needs updating\n  needsUpdate() {\n    // Call subclass lifecycle method\n    return (\n      this.internalState.needsUpdate ||\n      this.hasUniformTransition() ||\n      this.shouldUpdateState(this._getUpdateParams())\n    );\n    // End lifecycle method\n  }\n\n  hasUniformTransition() {\n    return this.internalState.uniformTransitions.active;\n  }\n\n  get isLoaded() {\n    return this.internalState && !this.internalState.isAsyncPropLoading();\n  }\n\n  // Returns true if the layer is pickable and visible.\n  isPickable() {\n    return this.props.pickable && this.props.visible;\n  }\n\n  // Return an array of models used by this layer, can be overriden by layer subclass\n  getModels() {\n    return this.state && (this.state.models || (this.state.model ? [this.state.model] : []));\n  }\n\n  getAttributeManager() {\n    return this.internalState && this.internalState.attributeManager;\n  }\n\n  // Returns the most recent layer that matched to this state\n  // (When reacting to an async event, this layer may no longer be the latest)\n  getCurrentLayer() {\n    return this.internalState && this.internalState.layer;\n  }\n\n  // Returns the default parse options for async props\n  getLoadOptions() {\n    return this.props.loadOptions;\n  }\n\n  // PROJECTION METHODS\n\n  // Projects a point with current map state (lat, lon, zoom, pitch, bearing)\n  // From the current layer's coordinate system to screen\n  project(xyz) {\n    const {viewport} = this.context;\n    const worldPosition = getWorldPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n    const [x, y, z] = worldToPixels(worldPosition, viewport.pixelProjectionMatrix);\n    return xyz.length === 2 ? [x, y] : [x, y, z];\n  }\n\n  // Note: this does not reverse `project`.\n  // Always unprojects to the viewport's coordinate system\n  unproject(xy) {\n    const {viewport} = this.context;\n    return viewport.unproject(xy);\n  }\n\n  projectPosition(xyz) {\n    return projectPosition(xyz, {\n      viewport: this.context.viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n  }\n\n  use64bitPositions() {\n    const {coordinateSystem} = this.props;\n    return (\n      coordinateSystem === COORDINATE_SYSTEM.DEFAULT ||\n      coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n      coordinateSystem === COORDINATE_SYSTEM.CARTESIAN\n    );\n  }\n\n  // Event handling\n  onHover(info, pickingEvent) {\n    if (this.props.onHover) {\n      return this.props.onHover(info, pickingEvent);\n    }\n    return false;\n  }\n\n  onClick(info, pickingEvent) {\n    if (this.props.onClick) {\n      return this.props.onClick(info, pickingEvent);\n    }\n    return false;\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  // @return {Array} - a black color\n  nullPickingColor() {\n    return [0, 0, 0];\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  encodePickingColor(i, target = []) {\n    target[0] = (i + 1) & 255;\n    target[1] = ((i + 1) >> 8) & 255;\n    target[2] = (((i + 1) >> 8) >> 8) & 255;\n    return target;\n  }\n\n  // Returns the index corresponding to a picking color that doesn't match any subfeature\n  // @param {Uint8Array} color - color array to be decoded\n  // @return {Array} - the decoded picking color\n  decodePickingColor(color) {\n    assert(color instanceof Uint8Array);\n    const [i1, i2, i3] = color;\n    // 1 was added to seperate from no selection\n    const index = i1 + i2 * 256 + i3 * 65536 - 1;\n    return index;\n  }\n\n  // //////////////////////////////////////////////////\n  // LIFECYCLE METHODS, overridden by the layer subclasses\n\n  // Called once to set up the initial state\n  // App can create WebGL resources\n  initializeState() {\n    throw new Error(`Layer ${this} has not defined initializeState`);\n  }\n\n  getShaders(shaders) {\n    for (const extension of this.props.extensions) {\n      shaders = mergeShaders(shaders, extension.getShaders.call(this, extension));\n    }\n    return shaders;\n  }\n\n  // Let's layer control if updateState should be called\n  shouldUpdateState({oldProps, props, context, changeFlags}) {\n    return changeFlags.propsOrDataChanged;\n  }\n\n  // Default implementation, all attributes will be invalidated and updated\n  // when data changes\n  /* eslint-disable-next-line complexity */\n  updateState({oldProps, props, context, changeFlags}) {\n    const attributeManager = this.getAttributeManager();\n    if (changeFlags.dataChanged && attributeManager) {\n      const {dataChanged} = changeFlags;\n      if (Array.isArray(dataChanged)) {\n        // is partial update\n        for (const dataRange of dataChanged) {\n          attributeManager.invalidateAll(dataRange);\n        }\n      } else {\n        attributeManager.invalidateAll();\n      }\n    }\n  }\n\n  // Called once when layer is no longer matched and state will be discarded\n  // App can destroy WebGL resources here\n  finalizeState() {\n    for (const model of this.getModels()) {\n      model.delete();\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.finalize();\n    }\n    this.internalState.uniformTransitions.clear();\n  }\n\n  // If state has a model, draw it with supplied uniforms\n  draw(opts) {\n    for (const model of this.getModels()) {\n      model.draw(opts);\n    }\n  }\n\n  // called to populate the info object that is passed to the event handler\n  // @return null to cancel event\n  getPickingInfo({info, mode}) {\n    const {index} = info;\n\n    if (index >= 0) {\n      // If props.data is an indexable array, get the object\n      if (Array.isArray(this.props.data)) {\n        info.object = this.props.data[index];\n      }\n    }\n\n    return info;\n  }\n\n  // END LIFECYCLE METHODS\n  // //////////////////////////////////////////////////\n\n  // INTERNAL METHODS\n\n  // Default implementation of attribute invalidation, can be redefined\n  invalidateAttribute(name = 'all', diffReason = '') {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    if (name === 'all') {\n      attributeManager.invalidateAll();\n    } else {\n      attributeManager.invalidate(name);\n    }\n  }\n\n  updateAttributes(changedAttributes) {\n    for (const model of this.getModels()) {\n      this._setModelAttributes(model, changedAttributes);\n    }\n  }\n\n  // Calls attribute manager to update any WebGL attributes\n  _updateAttributes(props) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    // Figure out data length\n    const numInstances = this.getNumInstances(props);\n    const startIndices = this.getStartIndices(props);\n\n    attributeManager.update({\n      data: props.data,\n      numInstances,\n      startIndices,\n      props,\n      transitions: props.transitions,\n      buffers: props.data.attributes,\n      context: this,\n      // Don't worry about non-attribute props\n      ignoreUnknownAttributes: true\n    });\n\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.updateAttributes(changedAttributes);\n  }\n\n  // Update attribute transitions. This is called in drawLayer, no model updates required.\n  _updateAttributeTransition() {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.updateTransition();\n    }\n  }\n\n  // Update uniform (prop) transitions. This is called in updateState, may result in model updates.\n  _updateUniformTransition() {\n    const {uniformTransitions} = this.internalState;\n    if (uniformTransitions.active) {\n      // clone props\n      const propsInTransition = uniformTransitions.update();\n      const props = Object.create(this.props);\n      for (const key in propsInTransition) {\n        Object.defineProperty(props, key, {value: propsInTransition[key]});\n      }\n      return props;\n    }\n    return this.props;\n  }\n\n  calculateInstancePickingColors(attribute, {numInstances}) {\n    // calculateInstancePickingColors always generates the same sequence.\n    // pickingColorCache saves the largest generated sequence for reuse\n    const cacheSize = pickingColorCache.length / 3;\n\n    if (cacheSize < numInstances) {\n      pickingColorCache = typedArrayManager.allocate(pickingColorCache, numInstances, {\n        size: 3,\n        copy: true\n      });\n      // If the attribute is larger than the cache, resize the cache and populate the missing chunk\n      const newCacheSize = pickingColorCache.length / 3;\n      const pickingColor = [];\n      assert(newCacheSize < 16777215, 'index out of picking color range');\n\n      for (let i = cacheSize; i < newCacheSize; i++) {\n        this.encodePickingColor(i, pickingColor);\n        pickingColorCache[i * 3 + 0] = pickingColor[0];\n        pickingColorCache[i * 3 + 1] = pickingColor[1];\n        pickingColorCache[i * 3 + 2] = pickingColor[2];\n      }\n    }\n\n    attribute.value = pickingColorCache.subarray(0, numInstances * 3);\n  }\n\n  _setModelAttributes(model, changedAttributes) {\n    const attributeManager = this.getAttributeManager();\n    const excludeAttributes = model.userData.excludeAttributes || {};\n    const shaderAttributes = attributeManager.getShaderAttributes(\n      changedAttributes,\n      excludeAttributes\n    );\n\n    model.setAttributes(shaderAttributes);\n  }\n\n  // Sets the specified instanced picking color to null picking color. Used for multi picking.\n  clearPickingColor(color) {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n\n    const i = this.decodePickingColor(color);\n    const start = colors.getVertexOffset(i);\n    const end = colors.getVertexOffset(i + 1);\n\n    // Fill the sub buffer with 0s\n    colors.buffer.subData({\n      data: new Uint8Array(end - start),\n      offset: start // 1 byte per element\n    });\n  }\n\n  restorePickingColors() {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    colors.updateSubBuffer({startOffset: 0});\n  }\n\n  // Deduces numer of instances. Intention is to support:\n  // - Explicit setting of numInstances\n  // - Auto-deduction for ES6 containers that define a size member\n  // - Auto-deduction for Classic Arrays via the built-in length attribute\n  // - Auto-deduction via arrays\n  getNumInstances(props) {\n    props = props || this.props;\n\n    // First Check if app has provided an explicit value\n    if (props.numInstances !== undefined) {\n      return props.numInstances;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.numInstances !== undefined) {\n      return this.state.numInstances;\n    }\n\n    // Use container library to get a count for any ES6 container or object\n    return count(props.data);\n  }\n\n  // Buffer layout describes how many attribute values are packed for each data object\n  // The default (null) is one value each object.\n  // Some data formats (e.g. paths, polygons) have various length. Their buffer layout\n  //  is in the form of [L0, L1, L2, ...]\n  getStartIndices(props) {\n    props = props || this.props;\n\n    // First Check if startIndices is provided as an explicit value\n    if (props.startIndices !== undefined) {\n      return props.startIndices;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.startIndices) {\n      return this.state.startIndices;\n    }\n\n    return null;\n  }\n\n  // LAYER MANAGER API\n  // Should only be called by the deck.gl LayerManager class\n\n  // Called by layer manager when a new layer is found\n  /* eslint-disable max-statements */\n  _initialize() {\n    debug(TRACE_INITIALIZE, this);\n\n    this._initState();\n\n    // Call subclass lifecycle methods\n    this.initializeState(this.context);\n    // Initialize extensions\n    for (const extension of this.props.extensions) {\n      extension.initializeState.call(this, this.context, extension);\n    }\n    // End subclass lifecycle methods\n\n    // initializeState callback tends to clear state\n    this.setChangeFlags({\n      dataChanged: true,\n      propsChanged: true,\n      viewportChanged: true,\n      extensionsChanged: true\n    });\n\n    this._updateState();\n  }\n\n  // Called by layer manager\n  // if this layer is new (not matched with an existing layer) oldProps will be empty object\n  _update() {\n    // Call subclass lifecycle method\n    const stateNeedsUpdate = this.needsUpdate();\n    // End lifecycle method\n    debug(TRACE_UPDATE, this, stateNeedsUpdate);\n\n    if (stateNeedsUpdate) {\n      this._updateState();\n    }\n  }\n  /* eslint-enable max-statements */\n\n  // Common code for _initialize and _update\n  _updateState() {\n    const currentProps = this.props;\n    const propsInTransition = this._updateUniformTransition();\n    this.internalState.propsInTransition = propsInTransition;\n    // Overwrite this.props during update to use in-transition prop values\n    this.props = propsInTransition;\n\n    const updateParams = this._getUpdateParams();\n\n    // Safely call subclass lifecycle methods\n    if (this.context.gl) {\n      this.updateState(updateParams);\n    } else {\n      try {\n        this.updateState(updateParams);\n      } catch (error) {\n        // ignore error if gl context is missing\n      }\n    }\n    // Execute extension updates\n    for (const extension of this.props.extensions) {\n      extension.updateState.call(this, updateParams, extension);\n    }\n    this._updateModules(updateParams);\n    // End subclass lifecycle methods\n\n    if (this.isComposite) {\n      // Render or update previously rendered sublayers\n      this._renderLayers(updateParams);\n    } else {\n      this.setNeedsRedraw();\n      // Add any subclass attributes\n      this._updateAttributes(this.props);\n\n      // Note: Automatic instance count update only works for single layers\n      if (this.state.model) {\n        this.state.model.setInstanceCount(this.getNumInstances());\n      }\n    }\n\n    this.props = currentProps;\n    this.clearChangeFlags();\n    this.internalState.needsUpdate = false;\n    this.internalState.resetOldProps();\n  }\n\n  // Called by manager when layer is about to be disposed\n  // Note: not guaranteed to be called on application shutdown\n  _finalize() {\n    debug(TRACE_FINALIZE, this);\n    assert(this.internalState && this.state);\n\n    // Call subclass lifecycle method\n    this.finalizeState(this.context);\n    // Finalize extensions\n    for (const extension of this.props.extensions) {\n      extension.finalizeState.call(this, extension);\n    }\n  }\n\n  // Calculates uniforms\n  drawLayer({moduleParameters = null, uniforms = {}, parameters = {}}) {\n    this._updateAttributeTransition();\n\n    const currentProps = this.props;\n    // Overwrite this.props during redraw to use in-transition prop values\n    // `internalState.propsInTransition` could be missing if `updateState` failed\n    this.props = this.internalState.propsInTransition || currentProps;\n\n    const {opacity} = this.props;\n    // apply gamma to opacity to make it visually \"linear\"\n    uniforms.opacity = Math.pow(opacity, 1 / 2.2);\n\n    // TODO/ib - hack move to luma Model.draw\n    if (moduleParameters) {\n      this.setModuleParameters(moduleParameters);\n    }\n\n    // Apply polygon offset to avoid z-fighting\n    // TODO - move to draw-layers\n    const {getPolygonOffset} = this.props;\n    const offsets = (getPolygonOffset && getPolygonOffset(uniforms)) || [0, 0];\n\n    setParameters(this.context.gl, {polygonOffset: offsets});\n\n    // Call subclass lifecycle method\n    withParameters(this.context.gl, parameters, () => {\n      const opts = {moduleParameters, uniforms, parameters, context: this.context};\n\n      // extensions\n      for (const extension of this.props.extensions) {\n        extension.draw.call(this, opts, extension);\n      }\n\n      this.draw(opts);\n    });\n\n    // End lifecycle method\n\n    this.props = currentProps;\n  }\n\n  // Helper methods\n  getChangeFlags() {\n    return this.internalState.changeFlags;\n  }\n\n  // Dirty some change flags, will be handled by updateLayer\n  /* eslint-disable complexity */\n  setChangeFlags(flags) {\n    const {changeFlags} = this.internalState;\n\n    for (const key in changeFlags) {\n      if (flags[key] && !changeFlags[key]) {\n        changeFlags[key] = flags[key];\n        debug(TRACE_CHANGE_FLAG, this, key, flags);\n      }\n    }\n\n    // Update composite flags\n    const propsOrDataChanged =\n      changeFlags.dataChanged ||\n      changeFlags.updateTriggersChanged ||\n      changeFlags.propsChanged ||\n      changeFlags.extensionsChanged;\n    changeFlags.propsOrDataChanged = propsOrDataChanged;\n    changeFlags.somethingChanged =\n      propsOrDataChanged || flags.viewportChanged || flags.stateChanged;\n  }\n  /* eslint-enable complexity */\n\n  // Clear all changeFlags, typically after an update\n  clearChangeFlags() {\n    this.internalState.changeFlags = {\n      // Primary changeFlags, can be strings stating reason for change\n      dataChanged: false,\n      propsChanged: false,\n      updateTriggersChanged: false,\n      viewportChanged: false,\n      stateChanged: false,\n      extensionsChanged: false,\n\n      // Derived changeFlags\n      propsOrDataChanged: false,\n      somethingChanged: false\n    };\n  }\n\n  // Compares the layers props with old props from a matched older layer\n  // and extracts change flags that describe what has change so that state\n  // can be update correctly with minimal effort\n  diffProps(newProps, oldProps) {\n    const changeFlags = diffProps(newProps, oldProps);\n\n    // iterate over changedTriggers\n    if (changeFlags.updateTriggersChanged) {\n      for (const key in changeFlags.updateTriggersChanged) {\n        if (changeFlags.updateTriggersChanged[key]) {\n          this.invalidateAttribute(key);\n        }\n      }\n    }\n\n    // trigger uniform transitions\n    if (changeFlags.transitionsChanged) {\n      for (const key in changeFlags.transitionsChanged) {\n        // prop changed and transition is enabled\n        this.internalState.uniformTransitions.add(\n          key,\n          oldProps[key],\n          newProps[key],\n          newProps.transitions[key]\n        );\n      }\n    }\n\n    return this.setChangeFlags(changeFlags);\n  }\n\n  // Called by layer manager to validate props (in development)\n  validateProps() {\n    validateProps(this.props);\n  }\n\n  setModuleParameters(moduleParameters) {\n    for (const model of this.getModels()) {\n      model.updateModuleSettings(moduleParameters);\n    }\n  }\n\n  // PRIVATE METHODS\n  _updateModules({props, oldProps}) {\n    // Picking module parameters\n    const {autoHighlight, highlightedObjectIndex, highlightColor} = props;\n    if (\n      oldProps.autoHighlight !== autoHighlight ||\n      oldProps.highlightedObjectIndex !== highlightedObjectIndex ||\n      oldProps.highlightColor !== highlightColor\n    ) {\n      const parameters = {};\n      if (!autoHighlight) {\n        parameters.pickingSelectedColor = null;\n      }\n      // TODO - fix in luma?\n      highlightColor[3] = highlightColor[3] || 255;\n      parameters.pickingHighlightColor = highlightColor;\n\n      // highlightedObjectIndex will overwrite any settings from auto highlighting.\n      if (Number.isInteger(highlightedObjectIndex)) {\n        parameters.pickingSelectedColor =\n          highlightedObjectIndex >= 0 ? this.encodePickingColor(highlightedObjectIndex) : null;\n      }\n\n      this.setModuleParameters(parameters);\n    }\n  }\n\n  _getUpdateParams() {\n    return {\n      props: this.props,\n      oldProps: this.internalState.getOldProps(),\n      context: this.context,\n      changeFlags: this.internalState.changeFlags\n    };\n  }\n\n  // Checks state of attributes and model\n  _getNeedsRedraw(opts) {\n    // this method may be called by the render loop as soon a the layer\n    // has been created, so guard against uninitialized state\n    if (!this.internalState) {\n      return false;\n    }\n\n    let redraw = false;\n    redraw = redraw || (this.internalState.needsRedraw && this.id);\n    this.internalState.needsRedraw = this.internalState.needsRedraw && !opts.clearRedrawFlags;\n\n    // TODO - is attribute manager needed? - Model should be enough.\n    const attributeManager = this.getAttributeManager();\n    const attributeManagerNeedsRedraw = attributeManager && attributeManager.getNeedsRedraw(opts);\n    redraw = redraw || attributeManagerNeedsRedraw;\n\n    return redraw;\n  }\n\n  // Create new attribute manager\n  _getAttributeManager() {\n    return new AttributeManager(this.context.gl, {\n      id: this.props.id,\n      stats: this.context.stats,\n      timeline: this.context.timeline\n    });\n  }\n\n  _initState() {\n    assert(!this.internalState && !this.state);\n    assert(isFinite(this.props.coordinateSystem), `${this.id}: invalid coordinateSystem`);\n\n    const attributeManager = this._getAttributeManager();\n\n    if (attributeManager) {\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slightly slows down non instanced layers\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          noAlloc: true,\n          update: this.calculateInstancePickingColors\n        }\n      });\n    }\n\n    this.internalState = new LayerState({\n      attributeManager,\n      layer: this\n    });\n    this.clearChangeFlags(); // populate this.internalState.changeFlags\n\n    this.state = {};\n    // for backwards compatibility with older layers\n    // TODO - remove in next release\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(this.state, 'attributeManager', {\n      get: () => {\n        log.deprecated('layer.state.attributeManager', 'layer.getAttributeManager()');\n        return attributeManager;\n      }\n    });\n    /* eslint-enable accessor-pairs */\n\n    this.internalState.layer = this;\n    this.internalState.uniformTransitions = new UniformTransitionManager(this.context.timeline);\n    this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n  }\n\n  // Called by layer manager to transfer state from an old layer\n  _transferState(oldLayer) {\n    debug(TRACE_MATCHED, this, this === oldLayer);\n\n    const {state, internalState} = oldLayer;\n    assert(state && internalState);\n\n    if (this === oldLayer) {\n      return;\n    }\n\n    // Move internalState\n    this.internalState = internalState;\n    this.internalState.layer = this;\n\n    // Move state\n    this.state = state;\n    // We keep the state ref on old layers to support async actions\n    // oldLayer.state = null;\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    this.diffProps(this.props, this.internalState.getOldProps());\n  }\n\n  _onAsyncPropUpdated() {\n    this.diffProps(this.props, this.internalState.getOldProps());\n    this.setNeedsUpdate();\n  }\n}\n\nLayer.layerName = 'Layer';\nLayer.defaultProps = defaultProps;\n"],"file":"layer.js"}